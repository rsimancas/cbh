@model CBHWA.Areas.Reports.Models.rptQuoteCustomer
@{
    //ViewBag.Title = "Index";
    string pdfPath = Href(string.Format("~/Reports/rptQuoteCustomer/PDF?id={0}&wSch={1}&employeeKey={2}", Model.id, Model.wSch, Model.EmployeeKey));
    var mailTo = Request.IsSecureConnection ? "https://" : "http://";
    mailTo += Request.Url.Host + (Request.Url.IsDefaultPort ? "" : ":" + Request.Url.Port);
}

<div class="container">
    <div class="row">
        <div class="col-lg-12">
            <div class="sep5"></div>
            <div class="btn-toolbar">
                <div class="btn-group">
                    <a href="#" id="btnMailto" class="btn btn-success"><i class="fa fa-paperclip"></i> Send Mail</a>
                    <a href="#" class="btn btn-success" data-toggle="modal" data-target="#modalEnqueue"><i class="fa fa-clock-o"></i> Enqueue</a>
                </div>
            </div>
            <div class="sep5"></div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div id="pdfContent">

            </div>
        </div>
    </div>
</div>
<!-- Modal Enqueue -->
<div id="modalEnqueue" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Enqueue</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="enqueueFor">Enqueue For</label>
                    <select id="enqueueFor" name="enqueueTo" class="combobox form-control" style="width:100%;">
                        <option></option>
                        @foreach (var employee in ViewBag.Employees)
                        {
                            <option value="@employee.EmployeeKey">@employee.x_EmployeeFullName</option>
                        }
                    </select>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="enqueueReport();">Save</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal Ask Terms -->
<div id="modalAskPaymentTerm" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Change Payment Terms to Prepaid?</h4>
            </div>
            <div class="modal-body">
                <label>The payment terms for this customer is @String.Format("{0:P}", Model.TermPercentPrepaid) prepaid and the quote amount exceeds the customers credit limit requiring a prepaid quote.  Do you want to change the payment terms to prepaid?</label>
                <ul>
                    <li>Press Yes to change the Customer Payment Terms to Prepaid.</li>
                    <li>Press No to print this quote regardless of the payment term violation.</li>
                </ul>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-dismiss="modal" onclick="OpenReport();">No</button>
                <button type="button" class="btn btn-success" onclick="setPaymentTermPercentage();">Yes</button>
            </div>
        </div>
    </div>
</div>
<script>
    var urlEnqueue = "@Url.Action("Enqueue", "Common")";
    var urlUpdatePayment = "@Url.Action("UpdatePaymentTerm", "Common")";
    var urlMailTo = "@mailTo";
    var urlPDF = "@Html.Raw(pdfPath)";
    var askPayment = @Model.askForPaymentTerms.ToString().ToLower();
    var QHdrKey = @Model.id;
</script>
<script>
    function updateProgress(evt) {
        if (evt.lengthComputable) {  //evt.loaded the bytes browser receive
            //evt.total the total bytes seted by the header
            //
            var percentComplete = parseInt((evt.loaded / evt.total) * 100);
            $('body').mask("{0}% Completed...".format(percentComplete));
        }
    };

    function enqueueReport() {
        var employeeKey = $("#enqueueFor").val(),
            strWhere = "QHdrKey = {0}".format(QHdrKey),
            reportName = "rptQuoteCustomer",
            path = urlEnqueue;

        $("body").mask("Saving...");
        $.ajax({
            url: path,
            type: 'POST',
            data: {
                EmployeeKey: employeeKey,
                strWhere: strWhere,
                ReportName: reportName
            },
            success: function (data) {
                $("body").unmask();
                if (data === "OK") {
                    bootstrap_alert.warning('Report saved to <strong>queue</strong>.', 'success', 3000);
                } else {
                    bootstrap_alert.warning('Some error was detected.', 'warning', 3000);
                    // available: success, info, warning, danger
                }

            },
            failure: function () {
                $("body").unmask();
            }
        });

    }

    function setPaymentTermPercentage() {
        var path = urlUpdatePayment;

        //if(percent === 0) return;

        $("body").mask("Saving...");
        $.ajax({
            url: path,
            type: 'POST',
            data: {
                QHdrKey: QHdrKey
            },
            success: function (data) {
                $("body").unmask();
                if (data === "OK") {
                    bootstrap_alert.warning('Payment Terms was <strong>change</strong> the report will be reload.', 'success', 2000);
                    //OpenReport();
                    setTimeout(function() {
                        location.reload();
                    }, 2200);
                } else {
                    bootstrap_alert.warning('Some error was detected.', 'danger', 2000);
                    // available: success, info, warning, danger
                    setTimeout(function() {
                        location.reload();
                    }, 2200);
                }
            },
            failure: function () {
                $("body").unmask();
                bootstrap_alert.warning('Some error was detected.', 'danger', 2000);
                setTimeout(function() {
                    location.reload();
                }, 2200);
            }
        });
    }

    var options = {
        id: "pdfDownload",
        pdfOpenParams: { view: 'FitV', page: '1' }
    };

    function OpenReport() {
        $("body").mask("Preparing Report...");
        var body = "see the report on the following link {0}{1}".format(urlMailTo, urlPDF);
        var mailTo = "mailto:?subject=Job Summary&body=" + encodeURIComponent(body);
        var xhr;
        if (window.XMLHttpRequest) { xhr = new XMLHttpRequest(); }//code for modern browsers}
        else { xhr = new ActiveXObject("Microsoft.XMLHTTP"); }// code for IE6, IE5
        // load `document` from `cache`
        xhr.open("GET", urlPDF, true);
        xhr.responseType = "blob";
        xhr.onprogress = updateProgress;
        xhr.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200) {
                // `blob` response
                var url = window.URL || window.webkitURL;
                var file = url.createObjectURL(this.response);
                //document.querySelector("iframe").src = file;
                PDFObject.embed(file, '#pdfContent', options);
                $("#btnMailto").attr("href", mailTo);
                setTimeout(function () { $("body").unmask(); }, 500);
            } else {
                $("body").unmask();
            }
        };
        xhr.send();
    }

    $(document).ready(function () {
        $("#pdfContent").css({ 'height': ($(document).height() - ($(document).height() * 0.05).toFixed(0)) + 'px' });

        $('.combobox').combobox();

        $(window).resize(function () {
            $("#pdfContent").css({ 'height': ($(document).height() - ($(document).height() * 0.05).toFixed(0)) + 'px' });
            //calculate center position
            var maskMsgDiv = $(".loadmask-msg");
            maskMsgDiv.css("top", Math.round($(window).height() / 2 - (maskMsgDiv.height() - parseInt(maskMsgDiv.css("padding-top")) - parseInt(maskMsgDiv.css("padding-bottom"))) / 2) + "px");
            maskMsgDiv.css("left", Math.round($(window).width() / 2 - (maskMsgDiv.width() - parseInt(maskMsgDiv.css("padding-left")) - parseInt(maskMsgDiv.css("padding-right"))) / 2) + "px");
        });

        if(askPayment) {
            $("#modalAskPaymentTerm").modal("show");
        } else {
            OpenReport();
        }
    });
</script>


