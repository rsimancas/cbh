{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"field",
				"fieldContact"
			],
			[
				"su",
				"success"
			],
			[
				"print",
				"printQueue"
			],
			[
				"Curre",
				"CurrencyRate"
			],
			[
				"cu",
				"currency"
			],
			[
				"fiel",
				"fieldCurrency"
			],
			[
				"QCha",
				"QChargeCurrencyCode"
			],
			[
				"QChar",
				"QChargeCurrencyCode"
			],
			[
				"x",
				"x_DescriptionText"
			],
			[
				"store",
				"storeCategories"
			],
			[
				"onClickC",
				"onClickPronacaReportClosedShipped"
			],
			[
				"fun",
				"function"
			],
			[
				"onClic",
				"onClickInternalQuoteReport"
			],
			[
				"onCl",
				"onClickCustomerExtranetLog"
			],
			[
				"do",
				"down"
			],
			[
				"tr",
				"true"
			],
			[
				"rea",
				"readOnly"
			],
			[
				"tool",
				"toolbar"
			],
			[
				"save",
				"savedRecord"
			],
			[
				"tb",
				"tbLastOpt"
			],
			[
				"las",
				"lastOptions"
			],
			[
				"lastO",
				"lastOpt"
			],
			[
				"Sch",
				"SchBNum"
			],
			[
				"record",
				"records"
			],
			[
				"Origin",
				"OriginName"
			],
			[
				"job",
				"jobOverview"
			],
			[
				"PO",
				"POKey"
			],
			[
				"load",
				"loadPurchaseOrder"
			],
			[
				"cus",
				"custContainer"
			],
			[
				"Ex",
				"Exempt"
			],
			[
				"form",
				"formData"
			],
			[
				"stor",
				"storeContacts"
			],
			[
				"view",
				"viewConfig"
			],
			[
				"re",
				"reportName"
			],
			[
				"font",
				"font-weight"
			],
			[
				"padd",
				"padding-bottom"
			],
			[
				"str",
				"strWhere"
			],
			[
				"new",
				"newValue"
			],
			[
				"set",
				"setValue"
			],
			[
				"Jo",
				"JobStatus"
			],
			[
				"Opn",
				"OpenQuotes"
			],
			[
				"colu",
				"columnWidth"
			],
			[
				"Gr",
				"GroupByContact"
			],
			[
				"onClickP",
				"onClickPrintStatusReport"
			],
			[
				"pri",
				"printEnabled"
			],
			[
				"text",
				"textfield"
			],
			[
				"on",
				"onClickViewDetails"
			],
			[
				"lis",
				"listeners"
			],
			[
				"list",
				"List"
			],
			[
				"led",
				"leftPad"
			],
			[
				"Qh",
				"QHdrModifiedBy"
			],
			[
				"QHdrM",
				"QHdrModifiedBy"
			],
			[
				"QH",
				"QHdrMemo"
			],
			[
				"QHd",
				"QHdrRevision"
			],
			[
				"string",
				"stringLen"
			],
			[
				"quote",
				"quotekey"
			],
			[
				"date",
				"Date"
			],
			[
				"exe",
				"executeReport"
			],
			[
				"ex",
				"executeReport"
			],
			[
				"em",
				"employeeKey"
			],
			[
				"report",
				"reportName"
			],
			[
				"JobRo",
				"JobRoleKey"
			],
			[
				"com",
				"comboDateRange"
			],
			[
				"l",
				"length"
			],
			[
				"jo",
				"jobStatusExpression"
			],
			[
				"Job",
				"JobStatusExpression"
			],
			[
				"JobS",
				"JobStatus"
			],
			[
				"clos",
				"closedQuotes"
			],
			[
				"open",
				"openQuotes"
			],
			[
				"Repo",
				"reportName"
			],
			[
				"emp",
				"employees"
			],
			[
				"us",
				"userKey"
			],
			[
				"index",
				"indexOf"
			],
			[
				"co",
				"comboDateRange"
			],
			[
				"Ran",
				"DateRange"
			],
			[
				"st",
				"storeCriteria"
			],
			[
				"V",
				"VendorName"
			],
			[
				"Coun",
				"CountryKey"
			],
			[
				"Repor",
				"ReportCriteria"
			],
			[
				"grid",
				"gridcustomers"
			],
			[
				"item",
				"itemId"
			],
			[
				"Close",
				"ClosedQuotes"
			],
			[
				"Ope",
				"OpenQuotes"
			],
			[
				"Creat",
				"CreatedDate"
			],
			[
				"colum",
				"column"
			],
			[
				"col",
				"columnWidth"
			],
			[
				"Cu",
				"CustKey"
			],
			[
				"Cue",
				"CustKey"
			],
			[
				"gridconta",
				"gridcontacts"
			],
			[
				"fi",
				"fieldValue"
			],
			[
				"JobRole",
				"JobRoleSort"
			],
			[
				"onClickE",
				"onClickEditJobRolesList"
			],
			[
				"val",
				"value"
			],
			[
				"ran",
				"DateRange"
			],
			[
				"start",
				"startDate"
			],
			[
				"star",
				"startDate"
			],
			[
				"End",
				"EndDate"
			],
			[
				"Star",
				"StartDate"
			],
			[
				"m",
				"month"
			],
			[
				"to",
				"today"
			],
			[
				"storeCu",
				"storeCustomers"
			],
			[
				"gridco",
				"gridcountries"
			],
			[
				"sel",
				"selModel"
			],
			[
				"da",
				"date"
			],
			[
				"t",
				"title"
			],
			[
				"remove",
				"removeAll"
			],
			[
				"Cust",
				"CustKey"
			],
			[
				"JobEM",
				"JobEmployeeEmployeeKey"
			],
			[
				"JobE",
				"JobEmployeeEmployeeKey"
			],
			[
				"dis",
				"disabled"
			],
			[
				"edi",
				"editable"
			],
			[
				"Fi",
				"FileDefaultCurrencySymbol"
			],
			[
				"par",
				"parentRecord"
			],
			[
				"sum",
				"summaryData"
			],
			[
				"return",
				"returnValue"
			],
			[
				"Form",
				"FormToolbar"
			],
			[
				"retu",
				"returnValue"
			],
			[
				"def",
				"defaultValue"
			],
			[
				"Cur",
				"CurrencySymbol"
			],
			[
				"QuoteItem",
				"QuoteItemCurrencyCode"
			],
			[
				"Curren",
				"CurrencyCode"
			],
			[
				"QuoteItemC",
				"QuoteItemCurrencyCode"
			],
			[
				"get",
				"getValue"
			],
			[
				"QuoteItemL",
				"QuoteItemLineCost"
			],
			[
				"ItemCurr",
				"ItemCurrencyRate"
			],
			[
				"curr",
				"currencySymbol"
			],
			[
				"de",
				"defaultValue"
			],
			[
				"Quote",
				"QuoteItemCost"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "Searching 362 files for \"INS\"\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app.js:\n    8  \n    9  // Ext.popupMsg = function() {\n   10: //     var c;function d(b,a){if(b==\"Warning\"){return'<div class=\"msgError\"><p align=\"center\"><h3>'+a+\"</h3></p></div>\"}else{return'<div class=\"msgSuccess\"><p align=\"center\"><h3>'+a+\"</h3></p></div>\"}}return{msg:function(a,b){if(!c){if(a==\"Warning\"){c=Ext.DomHelper.insertFirst(document.body,{id:\"app-popup-error-div\"},true)}else{c=Ext.DomHelper.insertFirst(document.body,{id:\"app-popup-success-div\"},true)}}var g=Ext.String.format.apply(String,Array.prototype.slice.call(arguments,1));var h=Ext.DomHelper.append(c,d(a,g),true);h.hide();h.slideIn(\"t\").ghost(\"t\",{delay:1200,remove:true})},init:function(){if(!c){c=Ext.DomHelper.insertFirst(document.body,{id:\"app-popup-success-div\"},true)}}}}();\n   11  \n   12  //     Ext.onReady(function() {\n   ..\n   48              //if(!msgCt){\n   49              if (title == \"Warning\") {\n   50:                 msgCt = Ext.DomHelper.insertFirst(document.body, {\n   51                      id: 'app-popup-error-div'\n   52                  }, true);\n   53              } else {\n   54:                 msgCt = Ext.DomHelper.insertFirst(document.body, {\n   55                      id: 'app-popup-success-div'\n   56                  }, true);\n   ..\n   70              // It's better to create the msg-div here in order to avoid re-layouts \n   71              // later that could interfere with the HtmlEditor and reset its iFrame.\n   72:             //msgCt = Ext.DomHelper.insertFirst(document.body, {id:'app-popup-success-div'}, true);\n   73              //}\n   74          }\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\deft-debug.js:\n  125      identifier: null,\n  126      /**\n  127:     		Class to be instantiated, by either full name, alias or alternate name, to resolve this dependency.\n  128      */\n  129  \n  130      className: null,\n  131      /**\n  132:     		Optional arguments to pass to the class' constructor when instantiating a class to resolve this dependency.\n  133      */\n  134  \n  135      parameters: null,\n  136      /**\n  137:     		Factory function to be executed to obtain the corresponding object instance or value to resolve this dependency.\n  138      \n  139:     		NOTE: For lazily instantiated dependencies, this function will be passed the object instance for which the dependency is being resolved.\n  140      */\n  141  \n  ...\n  152      singleton: true,\n  153      /**\n  154:     		Indicates whether this dependency should be 'eagerly' instantiated when this provider is defined, rather than 'lazily' instantiated when later requested.\n  155      \n  156      		NOTE: Only valid when either a factory function or class is specified as a singleton.\n  ...\n  215    },\n  216    /**\n  217:   	Resolve a target instance's dependency with an object instance or value generated by this dependency provider.\n  218    */\n  219  \n  220:   resolve: function(targetInstance, targetInstanceConstructorArguments) {\n  221:     var fnArguments, instance, parameters;\n  222      Deft.Logger.log(\"Resolving '\" + (this.getIdentifier()) + \"'.\");\n  223      if (this.getValue() !== void 0) {\n  224        return this.getValue();\n  225      }\n  226:     instance = null;\n  227      if (this.getFn() != null) {\n  228        Deft.Logger.log(\"Executing factory function.\");\n  229:       if (targetInstanceConstructorArguments) {\n  230:         fnArguments = [targetInstance].concat(Ext.toArray(targetInstanceConstructorArguments));\n  231        } else {\n  232:         fnArguments = [targetInstance];\n  233        }\n  234:       instance = this.getFn().apply(Deft.Injector, fnArguments);\n  235      } else if (this.getClassName() != null) {\n  236        if (Ext.ClassManager.get(this.getClassName()).singleton) {\n  237:         Deft.Logger.log(\"Using existing singleton instance of '\" + (this.getClassName()) + \"'.\");\n  238:         instance = Ext.ClassManager.get(this.getClassName());\n  239        } else {\n  240:         Deft.Logger.log(\"Creating instance of '\" + (this.getClassName()) + \"'.\");\n  241          parameters = this.getParameters() != null ? [this.getClassName()].concat(this.getParameters()) : [this.getClassName()];\n  242:         instance = Ext.create.apply(this, parameters);\n  243        }\n  244      } else {\n  ...\n  248      }\n  249      if (this.getSingleton()) {\n  250:       this.setValue(instance);\n  251      }\n  252:     return instance;\n  253    }\n  254  });\n  ...\n  271      });\n  272  \n  273: In the IoC configuration above, we have created two **dependency providers**, one named `companyStore` and one named `companyService`. By default, DeftJS uses lazy instantiation to create singleton instances of the `CompanyStore` and `CompanyService` classes. This means that a singleton won't be created until an object in your application specifies one of these dependency providers as an injected dependency.\n  274  \n  275  ## <u>[Singleton vs. Prototype Dependency Providers](https://github.com/deftjs/DeftJS/wiki/Singleton-vs.-Prototype-Dependency-Providers)</u>\n  276  \n  277: By default, the dependency providers set up with the DeftJS `Injector` are singletons. This means that only one instance of that dependency will be created, and the same instance will be injected into all objects that request that dependency.\n  278  \n  279  For cases where this is not desired, you can create non-singleton (prototype) dependency providers like this:\n  ...\n  286      });\n  287  \n  288: ## <u>[Lazy vs. Eager Dependency Creation](https://github.com/deftjs/DeftJS/wiki/Eager-vs.-Lazy-Instantiation)</u>\n  289  \n  290  By default, dependency providers are created **lazily**. This means that the dependency will not be created by DeftJS until another object is created which specifies that dependency as an injection.\n  291  \n  292: In cases where lazy instantiation is not desired, you can set up a dependency provider to be created immediately upon application startup by using the `eager` configuration:\n  293  \n  294      Deft.Injector.configure({\n  ...\n  299      });\n  300  \n  301: > **NOTE: Only singleton dependency providers can be eagerly instantiated.** This means that specifying `singleton: false` and `eager: true` for a dependency provider won't work. The reason may be obvious: DeftJS can't do anything with a prototype object that is eagerly created, since by definition each injection of a prototype dependency must be a new instance!\n  302  \n  303  ## <u>[Constructor Parameters](https://github.com/deftjs/DeftJS/wiki/Constructor-Parameters)</u>\n  ...\n  342        contactManager: {\n  343          // The factory function will be passed a single argument:\n  344:         // The object instance that the new object will be injected into\n  345:         fn: function(instance) {\n  346:           if (instance.session.getIsAdmin()) {\n  347              return Ext.create(\"MyApp.manager.admin.ContactManager\");\n  348            } else {\n  ...\n  357  When the Injector is called to resolve dependencies for these identifiers, the factory function is called and the dependency is resolved with the return value.\n  358  \n  359: As shown above, a lazily instantiated factory function can optionally accept a parameter, corresponding to the instance for which the Injector is currently injecting dependencies.\n  360  \n  361: Factory function dependency providers can be configured as singletons or prototypes and can be eagerly or lazily instantiated.\n  362  \n  363: > **NOTE: Only singleton factory functions can be eagerly instantiated.** This means that specifying `singleton: false` and `eager: true` for a dependency provider won't work. The reason may be obvious: DeftJS can't do anything with a prototype object that is eagerly created, since by definition each injection of a prototype dependency must be a new instance!\n  364  */\n  365  \n  ...\n  413    },\n  414    /**\n  415:   	Indicates whether the Injector can resolve a dependency by the specified identifier with the corresponding object instance or value.\n  416    */\n  417  \n  ...\n  422    },\n  423    /**\n  424:   	Resolve a dependency (by identifier) with the corresponding object instance or value.\n  425    \n  426:   	Optionally, the caller may specify the target instance (to be supplied to the dependency provider's factory function, if applicable).\n  427    */\n  428  \n  429:   resolve: function(identifier, targetInstance, targetInstanceConstructorArguments) {\n  430      var provider;\n  431      provider = this.providers[identifier];\n  432      if (provider != null) {\n  433:       return provider.resolve(targetInstance, targetInstanceConstructorArguments);\n  434      } else {\n  435        Ext.Error.raise({\n  ...\n  439    },\n  440    /**\n  441:   	Inject dependencies (by their identifiers) into the target object instance.\n  442    */\n  443  \n  444:   inject: function(identifiers, targetInstance, targetInstanceConstructorArguments, targetInstanceIsInitialized) {\n  445      var injectConfig, name, originalInitConfigFunction, setterFunctionName, stackMessage, targetClass, value;\n  446:     if (targetInstanceIsInitialized == null) {\n  447:       targetInstanceIsInitialized = true;\n  448      }\n  449:     targetClass = Ext.getClassName(targetInstance);\n  450:     if (Ext.Array.contains(this.injectionStack, targetClass)) {\n  451        stackMessage = this.injectionStack.join(\" -> \");\n  452        this.injectionStack = [];\n  ...\n  465        targetProperty = Ext.isArray(identifiers) ? value : key;\n  466        identifier = value;\n  467:       resolvedValue = this.resolve(identifier, targetInstance, targetInstanceConstructorArguments);\n  468:       if (targetProperty in targetInstance.config) {\n  469          Deft.Logger.log(\"Injecting '\" + identifier + \"' into '\" + targetClass + \".\" + targetProperty + \"' config.\");\n  470          injectConfig[targetProperty] = resolvedValue;\n  471        } else {\n  472          Deft.Logger.log(\"Injecting '\" + identifier + \"' into '\" + targetClass + \".\" + targetProperty + \"' property.\");\n  473:         targetInstance[targetProperty] = resolvedValue;\n  474        }\n  475      }, this);\n  476      this.injectionStack = [];\n  477:     if (targetInstanceIsInitialized) {\n  478        for (name in injectConfig) {\n  479          value = injectConfig[name];\n  480          setterFunctionName = 'set' + Ext.String.capitalize(name);\n  481:         targetInstance[setterFunctionName].call(targetInstance, value);\n  482        }\n  483      } else {\n  484:       if ((Ext.getVersion('extjs') != null) && targetInstance instanceof Ext.ClassManager.get('Ext.Component')) {\n  485:         targetInstance.injectConfig = injectConfig;\n  486:       } else if (Ext.isFunction(targetInstance.initConfig)) {\n  487:         originalInitConfigFunction = targetInstance.initConfig;\n  488:         targetInstance.initConfig = function(config) {\n  489            var result;\n  490            result = originalInitConfigFunction.call(this, Ext.Object.merge({}, config || {}, injectConfig));\n  ...\n  493        }\n  494      }\n  495:     return targetInstance;\n  496    }\n  497  }, function() {\n  ...\n  570        return true;\n  571      }\n  572:     if (this.container === null && Ext.Array.contains(Ext.ComponentQuery.query(this.selector), component)) {\n  573        return true;\n  574      }\n  575:     if (component.isDescendantOf(this.container) && Ext.Array.contains(this.container.query(this.selector), component)) {\n  576        return true;\n  577      }\n  ...\n  728      		* @param {String} name The pre-processor's name.\n  729      		* @param {Function} fn The callback function to be executed.\n  730:     		* @param {String} position Optional insertion position for this pre-processor - valid options: 'first', 'last', 'before' or 'after'.\n  731      		* @param {String} relativeTo Optional name of a previously registered pre-processor, for 'before' and 'after' relative positioning.\n  732      */\n  ...\n  835            config = {};\n  836          }\n  837:         if (this instanceof Ext.ClassManager.get('Ext.Component') && !this.$controlled) {\n  838            try {\n  839              controller = Ext.create(this.controller, config.controllerConfig || this.controllerConfig || {});\n  840            } catch (_error) {\n  841              error = _error;\n  842:             Deft.Logger.warn(\"Error initializing view controller: an error occurred while creating an instance of the specified controller: '\" + this.controller + \"'.\");\n  843              throw error;\n  844            }\n  ...\n  863            config = {};\n  864          }\n  865:         if (this instanceof Ext.ClassManager.get('Ext.Component') && !this.$controlled) {\n  866            try {\n  867              controller = Ext.create(this.controller, config.controllerConfig || this.controllerConfig || {});\n  868            } catch (_error) {\n  869              error = _error;\n  870:             Deft.Logger.warn(\"Error initializing view controller: an error occurred while creating an instance of the specified controller: '\" + this.controller + \"'.\");\n  871              throw error;\n  872            }\n  ...\n  998    alternateClassName: ['Deft.Application'],\n  999    /**\n 1000:   	* Indicates whether this Application instance has been initialized.\n 1001    */\n 1002  \n ....\n 1267      		* a given observer target and event can potentially have multiple handlers declared in different parent or\n 1268      		* child classes. It transforms an event handler value into an array of values, and merges the arrays of handlers\n 1269:     		* from child to parent. This maintains the handlers even if both parent and child classes have handlers for the\n 1270      		* same target and event.\n 1271      */\n ....\n 1347              childHandlerArray = childObserve[parentTarget][parentEvent];\n 1348              parentHandlerArray = parentObserve[parentTarget][parentEvent];\n 1349:             parentObserve[parentTarget][parentEvent] = Ext.Array.unique(Ext.Array.insert(parentHandlerArray, 0, childHandlerArray));\n 1350            }\n 1351          }\n ....\n 1418        return false;\n 1419      }\n 1420:     if ((hostTarget.isObservable != null) || (((_ref = hostTarget.mixins) != null ? _ref.observable : void 0) != null)) {\n 1421        return true;\n 1422      } else {\n ....\n 1538  \n 1539  /**\n 1540: A lightweight MVC view controller. Full usage instructions in the [DeftJS documentation](https://github.com/deftjs/DeftJS/wiki/ViewController).\n 1541  \n 1542  First, specify a ViewController to attach to a view:\n ....\n 1683  \n 1684    controlView: function(view) {\n 1685:     if (view instanceof Ext.ClassManager.get('Ext.Component')) {\n 1686        this.setView(view);\n 1687        this.registeredComponentReferences = {};\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\deft-dev.js:\n  125      identifier: null,\n  126      /**\n  127:     		Class to be instantiated, by either full name, alias or alternate name, to resolve this dependency.\n  128      */\n  129  \n  130      className: null,\n  131      /**\n  132:     		Optional arguments to pass to the class' constructor when instantiating a class to resolve this dependency.\n  133      */\n  134  \n  135      parameters: null,\n  136      /**\n  137:     		Factory function to be executed to obtain the corresponding object instance or value to resolve this dependency.\n  138      \n  139:     		NOTE: For lazily instantiated dependencies, this function will be passed the object instance for which the dependency is being resolved.\n  140      */\n  141  \n  ...\n  152      singleton: true,\n  153      /**\n  154:     		Indicates whether this dependency should be 'eagerly' instantiated when this provider is defined, rather than 'lazily' instantiated when later requested.\n  155      \n  156      		NOTE: Only valid when either a factory function or class is specified as a singleton.\n  ...\n  215    },\n  216    /**\n  217:   	Resolve a target instance's dependency with an object instance or value generated by this dependency provider.\n  218    */\n  219  \n  220:   resolve: function(targetInstance, targetInstanceConstructorArguments) {\n  221:     var fnArguments, instance, parameters;\n  222      Deft.Logger.log(\"Resolving '\" + (this.getIdentifier()) + \"'.\");\n  223      if (this.getValue() !== void 0) {\n  224        return this.getValue();\n  225      }\n  226:     instance = null;\n  227      if (this.getFn() != null) {\n  228        Deft.Logger.log(\"Executing factory function.\");\n  229:       if (targetInstanceConstructorArguments) {\n  230:         fnArguments = [targetInstance].concat(Ext.toArray(targetInstanceConstructorArguments));\n  231        } else {\n  232:         fnArguments = [targetInstance];\n  233        }\n  234:       instance = this.getFn().apply(Deft.Injector, fnArguments);\n  235      } else if (this.getClassName() != null) {\n  236        if (Ext.ClassManager.get(this.getClassName()).singleton) {\n  237:         Deft.Logger.log(\"Using existing singleton instance of '\" + (this.getClassName()) + \"'.\");\n  238:         instance = Ext.ClassManager.get(this.getClassName());\n  239        } else {\n  240:         Deft.Logger.log(\"Creating instance of '\" + (this.getClassName()) + \"'.\");\n  241          parameters = this.getParameters() != null ? [this.getClassName()].concat(this.getParameters()) : [this.getClassName()];\n  242:         instance = Ext.create.apply(this, parameters);\n  243        }\n  244      } else {\n  ...\n  248      }\n  249      if (this.getSingleton()) {\n  250:       this.setValue(instance);\n  251      }\n  252:     return instance;\n  253    }\n  254  });\n  ...\n  271      });\n  272  \n  273: In the IoC configuration above, we have created two **dependency providers**, one named `companyStore` and one named `companyService`. By default, DeftJS uses lazy instantiation to create singleton instances of the `CompanyStore` and `CompanyService` classes. This means that a singleton won't be created until an object in your application specifies one of these dependency providers as an injected dependency.\n  274  \n  275  ## <u>[Singleton vs. Prototype Dependency Providers](https://github.com/deftjs/DeftJS/wiki/Singleton-vs.-Prototype-Dependency-Providers)</u>\n  276  \n  277: By default, the dependency providers set up with the DeftJS `Injector` are singletons. This means that only one instance of that dependency will be created, and the same instance will be injected into all objects that request that dependency.\n  278  \n  279  For cases where this is not desired, you can create non-singleton (prototype) dependency providers like this:\n  ...\n  286      });\n  287  \n  288: ## <u>[Lazy vs. Eager Dependency Creation](https://github.com/deftjs/DeftJS/wiki/Eager-vs.-Lazy-Instantiation)</u>\n  289  \n  290  By default, dependency providers are created **lazily**. This means that the dependency will not be created by DeftJS until another object is created which specifies that dependency as an injection.\n  291  \n  292: In cases where lazy instantiation is not desired, you can set up a dependency provider to be created immediately upon application startup by using the `eager` configuration:\n  293  \n  294      Deft.Injector.configure({\n  ...\n  299      });\n  300  \n  301: > **NOTE: Only singleton dependency providers can be eagerly instantiated.** This means that specifying `singleton: false` and `eager: true` for a dependency provider won't work. The reason may be obvious: DeftJS can't do anything with a prototype object that is eagerly created, since by definition each injection of a prototype dependency must be a new instance!\n  302  \n  303  ## <u>[Constructor Parameters](https://github.com/deftjs/DeftJS/wiki/Constructor-Parameters)</u>\n  ...\n  342        contactManager: {\n  343          // The factory function will be passed a single argument:\n  344:         // The object instance that the new object will be injected into\n  345:         fn: function(instance) {\n  346:           if (instance.session.getIsAdmin()) {\n  347              return Ext.create(\"MyApp.manager.admin.ContactManager\");\n  348            } else {\n  ...\n  357  When the Injector is called to resolve dependencies for these identifiers, the factory function is called and the dependency is resolved with the return value.\n  358  \n  359: As shown above, a lazily instantiated factory function can optionally accept a parameter, corresponding to the instance for which the Injector is currently injecting dependencies.\n  360  \n  361: Factory function dependency providers can be configured as singletons or prototypes and can be eagerly or lazily instantiated.\n  362  \n  363: > **NOTE: Only singleton factory functions can be eagerly instantiated.** This means that specifying `singleton: false` and `eager: true` for a dependency provider won't work. The reason may be obvious: DeftJS can't do anything with a prototype object that is eagerly created, since by definition each injection of a prototype dependency must be a new instance!\n  364  */\n  365  \n  ...\n  413    },\n  414    /**\n  415:   	Indicates whether the Injector can resolve a dependency by the specified identifier with the corresponding object instance or value.\n  416    */\n  417  \n  ...\n  422    },\n  423    /**\n  424:   	Resolve a dependency (by identifier) with the corresponding object instance or value.\n  425    \n  426:   	Optionally, the caller may specify the target instance (to be supplied to the dependency provider's factory function, if applicable).\n  427    */\n  428  \n  429:   resolve: function(identifier, targetInstance, targetInstanceConstructorArguments) {\n  430      var provider;\n  431      provider = this.providers[identifier];\n  432      if (provider != null) {\n  433:       return provider.resolve(targetInstance, targetInstanceConstructorArguments);\n  434      } else {\n  435        Ext.Error.raise({\n  ...\n  439    },\n  440    /**\n  441:   	Inject dependencies (by their identifiers) into the target object instance.\n  442    */\n  443  \n  444:   inject: function(identifiers, targetInstance, targetInstanceConstructorArguments, targetInstanceIsInitialized) {\n  445      var injectConfig, name, originalInitConfigFunction, setterFunctionName, stackMessage, targetClass, value;\n  446:     if (targetInstanceIsInitialized == null) {\n  447:       targetInstanceIsInitialized = true;\n  448      }\n  449:     targetClass = Ext.getClassName(targetInstance);\n  450:     if (Ext.Array.contains(this.injectionStack, targetClass)) {\n  451        stackMessage = this.injectionStack.join(\" -> \");\n  452        this.injectionStack = [];\n  ...\n  465        targetProperty = Ext.isArray(identifiers) ? value : key;\n  466        identifier = value;\n  467:       resolvedValue = this.resolve(identifier, targetInstance, targetInstanceConstructorArguments);\n  468:       if (targetProperty in targetInstance.config) {\n  469          Deft.Logger.log(\"Injecting '\" + identifier + \"' into '\" + targetClass + \".\" + targetProperty + \"' config.\");\n  470          injectConfig[targetProperty] = resolvedValue;\n  471        } else {\n  472          Deft.Logger.log(\"Injecting '\" + identifier + \"' into '\" + targetClass + \".\" + targetProperty + \"' property.\");\n  473:         targetInstance[targetProperty] = resolvedValue;\n  474        }\n  475      }, this);\n  476      this.injectionStack = [];\n  477:     if (targetInstanceIsInitialized) {\n  478        for (name in injectConfig) {\n  479          value = injectConfig[name];\n  480          setterFunctionName = 'set' + Ext.String.capitalize(name);\n  481:         targetInstance[setterFunctionName].call(targetInstance, value);\n  482        }\n  483      } else {\n  484:       if ((Ext.getVersion('extjs') != null) && targetInstance instanceof Ext.ClassManager.get('Ext.Component')) {\n  485:         targetInstance.injectConfig = injectConfig;\n  486:       } else if (Ext.isFunction(targetInstance.initConfig)) {\n  487:         originalInitConfigFunction = targetInstance.initConfig;\n  488:         targetInstance.initConfig = function(config) {\n  489            var result;\n  490            result = originalInitConfigFunction.call(this, Ext.Object.merge({}, config || {}, injectConfig));\n  ...\n  493        }\n  494      }\n  495:     return targetInstance;\n  496    }\n  497  }, function() {\n  ...\n  570        return true;\n  571      }\n  572:     if (this.container === null && Ext.Array.contains(Ext.ComponentQuery.query(this.selector), component)) {\n  573        return true;\n  574      }\n  575:     if (component.isDescendantOf(this.container) && Ext.Array.contains(this.container.query(this.selector), component)) {\n  576        return true;\n  577      }\n  ...\n  728      		* @param {String} name The pre-processor's name.\n  729      		* @param {Function} fn The callback function to be executed.\n  730:     		* @param {String} position Optional insertion position for this pre-processor - valid options: 'first', 'last', 'before' or 'after'.\n  731      		* @param {String} relativeTo Optional name of a previously registered pre-processor, for 'before' and 'after' relative positioning.\n  732      */\n  ...\n  835            config = {};\n  836          }\n  837:         if (this instanceof Ext.ClassManager.get('Ext.Component') && !this.$controlled) {\n  838            try {\n  839              controller = Ext.create(this.controller, config.controllerConfig || this.controllerConfig || {});\n  840            } catch (_error) {\n  841              error = _error;\n  842:             Deft.Logger.warn(\"Error initializing view controller: an error occurred while creating an instance of the specified controller: '\" + this.controller + \"'.\");\n  843              throw error;\n  844            }\n  ...\n  863            config = {};\n  864          }\n  865:         if (this instanceof Ext.ClassManager.get('Ext.Component') && !this.$controlled) {\n  866            try {\n  867              controller = Ext.create(this.controller, config.controllerConfig || this.controllerConfig || {});\n  868            } catch (_error) {\n  869              error = _error;\n  870:             Deft.Logger.warn(\"Error initializing view controller: an error occurred while creating an instance of the specified controller: '\" + this.controller + \"'.\");\n  871              throw error;\n  872            }\n  ...\n  998    alternateClassName: ['Deft.Application'],\n  999    /**\n 1000:   	* Indicates whether this Application instance has been initialized.\n 1001    */\n 1002  \n ....\n 1267      		* a given observer target and event can potentially have multiple handlers declared in different parent or\n 1268      		* child classes. It transforms an event handler value into an array of values, and merges the arrays of handlers\n 1269:     		* from child to parent. This maintains the handlers even if both parent and child classes have handlers for the\n 1270      		* same target and event.\n 1271      */\n ....\n 1347              childHandlerArray = childObserve[parentTarget][parentEvent];\n 1348              parentHandlerArray = parentObserve[parentTarget][parentEvent];\n 1349:             parentObserve[parentTarget][parentEvent] = Ext.Array.unique(Ext.Array.insert(parentHandlerArray, 0, childHandlerArray));\n 1350            }\n 1351          }\n ....\n 1418        return false;\n 1419      }\n 1420:     if ((hostTarget.isObservable != null) || (((_ref = hostTarget.mixins) != null ? _ref.observable : void 0) != null)) {\n 1421        return true;\n 1422      } else {\n ....\n 1538  \n 1539  /**\n 1540: A lightweight MVC view controller. Full usage instructions in the [DeftJS documentation](https://github.com/deftjs/DeftJS/wiki/ViewController).\n 1541  \n 1542  First, specify a ViewController to attach to a view:\n ....\n 1683  \n 1684    controlView: function(view) {\n 1685:     if (view instanceof Ext.ClassManager.get('Ext.Component')) {\n 1686        this.setView(view);\n 1687        this.registeredComponentReferences = {};\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\deft.js:\n    6  */\n    7  \n    8: Ext.define(\"Deft.log.Logger\",{alternateClassName:[\"Deft.Logger\"],singleton:true,log:function(b,a){if(a==null){a=\"info\"}},verbose:function(a){this.log(a,\"verbose\")},info:function(a){this.log(a,\"info\")},deprecate:function(a){this.log(a,\"deprecate\")},warn:function(a){this.log(a,\"warn\")},error:function(a){this.log(a,\"error\")}},function(){if(Ext.getVersion(\"extjs\")!=null){this.log=function(b,a){if(a==null){a=\"info\"}if(a===\"verbose\"){a=\"info\"}if(a===\"deprecate\"){a=\"warn\"}Ext.log({msg:b,level:a})}}else{this.log=function(b,a){if(a==null){a=\"info\"}if((Ext.Logger!=null)&&Ext.isFunction(Ext.Logger.log)){Ext.Logger.log(b,a)}}}});Ext.define(\"Deft.ioc.DependencyProvider\",{config:{identifier:null,className:null,parameters:null,fn:null,value:void 0,singleton:true,eager:false},constructor:function(b){var a;this.initConfig(b);if((b.value!=null)&&b.value.constructor===Object){this.setValue(b.value)}if(this.getEager()){if(this.getValue()!=null){Ext.Error.raise({msg:\"Error while configuring '\"+(this.getIdentifier())+\"': a 'value' cannot be created eagerly.\"})}if(!this.getSingleton()){Ext.Error.raise({msg:\"Error while configuring '\"+(this.getIdentifier())+\"': only singletons can be created eagerly.\"})}}if(this.getClassName()!=null){a=Ext.ClassManager.get(this.getClassName());if(a==null){Deft.Logger.warn(\"Synchronously loading '\"+(this.getClassName())+\"'; consider adding Ext.require('\"+(this.getClassName())+\"') above Ext.onReady.\");Ext.syncRequire(this.getClassName());a=Ext.ClassManager.get(this.getClassName())}if(a==null){Ext.Error.raise({msg:\"Error while configuring rule for '\"+(this.getIdentifier())+\"': unrecognized class name or alias: '\"+(this.getClassName())+\"'\"})}}if(!this.getSingleton()){if(this.getClassName()!=null){if(Ext.ClassManager.get(this.getClassName()).singleton){Ext.Error.raise({msg:\"Error while configuring rule for '\"+(this.getIdentifier())+\"': singleton classes cannot be configured for injection as a prototype. Consider removing 'singleton: true' from the class definition.\"})}}if(this.getValue()!=null){Ext.Error.raise({msg:\"Error while configuring '\"+(this.getIdentifier())+\"': a 'value' can only be configured as a singleton.\"})}}else{if((this.getClassName()!=null)&&(this.getParameters()!=null)){if(Ext.ClassManager.get(this.getClassName()).singleton){Ext.Error.raise({msg:\"Error while configuring rule for '\"+(this.getIdentifier())+\"': parameters cannot be applied to singleton classes. Consider removing 'singleton: true' from the class definition.\"})}}}return this},resolve:function(d,e){var c,a,b;Deft.Logger.log(\"Resolving '\"+(this.getIdentifier())+\"'.\");if(this.getValue()!==void 0){return this.getValue()}a=null;if(this.getFn()!=null){Deft.Logger.log(\"Executing factory function.\");if(e){c=[d].concat(Ext.toArray(e))}else{c=[d]}a=this.getFn().apply(Deft.Injector,c)}else{if(this.getClassName()!=null){if(Ext.ClassManager.get(this.getClassName()).singleton){Deft.Logger.log(\"Using existing singleton instance of '\"+(this.getClassName())+\"'.\");a=Ext.ClassManager.get(this.getClassName())}else{Deft.Logger.log(\"Creating instance of '\"+(this.getClassName())+\"'.\");b=this.getParameters()!=null?[this.getClassName()].concat(this.getParameters()):[this.getClassName()];a=Ext.create.apply(this,b)}}else{Ext.Error.raise({msg:\"Error while configuring rule for '\"+(this.getIdentifier())+\"': no 'value', 'fn', or 'className' was specified.\"})}}if(this.getSingleton()){this.setValue(a)}return a}});Ext.define(\"Deft.ioc.Injector\",{alternateClassName:[\"Deft.Injector\"],singleton:true,constructor:function(){this.providers={};this.injectionStack=[];return this},configure:function(b){var a;Deft.Logger.log(\"Configuring the injector.\");a={};Ext.Object.each(b,function(d,c){var e;Deft.Logger.log(\"Configuring dependency provider for '\"+d+\"'.\");if(Ext.isString(c)){e=Ext.create(\"Deft.ioc.DependencyProvider\",{identifier:d,className:c})}else{e=Ext.create(\"Deft.ioc.DependencyProvider\",Ext.apply({identifier:d},c))}this.providers[d]=e;a[d]=e},this);Ext.Object.each(a,function(c,d){if(d.getEager()){Deft.Logger.log(\"Eagerly creating '\"+(d.getIdentifier())+\"'.\");d.resolve()}},this)},reset:function(){Deft.Logger.log(\"Resetting the injector.\");this.providers={}},canResolve:function(a){var b;b=this.providers[a];return b!=null},resolve:function(a,b,d){var c;c=this.providers[a];if(c!=null){return c.resolve(b,d)}else{Ext.Error.raise({msg:\"Error while resolving value to inject: no dependency provider found for '\"+a+\"'.\"})}},inject:function(e,f,k,j){var h,a,b,c,d,i,g;if(j==null){j=true}i=Ext.getClassName(f);if(Ext.Array.contains(this.injectionStack,i)){d=this.injectionStack.join(\" -> \");this.injectionStack=[];Ext.Error.raise({msg:\"Error resolving dependencies for '\"+i+\"'. A circular dependency exists in its injections: \"+d+\" -> *\"+i+\"*\"});return null}this.injectionStack.push(i);h={};if(Ext.isString(e)){e=[e]}Ext.Object.each(e,function(o,p){var n,l,m;m=Ext.isArray(e)?p:o;n=p;l=this.resolve(n,f,k);if(m in f.config){Deft.Logger.log(\"Injecting '\"+n+\"' into '\"+i+\".\"+m+\"' config.\");h[m]=l}else{Deft.Logger.log(\"Injecting '\"+n+\"' into '\"+i+\".\"+m+\"' property.\");f[m]=l}},this);this.injectionStack=[];if(j){for(a in h){g=h[a];c=\"set\"+Ext.String.capitalize(a);f[c].call(f,g)}}else{if((Ext.getVersion(\"extjs\")!=null)&&f instanceof Ext.ClassManager.get(\"Ext.Component\")){f.injectConfig=h}else{if(Ext.isFunction(f.initConfig)){b=f.initConfig;f.initConfig=function(m){var l;l=b.call(this,Ext.Object.merge({},m||{},h));return l}}}}return f}},function(){if(Ext.getVersion(\"extjs\")!=null){if(Ext.getVersion(\"core\").isLessThan(\"4.1.0\")){Ext.Component.override({constructor:function(a){a=Ext.Object.merge({},a||{},this.injectConfig||{});delete this.injectConfig;return this.callOverridden([a])}})}else{Ext.define(\"Deft.InjectableComponent\",{override:\"Ext.Component\",constructor:function(a){a=Ext.Object.merge({},a||{},this.injectConfig||{});delete this.injectConfig;return this.callParent([a])}})}}});Ext.define(\"Deft.event.LiveEventListener\",{alternateClassName:[\"Deft.LiveEventListener\"],constructor:function(c){var b,d,e,a;Ext.apply(this,c);this.components=[];d=Ext.ComponentQuery.query(this.selector,this.container);for(e=0,a=d.length;e<a;e++){b=d[e];this.components.push(b);b.on(this.eventName,this.fn,this.scope,this.options)}},destroy:function(){var b,d,a,c;c=this.components;for(d=0,a=c.length;d<a;d++){b=c[d];b.un(this.eventName,this.fn,this.scope)}this.components=null},register:function(a){if(this.matches(a)){this.components.push(a);a.on(this.eventName,this.fn,this.scope,this.options)}},unregister:function(b){var a;a=Ext.Array.indexOf(this.components,b);if(a!==-1){b.un(this.eventName,this.fn,this.scope);Ext.Array.erase(this.components,a,1)}},matches:function(a){if(this.selector===null&&this.container===a){return true}if(this.container===null&&Ext.Array.contains(Ext.ComponentQuery.query(this.selector),a)){return true}if(a.isDescendantOf(this.container)&&Ext.Array.contains(this.container.query(this.selector),a)){return true}return false}});Ext.define(\"Deft.event.LiveEventBus\",{alternateClassName:[\"Deft.LiveEventBus\"],singleton:true,constructor:function(){this.listeners=[]},destroy:function(){var d,c,a,b;b=this.listeners;for(c=0,a=b.length;c<a;c++){d=b[c];d.destroy()}this.listeners=null},addListener:function(b,a,c,f,e,d){var g;g=Ext.create(\"Deft.event.LiveEventListener\",{container:b,selector:a,eventName:c,fn:f,scope:e,options:d});this.listeners.push(g)},removeListener:function(b,a,c,e,d){var f;f=this.findListener(b,a,c,e,d);if(f!=null){Ext.Array.remove(this.listeners,f);f.destroy()}},on:function(b,a,c,f,e,d){return this.addListener(b,a,c,f,e,d)},un:function(b,a,c,e,d){return this.removeListener(b,a,c,e,d)},findListener:function(a,c,f,g,i){var b,d,h,e;e=this.listeners;for(d=0,h=e.length;d<h;d++){b=e[d];if(b.container===a&&b.selector===c&&b.eventName===f&&b.fn===g&&b.scope===i){return b}}return null},register:function(a){a.on(\"added\",this.onComponentAdded,this);a.on(\"removed\",this.onComponentRemoved,this)},unregister:function(a){a.un(\"added\",this.onComponentAdded,this);a.un(\"removed\",this.onComponentRemoved,this)},onComponentAdded:function(c,b,d){var g,f,a,e;e=this.listeners;for(f=0,a=e.length;f<a;f++){g=e[f];g.register(c)}},onComponentRemoved:function(c,b,d){var g,f,a,e;e=this.listeners;for(f=0,a=e.length;f<a;f++){g=e[f];g.unregister(c)}}},function(){if(Ext.getVersion(\"touch\")!=null){Ext.define(\"Deft.Component\",{override:\"Ext.Component\",setParent:function(c){var b,a;b=this.getParent();a=this.callParent(arguments);if(b===null&&c!==null){this.fireEvent(\"added\",this,c)}else{if(b!==null&&c!==null){this.fireEvent(\"removed\",this,b);this.fireEvent(\"added\",this,c)}else{if(b!==null&&c===null){this.fireEvent(\"removed\",this,b)}}}return a},isDescendantOf:function(a){var b;b=this.getParent();while(b!=null){if(b===a){return true}b=b.getParent()}return false}})}Ext.Function.interceptAfter(Ext.ComponentManager,\"register\",function(a){Deft.event.LiveEventBus.register(a)});Ext.Function.interceptAfter(Ext.ComponentManager,\"unregister\",function(a){Deft.event.LiveEventBus.unregister(a)})});Ext.define(\"Deft.core.Class\",{alternateClassName:[\"Deft.Class\"],statics:{registerPreprocessor:function(b,d,a,c){if(Ext.getVersion(\"extjs\")&&Ext.getVersion(\"core\").isLessThan(\"4.1.0\")){Ext.Class.registerPreprocessor(b,function(e,f,g){return d.call(this,e,f,f,g)}).setDefaultPreprocessorPosition(b,a,c)}else{Ext.Class.registerPreprocessor(b,function(f,g,e,h){return d.call(this,f,g,e,h)},[b],a,c)}},hookOnClassCreated:function(a,b){if(Ext.getVersion(\"extjs\")&&Ext.getVersion(\"core\").isLessThan(\"4.1.0\")){Ext.Function.interceptBefore(a,\"onClassCreated\",b)}else{Ext.Function.interceptBefore(a,\"onCreated\",b)}},hookOnClassExtended:function(c,b){var a;if(Ext.getVersion(\"extjs\")&&Ext.getVersion(\"core\").isLessThan(\"4.1.0\")){a=function(d,e){return b.call(this,d,e,e)}}else{a=b}if(c.onClassExtended!=null){Ext.Function.interceptBefore(c,\"onClassExtended\",a)}else{c.onClassExtended=a}},extendsClass:function(c,b){var a;try{if(Ext.getClassName(c)===b){return true}if(c!=null?c.superclass:void 0){if(Ext.getClassName(c.superclass)===b){return true}else{return Deft.Class.extendsClass(Ext.getClass(c.superclass),b)}}else{return false}}catch(d){a=d;return false}}}});Ext.define(\"Deft.mixin.Controllable\",{onClassMixedIn:function(a){Deft.Logger.deprecate(\"Deft.mixin.Controllable has been deprecated and can now be omitted - simply use the 'controller' class annotation on its own.\")}},function(){var a;if(Ext.getVersion(\"extjs\")&&Ext.getVersion(\"core\").isLessThan(\"4.1.0\")){a=function(){return function(d){var b,c;if(d==null){d={}}if(this instanceof Ext.ClassManager.get(\"Ext.Component\")&&!this.$controlled){try{b=Ext.create(this.controller,d.controllerConfig||this.controllerConfig||{})}catch(e){c=e;Deft.Logger.warn(\"Error initializing view controller: an error occurred while creating an instance of the specified controller: '\"+this.controller+\"'.\");throw c}if(this.getController===void 0){this.getController=function(){return b}}this.$controlled=true;this.callOverridden(arguments);b.controlView(this);return this}return this.callOverridden(arguments)}}}else{a=function(){return function(d){var b,c;if(d==null){d={}}if(this instanceof Ext.ClassManager.get(\"Ext.Component\")&&!this.$controlled){try{b=Ext.create(this.controller,d.controllerConfig||this.controllerConfig||{})}catch(e){c=e;Deft.Logger.warn(\"Error initializing view controller: an error occurred while creating an instance of the specified controller: '\"+this.controller+\"'.\");throw c}if(this.getController===void 0){this.getController=function(){return b}}this.$controlled=true;this.callParent(arguments);b.controlView(this);return this}return this.callParent(arguments)}}}Deft.Class.registerPreprocessor(\"controller\",function(d,e,b,f){var c;Deft.Class.hookOnClassCreated(b,function(g){g.override({constructor:a()})});Deft.Class.hookOnClassExtended(e,function(h,i,g){Deft.Class.hookOnClassCreated(g,function(j){j.override({constructor:a()})})});c=this;Ext.require([e.controller],function(){if(f!=null){f.call(c,d,e,b)}});return false},\"before\",\"extend\")});Ext.define(\"Deft.mixin.Injectable\",{onClassMixedIn:function(a){Deft.Logger.deprecate(\"Deft.mixin.Injectable has been deprecated and can now be omitted - simply use the 'inject' class annotation on its own.\")}},function(){var a;if(Ext.getVersion(\"extjs\")&&Ext.getVersion(\"core\").isLessThan(\"4.1.0\")){a=function(){return function(){if(!this.$injected){Deft.Injector.inject(this.inject,this,arguments,false);this.$injected=true}return this.callOverridden(arguments)}}}else{a=function(){return function(){if(!this.$injected){Deft.Injector.inject(this.inject,this,arguments,false);this.$injected=true}return this.callParent(arguments)}}}Deft.Class.registerPreprocessor(\"inject\",function(b,e,j,i){var g,f,c,h,d;if(Ext.isString(e.inject)){e.inject=[e.inject]}if(Ext.isArray(e.inject)){g={};d=e.inject;for(c=0,h=d.length;c<h;c++){f=d[c];g[f]=f}e.inject=g}Deft.Class.hookOnClassCreated(j,function(k){k.override({constructor:a()})});Deft.Class.hookOnClassExtended(e,function(l,m,k){Deft.Class.hookOnClassCreated(k,function(n){n.override({constructor:a()})});if(m.inject==null){m.inject={}}Ext.applyIf(m.inject,l.superclass.inject)})},\"before\",\"extend\")});Ext.define(\"Deft.mvc.Application\",{alternateClassName:[\"Deft.Application\"],initialized:false,constructor:function(a){if(a==null){a={}}this.initConfig(a);Ext.onReady(function(){this.init();this.initialized=true},this);return this},init:function(){}});Ext.define(\"Deft.mvc.ComponentSelectorListener\",{constructor:function(c){var b,e,a,d;Ext.apply(this,c);if(this.componentSelector.live){Deft.LiveEventBus.addListener(this.componentSelector.view,this.componentSelector.selector,this.eventName,this.fn,this.scope,this.options)}else{d=this.componentSelector.components;for(e=0,a=d.length;e<a;e++){b=d[e];b.on(this.eventName,this.fn,this.scope,this.options)}}return this},destroy:function(){var b,d,a,c;if(this.componentSelector.live){Deft.LiveEventBus.removeListener(this.componentSelector.view,this.componentSelector.selector,this.eventName,this.fn,this.scope)}else{c=this.componentSelector.components;for(d=0,a=c.length;d<a;d++){b=c[d];b.un(this.eventName,this.fn,this.scope)}}}});Ext.define(\"Deft.mvc.ComponentSelector\",{constructor:function(c){var a,e,g,b,d,f;Ext.apply(this,c);if(!this.live){this.components=this.selector!=null?Ext.ComponentQuery.query(this.selector,this.view):[this.view]}this.selectorListeners=[];if(Ext.isObject(this.listeners)){f=this.listeners;for(a in f){g=f[a];e=g;d=this.scope;b=null;if(Ext.isObject(g)){b=Ext.apply({},g);if(b.fn!=null){e=b.fn;delete b.fn}if(b.scope!=null){d=b.scope;delete b.scope}}if(Ext.isString(e)&&Ext.isFunction(d[e])){e=d[e]}if(!Ext.isFunction(e)){Ext.Error.raise({msg:\"Error adding '\"+a+\"' listener: the specified handler '\"+e+\"' is not a Function or does not exist.\"})}this.addListener(a,e,d,b)}}return this},destroy:function(){var d,c,a,b;b=this.selectorListeners;for(c=0,a=b.length;c<a;c++){d=b[c];d.destroy()}this.selectorListeners=[]},addListener:function(a,d,c,b){var e;if(this.findListener(a,d,c)!=null){Ext.Error.raise({msg:\"Error adding '\"+a+\"' listener: an existing listener for the specified function was already registered for '\"+this.selector+\".\"})}Deft.Logger.log(\"Adding '\"+a+\"' listener to '\"+this.selector+\"'.\");e=Ext.create(\"Deft.mvc.ComponentSelectorListener\",{componentSelector:this,eventName:a,fn:d,scope:c,options:b});this.selectorListeners.push(e)},removeListener:function(a,c,b){var d;d=this.findListener(a,c,b);if(d!=null){Deft.Logger.log(\"Removing '\"+a+\"' listener from '\"+this.selector+\"'.\");d.destroy();Ext.Array.remove(this.selectorListeners,d)}},findListener:function(b,d,c){var g,f,a,e;e=this.selectorListeners;for(f=0,a=e.length;f<a;f++){g=e[f];if(g.eventName===b&&g.fn===d&&g.scope===c){return g}}return null}});Ext.define(\"Deft.util.Function\",{alternateClassName:[\"Deft.Function\"],statics:{memoize:function(d,c,a){var b;b={};return function(f){var e;e=Ext.isFunction(a)?a.apply(c,arguments):f;if(!(e in b)){b[e]=d.apply(c,arguments)}return b[e]}},nextTick:function(b,a){if(a!=null){b=Ext.Function.bind(b,a)}setTimeout(b,0)},spread:function(b,a){return function(c){if(!Ext.isArray(c)){Ext.Error.raise({msg:\"Error spreading passed Array over target function arguments: passed a non-Array.\"})}return b.apply(a,c)}}}},function(){if(typeof setImmediate!==\"undefined\"&&setImmediate!==null){return this.nextTick=function(b,a){if(a!=null){b=Ext.Function.bind(b,a)}setImmediate(b)}}});Ext.define(\"Deft.mvc.Observer\",{statics:{mergeObserve:function(b,l){var d,q,m,r,g,k,o,i,n,p,e,f,a,j,h,c;if(!Ext.isObject(b)){a={}}else{a=Ext.clone(b)}if(!Ext.isObject(l)){g={}}else{g=Ext.clone(l)}i=[\"buffer\",\"single\",\"delay\",\"element\",\"target\",\"destroyable\"];o=function(A){var D,z,u,C,t,v,y,x,B,s,w;w=[];for(C in A){u=A[C];if(Ext.isArray(u)){z={};for(y=0,B=u.length;y<B;y++){v=u[y];if(Ext.Object.getSize(v)===1){Ext.apply(z,v)}else{D={};if((v!=null?v.fn:void 0)!=null){D.fn=v.fn}if((v!=null?v.scope:void 0)!=null){D.scope=v.scope}for(x=0,s=i.length;x<s;x++){t=i[x];if((v!=null?v[t]:void 0)!=null){D[t]=v[t]}}z[v.event]=[D]}}w.push(A[C]=z)}else{w.push(void 0)}}return w};o(a);o(g);for(k in g){q=g[k];for(d in q){m=q[d];if(Ext.isString(m)){g[k][d]=m.replace(\" \",\"\").split(\",\")}if(!(a!=null?a[k]:void 0)){a[k]={}}if(!(a!=null?(h=a[k])!=null?h[d]:void 0:void 0)){a[k][d]=g[k][d];delete g[k][d]}}}for(j in a){p=a[j];for(n in p){e=p[n];if(Ext.isString(e)){a[j][n]=e.split(\",\")}if(g!=null?(c=g[j])!=null?c[n]:void 0:void 0){r=g[j][n];f=a[j][n];a[j][n]=Ext.Array.unique(Ext.Array.insert(f,0,r))}}}return a}},constructor:function(a){var c,k,j,f,i,l,g,h,d,b,e;this.listeners=[];i=a!=null?a.host:void 0;d=a!=null?a.target:void 0;k=a!=null?a.events:void 0;if(i&&d&&(this.isPropertyChain(d)||this.isTargetObservable(i,d))){for(c in k){f=k[c];if(Ext.isString(f)){f=f.replace(\" \",\"\").split(\",\")}for(b=0,e=f.length;b<e;b++){j=f[b];h=i;l=null;if(Ext.isObject(j)){l=Ext.clone(j);if(l!=null?l.event:void 0){c=this.extract(l,\"event\")}if(l!=null?l.fn:void 0){j=this.extract(l,\"fn\")}if(l!=null?l.scope:void 0){h=this.extract(l,\"scope\")}}g=this.locateReferences(i,d,j);if(g){g.target.on(c,g.handler,h,l);this.listeners.push({targetName:d,target:g.target,event:c,handler:g.handler,scope:h});Deft.Logger.log(\"Created observer on '\"+d+\"' for event '\"+c+\"'.\")}else{Deft.Logger.warn(\"Could not create observer on '\"+d+\"' for event '\"+c+\"'.\")}}}}else{Deft.Logger.warn(\"Could not create observers on '\"+d+\"' because '\"+d+\"' is not an Ext.util.Observable\")}return this},isTargetObservable:function(b,e){var a,d,c;a=this.locateTarget(b,e);if(a==null){return false}if((a.isObservable!=null)||(((c=a.mixins)!=null?c.observable:void 0)!=null)){return true}else{d=Ext.ClassManager.getClass(a);return Deft.Class.extendsClass(d,\"Ext.util.Observable\")||Deft.Class.extendsClass(d,\"Ext.mixin.Observable\")}},locateTarget:function(b,c){var a;if(Ext.isFunction(b[\"get\"+Ext.String.capitalize(c)])){a=b[\"get\"+Ext.String.capitalize(c)].call(b);return a}else{if((b!=null?b[c]:void 0)!=null){a=b[c];return a}else{return null}}},isPropertyChain:function(a){return Ext.isString(a)&&a.indexOf(\".\")>-1},locateReferences:function(c,d,a){var b,e;b=c;if(this.isPropertyChain(d)){e=this.parsePropertyChain(c,d);if(!e){return null}c=e.host;d=e.target}if(Ext.isFunction(a)){return{target:this.locateTarget(c,d),handler:a}}else{if(Ext.isFunction(b[a])){return{target:this.locateTarget(c,d),handler:b[a]}}else{return null}}},parsePropertyChain:function(a,b){var c;if(Ext.isString(b)){c=b.split(\".\")}else{if(Ext.isArray(b)){c=b}else{return null}}if(c.length>1&&(this.locateTarget(a,c[0])!=null)){return this.parsePropertyChain(this.locateTarget(a,c[0]),c.slice(1))}else{if(this.isTargetObservable(a,c[0])){return{host:a,target:c[0]}}else{return null}}},extract:function(a,b){var c;c=a[b];delete a[b];return c},destroy:function(){var d,c,a,b;b=this.listeners;for(c=0,a=b.length;c<a;c++){d=b[c];Deft.Logger.log(\"Removing observer on '\"+d.targetName+\"' for event '\"+d.event+\"'.\");d.target.un(d.event,d.handler,d.scope)}this.listeners=[]}});Ext.define(\"Deft.mvc.ViewController\",{alternateClassName:[\"Deft.ViewController\"],config:{view:null},observe:{},constructor:function(a){if(a==null){a={}}if(a.view){this.controlView(a.view)}this.initConfig(a);if(Ext.Object.getSize(this.observe)>0){this.createObservers()}return this},controlView:function(a){if(a instanceof Ext.ClassManager.get(\"Ext.Component\")){this.setView(a);this.registeredComponentReferences={};this.registeredComponentSelectors={};if(Ext.getVersion(\"extjs\")!=null){if(this.getView().rendered){this.onViewInitialize()}else{this.getView().on(\"afterrender\",this.onViewInitialize,this,{single:true})}}else{if(this.getView().initialized){this.onViewInitialize()}else{this.getView().on(\"initialize\",this.onViewInitialize,this,{single:true})}}}else{Ext.Error.raise({msg:\"Error constructing ViewController: the configured 'view' is not an Ext.Component.\"})}},init:function(){},destroy:function(){var b,a;for(b in this.registeredComponentReferences){this.removeComponentReference(b)}for(a in this.registeredComponentSelectors){this.removeComponentSelector(a)}this.removeObservers();return true},onViewInitialize:function(){var d,h,e,f,c,a,b,g;if(Ext.getVersion(\"extjs\")!=null){this.getView().on(\"beforedestroy\",this.onViewBeforeDestroy,this)}else{b=this;c=this.getView().destroy;this.getView().destroy=function(){if(b.destroy()){c.call(this)}}}g=this.control;for(h in g){d=g[h];a=null;if(h!==\"view\"){if(Ext.isString(d)){a=d}else{if(d.selector!=null){a=d.selector}else{a=\"#\"+h}}}e=null;if(Ext.isObject(d.listeners)){e=d.listeners}else{if(!((d.selector!=null)||(d.live!=null))){e=d}}f=(d.live!=null)&&d.live;this.addComponentReference(h,a,f);this.addComponentSelector(a,e,f)}this.init()},onViewBeforeDestroy:function(){if(this.destroy()){this.getView().un(\"beforedestroy\",this.onViewBeforeDestroy,this);return true}return false},addComponentReference:function(e,a,c){var b,d;if(c==null){c=false}Deft.Logger.log(\"Adding '\"+e+\"' component reference for selector: '\"+a+\"'.\");if(this.registeredComponentReferences[e]!=null){Ext.Error.raise({msg:\"Error adding component reference: an existing component reference was already registered as '\"+e+\"'.\"})}if(e!==\"view\"){b=\"get\"+Ext.String.capitalize(e);if(this[b]==null){if(c){this[b]=Ext.Function.pass(this.getViewComponent,[a],this)}else{d=this.getViewComponent(a);if(d==null){Ext.Error.raise({msg:\"Error locating component: no component(s) found matching '\"+a+\"'.\"})}this[b]=function(){return d}}this[b].generated=true}}this.registeredComponentReferences[e]=true},removeComponentReference:function(b){var a;Deft.Logger.log(\"Removing '\"+b+\"' component reference.\");if(this.registeredComponentReferences[b]==null){Ext.Error.raise({msg:\"Error removing component reference: no component reference is registered as '\"+b+\"'.\"})}if(b!==\"view\"){a=\"get\"+Ext.String.capitalize(b);if(this[a].generated){this[a]=null}}delete this.registeredComponentReferences[b]},getViewComponent:function(a){var b;if(a!=null){b=Ext.ComponentQuery.query(a,this.getView());if(b.length===0){return null}else{if(b.length===1){return b[0]}else{return b}}}else{return this.getView()}},addComponentSelector:function(a,b,c){var d,e;if(c==null){c=false}Deft.Logger.log(\"Adding component selector for: '\"+a+\"'.\");e=this.getComponentSelector(a);if(e!=null){Ext.Error.raise({msg:\"Error adding component selector: an existing component selector was already registered for '\"+a+\"'.\"})}d=Ext.create(\"Deft.mvc.ComponentSelector\",{view:this.getView(),selector:a,listeners:b,scope:this,live:c});this.registeredComponentSelectors[a]=d},removeComponentSelector:function(a){var b;Deft.Logger.log(\"Removing component selector for '\"+a+\"'.\");b=this.getComponentSelector(a);if(b==null){Ext.Error.raise({msg:\"Error removing component selector: no component selector registered for '\"+a+\"'.\"})}b.destroy();delete this.registeredComponentSelectors[a]},getComponentSelector:function(a){return this.registeredComponentSelectors[a]},createObservers:function(){var a,c,b;this.registeredObservers={};b=this.observe;for(c in b){a=b[c];this.addObserver(c,a)}},addObserver:function(c,b){var a;a=Ext.create(\"Deft.mvc.Observer\",{host:this,target:c,events:b});return this.registeredObservers[c]=a},removeObservers:function(){var a,c,b;b=this.registeredObservers;for(c in b){a=b[c];a.destroy();delete this.registeredObservers[c]}}},function(){return Deft.Class.registerPreprocessor(\"observe\",function(b,c,a,d){Deft.Class.hookOnClassExtended(c,function(f,h,e){var g;if(f.superclass&&((g=f.superclass)!=null?g.observe:void 0)&&Deft.Class.extendsClass(f,\"Deft.mvc.ViewController\")){h.observe=Deft.mvc.Observer.mergeObserve(f.superclass.observe,h.observe)}})},\"before\",\"extend\")});Ext.define(\"Deft.promise.Resolver\",{alternateClassName:[\"Deft.Resolver\"],constructor:function(o,a,m){var c,k,j,e,n,l,h,i,b,d,g,f;this.promise=Ext.create(\"Deft.promise.Promise\",this);i=[];d=false;e=false;n=null;l=null;if(!Ext.isFunction(a)){a=function(p){throw p}}h=Deft.util.Function.nextTick;g=function(){var q,r,p;for(r=0,p=i.length;r<p;r++){q=i[r];q[n](l)}i=[]};f=function(p){i.push(p);if(e){g()}};c=function(q,p){o=a=m=null;n=q;l=p;e=true;g()};j=function(p){c(\"resolve\",p)};k=function(p){c(\"reject\",p)};b=function(s,q){var p;d=true;try{if(Ext.isFunction(s)){q=s(q)}if(q&&Ext.isFunction(q.then)){q.then(j,k)}else{j(q)}}catch(r){p=r;k(p)}};this.resolve=function(p){if(!d){b(o,p)}};this.reject=function(p){if(!d){b(a,p)}};this.update=function(q){var r,s,p;if(!e){if(Ext.isFunction(m)){q=m(q)}for(s=0,p=i.length;s<p;s++){r=i[s];r.update(q)}}};this.then=function(s,p,r){var q;if(Ext.isFunction(s)||Ext.isFunction(p)||Ext.isFunction(r)){q=Ext.create(\"Deft.promise.Resolver\",s,p,r);h(function(){return f(q)});return q.promise}return this.promise};return this},resolve:Ext.emptyFn,reject:Ext.emptyFn,update:Ext.emptyFn,then:Ext.emptyFn});Ext.define(\"Deft.promise.Promise\",{alternateClassName:[\"Deft.Promise\"],statics:{when:function(a){var b;b=Ext.create(\"Deft.promise.Deferred\");b.resolve(a);return b.promise},isPromise:function(a){return(a&&Ext.isFunction(a.then))===true},all:function(a){if(!(Ext.isArray(a)||Deft.Promise.isPromise(a))){throw new Error(\"Invalid parameter: expected an Array or Promise of an Array.\")}return Deft.Promise.map(a,function(b){return b})},any:function(a){if(!(Ext.isArray(a)||Deft.Promise.isPromise(a))){throw new Error(\"Invalid parameter: expected an Array or Promise of an Array.\")}return Deft.Promise.some(a,1).then(function(b){return b[0]},function(b){if(b.message===\"Too few Promises were resolved.\"){throw new Error(\"No Promises were resolved.\")}else{throw b}})},some:function(b,a){if(!(Ext.isArray(b)||Deft.Promise.isPromise(b))){throw new Error(\"Invalid parameter: expected an Array or Promise of an Array.\")}if(!Ext.isNumeric(a)||a<=0){throw new Error(\"Invalid parameter: expected a positive integer.\")}return Deft.Promise.when(b).then(function(i){var d,p,k,n,o,e,g,c,j,f,m,h,l;m=[];j=a;c=(i.length-j)+1;p=Ext.create(\"Deft.promise.Deferred\");if(i.length<a){p.reject(new Error(\"Too few Promises were resolved.\"))}else{f=function(q){m.push(q);j--;if(j===0){d();p.resolve(m)}return q};g=function(q){c--;if(c===0){d();p.reject(new Error(\"Too few Promises were resolved.\"))}return q};d=function(){return f=g=Ext.emptyFn};o=function(q){return f(q)};n=function(q){return g(q)};for(k=h=0,l=i.length;h<l;k=++h){e=i[k];if(k in i){Deft.Promise.when(e).then(o,n)}}}return p.promise})},delay:function(a,c){var b;if(arguments.length===1){c=a;a=void 0}c=Math.max(c,0);b=Ext.create(\"Deft.promise.Deferred\");setTimeout(function(){b.resolve(a)},c);return b.promise},timeout:function(b,d){var a,c,e;c=Ext.create(\"Deft.promise.Deferred\");e=setTimeout(function(){if(e){c.reject(new Error(\"Promise timed out.\"))}},d);a=function(){clearTimeout(e);return e=null};Deft.Promise.when(b).then(function(f){a();c.resolve(f)},function(f){a();c.reject(f)});return c.promise},memoize:function(d,c,a){var b;b=Deft.util.Function.memoize(d,c,a);return function(){return Deft.Promise.all(Ext.Array.toArray(arguments)).then(function(e){return b.apply(c,e)})}},map:function(a,b){if(!(Ext.isArray(a)||Deft.Promise.isPromise(a))){throw new Error(\"Invalid parameter: expected an Array or Promise of an Array.\")}if(!Ext.isFunction(b)){throw new Error(\"Invalid parameter: expected a function.\")}return Deft.Promise.when(a).then(function(d){var k,h,c,g,j,f,e,i;g=d.length;f=new Array(d.length);k=Ext.create(\"Deft.promise.Deferred\");if(!g){k.resolve(f)}else{j=function(m,l){return Deft.Promise.when(m).then(function(n){return b(n,l,f)}).then(function(n){f[l]=n;if(!--g){k.resolve(f)}return n},k.reject)};for(h=e=0,i=d.length;e<i;h=++e){c=d[h];if(h in d){j(d[h],h)}else{g--}}}return k.promise})},reduce:function(b,c,a){var d;if(!(Ext.isArray(b)||Deft.Promise.isPromise(b))){throw new Error(\"Invalid parameter: expected an Array or Promise of an Array.\")}if(!Ext.isFunction(c)){throw new Error(\"Invalid parameter: expected a function.\")}d=arguments.length===3;return Deft.Promise.when(b).then(function(f){var e;e=[function(h,i,g){return Deft.Promise.when(h).then(function(j){return Deft.Promise.when(i).then(function(k){return c(j,k,g,f)})})}];if(d){e.push(a)}return Deft.Promise.reduceArray.apply(f,e)})},reduceArray:function(f,a){var d,g,c,e,b;c=0;g=Object(this);e=g.length>>>0;d=arguments;if(d.length<=1){while(true){if(c in g){b=g[c++];break}if(++c>=e){throw new TypeError(\"Reduce of empty array with no initial value\")}}}else{b=d[1]}while(c<e){if(c in g){b=f(b,g[c],c,g)}c++}return b}},constructor:function(b){var a;a=function(c){Deft.util.Function.nextTick(function(){throw c})};this.then=function(g,c,f,d){var e;if(arguments.length===1&&Ext.isObject(arguments[0])){e=arguments[0],g=e.success,c=e.failure,f=e.progress,d=e.scope}if(d!=null){if(Ext.isFunction(g)){g=Ext.Function.bind(g,d)}if(Ext.isFunction(c)){c=Ext.Function.bind(c,d)}if(Ext.isFunction(f)){f=Ext.Function.bind(f,d)}}return b.then(g,c,f)};this.otherwise=function(c,d){var e;if(arguments.length===1&&Ext.isObject(arguments[0])){e=arguments[0],c=e.fn,d=e.scope}if(d!=null){c=Ext.Function.bind(c,d)}return b.then(null,c)};this.always=function(c,d){var e;if(arguments.length===1&&Ext.isObject(arguments[0])){e=arguments[0],c=e.fn,d=e.scope}if(d!=null){c=Ext.Function.bind(c,d)}return b.then(function(g){var f;try{c()}catch(h){f=h;a(f)}return g},function(g){var f;try{c()}catch(h){f=h;a(f)}throw g})};this.done=function(){b.then(null,a)};this.cancel=function(c){if(c==null){c=null}b.reject(new CancellationError(c))};this.log=function(c){if(c==null){c=\"\"}return b.then(function(d){Deft.Logger.log(\"\"+(c||\"Promise\")+\" resolved with value: \"+d);return d},function(d){Deft.Logger.log(\"\"+(c||\"Promise\")+\" rejected with reason: \"+d);throw d})};return this},then:Ext.emptyFn,otherwise:Ext.emptyFn,always:Ext.emptyFn,done:Ext.emptyFn,cancel:Ext.emptyFn,log:Ext.emptyFn},function(){var a;if(Array.prototype.reduce!=null){this.reduceArray=Array.prototype.reduce}a=typeof exports!==\"undefined\"&&exports!==null?exports:window;a.CancellationError=function(b){if(Error.captureStackTrace){Error.captureStackTrace(this,CancellationError)}this.name=\"Canceled\";this.message=b};a.CancellationError.prototype=new Error();a.CancellationError.constructor=a.CancellationError});Ext.define(\"Deft.promise.Chain\",{alternateClassName:[\"Deft.Chain\"],statics:{sequence:function(b,c){var a;if(c==null){c=null}a=[].slice.call(arguments,2);return Deft.Promise.reduce(b,function(d,e){if(!Ext.isFunction(e)){throw new Error(\"Invalid parameter: expected a function.\")}return Deft.Promise.when(e.apply(c,a)).then(function(f){d.push(f);return d})},[])},parallel:function(b,c){var a;if(c==null){c=null}a=[].slice.call(arguments,2);return Deft.Promise.map(b,function(d){if(!Ext.isFunction(d)){throw new Error(\"Invalid parameter: expected a function.\")}return d.apply(c,a)})},pipeline:function(b,a,c){if(c==null){c=null}return Deft.Promise.reduce(b,function(e,d){if(!Ext.isFunction(d)){throw new Error(\"Invalid parameter: expected a function.\")}return d.call(c,e)},a)}}});Ext.define(\"Deft.promise.Deferred\",{alternateClassName:[\"Deft.Deferred\"],statics:{resolve:function(b){var a;a=Ext.create(\"Deft.promise.Deferred\");a.resolve(b);return a.promise},reject:function(b){var a;a=Ext.create(\"Deft.promise.Deferred\");a.reject(b);return a.promise}},promise:null,constructor:function(){var a;a=Ext.create(\"Deft.promise.Resolver\");this.promise=a.promise;this.resolve=function(b){return a.resolve(b)};this.reject=function(b){return a.reject(b)};this.update=function(b){return a.update(b)};return this},resolve:Ext.emptyFn,reject:Ext.emptyFn,update:Ext.emptyFn,getPromise:function(){return this.promise}});\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\AppEvents.js:\n    1  Ext.define('CBH.AppEvents', {\n    2      singleton: true,\n    3:     mixins: {\n    4          observable: 'Ext.util.Observable'\n    5      },\n    .\n   10          // processed to add listeners.\n   11          //\n   12:         this.mixins.observable.constructor.call(this, config);\n   13  \n   14          this.addEvents(\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\controller\\Home.js:\n   12          'common.Employees',\n   13          'common.FreightDestinations',\n   14:         'common.InspectionCompanies',\n   15          'common.Languages',\n   16          'common.NavTree',\n   ..\n   42          'jobs.JobList',\n   43          'jobs.JobPurchaseOrderCharges',\n   44:         'jobs.JobPurchaseOrderInstructions',\n   45          'jobs.JobPurchaseOrderItems',\n   46          'jobs.JobPurchaseOrders',\n   ..\n   53          'jobs.qLstJobPurchaseOrders',\n   54          'jobs.tlkpChargeCategories',\n   55:         'jobs.tlkpJobPurchaseOrderInstructions',\n   56          'jobs.JobStatusHistorySubDetails',\n   57          'jobs.qfrmJobStatusHistory',\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\common\\Countries.js:\n    6      { name:'CountryCode', type:'string' },\n    7      { name:'CountryName', type:'string' },\n    8:     { name:'CountryFOBValueForInspection', type:'float' },\n    9:     { name:'CountryFOBValueForInspectionCurrencyCode', type:'string' },\n   10      { name:'CountryModifiedBy', type:'string', useNull: true, defaultValue: null },\n   11      { name:'CountryModifiedDate', type:'date', useNull: true }\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\common\\InspectionCompanies.js:\n    1: Ext.define('CBH.model.common.InspectionCompanies', {\n    2      extend: 'Ext.data.Model',\n    3:     alias: 'model.inspectioncompanies',\n    4:     idProperty: 'InspectorKey',\n    5  \n    6      fields: [\n    7:     { name:'InspectorKey', type:'int', defaultValue: null },\n    8:     { name:'InspectorName', type:'string' },\n    9:     { name:'InspectorSort', type:'int', defaultValue: null }\n   10      ],\n   11  \n   12      proxy:{\n   13          type:'rest',\n   14:         url:CBH.GlobalSettings.webApiPath + '/api/InspectionCompanies',\n   15          headers: {\n   16             'Authorization-Token': Ext.util.Cookies.get('CBH.UserAuth')\n   ..\n   22              successProperty: 'success',\n   23              messageProperty: 'message',\n   24:             idProperty: 'InspectorKey'\n   25          },\n   26          afterRequest: function (request, success) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\common\\PaymentTerms.js:\n    9      { name:'TermPercentWithOrder', type:'float' },\n   10      { name:'TermPercentPriorToShip', type:'float' },\n   11:     { name:'TermPercentAgainstShipDocs', type:'float' },\n   12      { name:'TermPercentNet', type:'float' },\n   13      { name:'TermPercentDays', type:'int' },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\jobs\\JobHeader.js:\n   30          { name:'JobCarrierRefNum', type:'string', useNull: true, defaultValue: null },\n   31          { name:'JobCarrierVessel', type:'string', useNull: true, defaultValue: null },\n   32:         { name:'JobInspectorKey', type:'int', useNull: true, defaultValue: null },\n   33:         { name:'JobInspectionNum', type:'string', useNull: true, defaultValue: null },\n   34:         { name:'JobInspectionCertificateNum', type:'string', useNull: true, defaultValue: null },\n   35          { name:'JobDUINum', type:'string', useNull: true, defaultValue: null },\n   36          { name:'JobClosed', type:'date', useNull: true, defaultValue: null },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\jobs\\JobPurchaseOrderInstructions.js:\n    1: Ext.define('CBH.model.jobs.JobPurchaseOrderInstructions', {\n    2      extend: 'Ext.data.Model',\n    3:     alias: 'model.JobPurchaseOrderInstructions',\n    4:     idProperty: 'POInstructionsKey',\n    5  \n    6      fields: [\n    7:     { name:'POInstructionsKey', type:'int', defaultValue: null },\n    8:     { name:'POInstructionsPOKey', type:'int', defaultValue: null },\n    9:     { name:'POInstructionsStep', type:'int', defaultValue: null },\n   10:     { name:'POInstructionsInstructionKey', type:'int', useNull: true, defaultValue: null },\n   11:     { name:'POInstructionsMemo', type:'string', useNull: true, defaultValue: null },\n   12:     { name:'POInstructionsMemoFontColor', type:'int', defaultValue: null },\n   13      { name:'x_ITextMemo', type:'string', defaultValue:null},\n   14      { name:'x_NotesFontColor', type:'string', defaultValue:null}\n   ..\n   16      proxy:{\n   17          type:'rest',\n   18:         url:CBH.GlobalSettings.webApiPath + '/api/JobPurchaseOrderInstructions',\n   19          headers: {\n   20               'Authorization-Token': Ext.util.Cookies.get('CBH.UserAuth')\n   ..\n   26              successProperty: 'success',\n   27              messageProperty: 'message',\n   28:             idProperty: 'POInstructionsKey'\n   29          },\n   30          writer: {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\jobs\\qJobOverview.js:\n   13      { name:'JobCarrierRefNum', type:'string', useNull: true, defaultValue: null },\n   14      { name:'JobCarrierVessel', type:'string', useNull: true, defaultValue: null },\n   15:     { name:'JobInspectionCertificateNum', type:'string', useNull: true, defaultValue: null },\n   16      { name:'JobCustPaymentTerms', type:'int', defaultValue: null },\n   17      { name:'JobClosed', type:'date', useNull: true, defaultValue: null },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\jobs\\qryJobSearch.js:\n   16          { name:'JobCustCurrencyCode', type:'string' },\n   17          { name:'ShipType', type:'string', useNull: true, defaultValue: null },\n   18:         { name:'InspectionNum', type:'string', useNull: true, defaultValue: null },\n   19          { name:'JobDUINum', type:'string', useNull: true, defaultValue: null },\n   20          { name:'JobShipDate', type:'date', defaultValue: null },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\jobs\\tlkpJobPurchaseOrderInstructions.js:\n    1: Ext.define('CBH.model.jobs.tlkpJobPurchaseOrderInstructions', {\n    2      extend: 'Ext.data.Model',\n    3:     alias: 'model.tlkpJobPurchaseOrderInstructions',\n    4:     idProperty: 'InstructionKey',\n    5  \n    6      fields: [\n    7:     { name:'InstructionKey', type:'int', defaultValue: null },\n    8:     { name:'InstructionSort', type:'int', defaultValue: null },\n    9:     { name:'InstructionCategory', type:'int', defaultValue: null },\n   10      { name:'x_ITextMemo', type:'string', useNull:true, defaultValue: null}\n   11      ],\n   12      proxy:{\n   13          type:'rest',\n   14:         url:CBH.GlobalSettings.webApiPath + '/api/tlkpJobPurchaseOrderInstructions',\n   15          headers: {\n   16               'Authorization-Token': Ext.util.Cookies.get('CBH.UserAuth')\n   ..\n   22              successProperty: 'success',\n   23              messageProperty: 'message',\n   24:             idProperty: 'InstructionKey'\n   25          },\n   26          writer: {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\sales\\FileQuoteHeader.js:\n   35          { name:'QHdrCreatedDate', type:'date', defaultValue: new Date() },\n   36          { name:'QHdrQuoteConfirmationDate', type:'date', useNull: true },\n   37:         { name:'QHdrInsurance', type:'boolean', useNull: true },\n   38:         { name:'QHdrInspectorKey', type:'int', useNull: true },\n   39:         { name:'QHdrInspectionNum', type:'string', useNull: true, defaultValue: null },\n   40          { name:'QHdrDUINum', type:'string', useNull: true, defaultValue: null },\n   41          { name:'QHdrJobKey', type:'int', useNull: true },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\sales\\qfrmFileQuoteConfirmation.js:\n   60          { name:'QHdrCreatedDate', type:'date', useNull: true, defaultValue: null },\n   61          { name:'QHdrQuoteConfirmationDate', type:'date', useNull: true, defaultValue: null },\n   62:         { name:'QHdrInsurance', type:'boolean', useNull: true, defaultValue: null },\n   63:         { name:'QHdrInspectorKey', type:'int', useNull: true, defaultValue: null },\n   64:         { name:'QHdrInspectionNum', type:'string', useNull: true, defaultValue: null },\n   65          { name:'QHdrDUINum', type:'string', useNull: true, defaultValue: null },\n   66          { name:'QHdrJobKey', type:'int', useNull: true, defaultValue: null }\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\sales\\qryFileQuoteSearch.js:\n   18          { name:'QHdrProdDescription', type:'string', useNull: true, defaultValue: null },\n   19          { name:'QHdrCustRefNum', type:'string', useNull: true, defaultValue: null },\n   20:         { name:'QHdrInsurance', type:'boolean', useNull: true, defaultValue: null },\n   21:         { name:'QHdrInspectionNum', type:'string', useNull: true, defaultValue: null },\n   22          { name:'QHdrDUINum', type:'string', useNull: true, defaultValue: null },\n   23          { name:'SalesEmployee', type:'string', useNull: true, defaultValue: null },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\model\\vendors\\VendorOriginAddress.js:\n   12      { name:'OriginAddress2', type:'string', useNull: true, defaultValue: null },\n   13      { name:'OriginCity', type:'string', useNull: true, defaultValue: null },\n   14:     { name:'OriginState', type:'string', useNull: true, defaultValue: null },\n   15      { name:'OriginZip', type:'string', useNull: true, defaultValue: null },\n   16      { name:'OriginCountryKey', type:'int' },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\resources\\css\\font-awesome.min.css:\n    2   *  Font Awesome 4.5.0 by @davegandy - http://fontawesome.io - @fontawesome\n    3   *  License - http://fontawesome.io/license (Font: SIL OFL 1.1, CSS: MIT License)\n    4:  */@font-face{font-family:'FontAwesome';src:url('../fonts/fontawesome-webfont.eot?v=4.5.0');src:url('../fonts/fontawesome-webfont.eot?#iefix&v=4.5.0') format('embedded-opentype'),url('../fonts/fontawesome-webfont.woff2?v=4.5.0') format('woff2'),url('../fonts/fontawesome-webfont.woff?v=4.5.0') format('woff'),url('../fonts/fontawesome-webfont.ttf?v=4.5.0') format('truetype'),url('../fonts/fontawesome-webfont.svg?v=4.5.0#fontawesomeregular') format('svg');font-weight:normal;font-style:normal}.fa{display:inline-block;font:normal normal normal 14px/1 FontAwesome;font-size:inherit;text-rendering:auto;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.fa-lg{font-size:1.33333333em;line-height:.75em;vertical-align:-15%}.fa-2x{font-size:2em}.fa-3x{font-size:3em}.fa-4x{font-size:4em}.fa-5x{font-size:5em}.fa-fw{width:1.28571429em;text-align:center}.fa-ul{padding-left:0;margin-left:2.14285714em;list-style-type:none}.fa-ul>li{position:relative}.fa-li{position:absolute;left:-2.14285714em;width:2.14285714em;top:.14285714em;text-align:center}.fa-li.fa-lg{left:-1.85714286em}.fa-border{padding:.2em .25em .15em;border:solid .08em #eee;border-radius:.1em}.fa-pull-left{float:left}.fa-pull-right{float:right}.fa.fa-pull-left{margin-right:.3em}.fa.fa-pull-right{margin-left:.3em}.pull-right{float:right}.pull-left{float:left}.fa.pull-left{margin-right:.3em}.fa.pull-right{margin-left:.3em}.fa-spin{-webkit-animation:fa-spin 2s infinite linear;animation:fa-spin 2s infinite linear}.fa-pulse{-webkit-animation:fa-spin 1s infinite steps(8);animation:fa-spin 1s infinite steps(8)}@-webkit-keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}@keyframes fa-spin{0%{-webkit-transform:rotate(0deg);transform:rotate(0deg)}100%{-webkit-transform:rotate(359deg);transform:rotate(359deg)}}.fa-rotate-90{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.fa-rotate-180{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.fa-rotate-270{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);-webkit-transform:rotate(270deg);-ms-transform:rotate(270deg);transform:rotate(270deg)}.fa-flip-horizontal{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=0, mirror=1);-webkit-transform:scale(-1, 1);-ms-transform:scale(-1, 1);transform:scale(-1, 1)}.fa-flip-vertical{filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2, mirror=1);-webkit-transform:scale(1, -1);-ms-transform:scale(1, -1);transform:scale(1, -1)}:root .fa-rotate-90,:root .fa-rotate-180,:root .fa-rotate-270,:root .fa-flip-horizontal,:root .fa-flip-vertical{filter:none}.fa-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:middle}.fa-stack-1x,.fa-stack-2x{position:absolute;left:0;width:100%;text-align:center}.fa-stack-1x{line-height:inherit}.fa-stack-2x{font-size:2em}.fa-inverse{color:#fff}.fa-glass:before{content:\"\\f000\"}.fa-music:before{content:\"\\f001\"}.fa-search:before{content:\"\\f002\"}.fa-envelope-o:before{content:\"\\f003\"}.fa-heart:before{content:\"\\f004\"}.fa-star:before{content:\"\\f005\"}.fa-star-o:before{content:\"\\f006\"}.fa-user:before{content:\"\\f007\"}.fa-film:before{content:\"\\f008\"}.fa-th-large:before{content:\"\\f009\"}.fa-th:before{content:\"\\f00a\"}.fa-th-list:before{content:\"\\f00b\"}.fa-check:before{content:\"\\f00c\"}.fa-remove:before,.fa-close:before,.fa-times:before{content:\"\\f00d\"}.fa-search-plus:before{content:\"\\f00e\"}.fa-search-minus:before{content:\"\\f010\"}.fa-power-off:before{content:\"\\f011\"}.fa-signal:before{content:\"\\f012\"}.fa-gear:before,.fa-cog:before{content:\"\\f013\"}.fa-trash-o:before{content:\"\\f014\"}.fa-home:before{content:\"\\f015\"}.fa-file-o:before{content:\"\\f016\"}.fa-clock-o:before{content:\"\\f017\"}.fa-road:before{content:\"\\f018\"}.fa-download:before{content:\"\\f019\"}.fa-arrow-circle-o-down:before{content:\"\\f01a\"}.fa-arrow-circle-o-up:before{content:\"\\f01b\"}.fa-inbox:before{content:\"\\f01c\"}.fa-play-circle-o:before{content:\"\\f01d\"}.fa-rotate-right:before,.fa-repeat:before{content:\"\\f01e\"}.fa-refresh:before{content:\"\\f021\"}.fa-list-alt:before{content:\"\\f022\"}.fa-lock:before{content:\"\\f023\"}.fa-flag:before{content:\"\\f024\"}.fa-headphones:before{content:\"\\f025\"}.fa-volume-off:before{content:\"\\f026\"}.fa-volume-down:before{content:\"\\f027\"}.fa-volume-up:before{content:\"\\f028\"}.fa-qrcode:before{content:\"\\f029\"}.fa-barcode:before{content:\"\\f02a\"}.fa-tag:before{content:\"\\f02b\"}.fa-tags:before{content:\"\\f02c\"}.fa-book:before{content:\"\\f02d\"}.fa-bookmark:before{content:\"\\f02e\"}.fa-print:before{content:\"\\f02f\"}.fa-camera:before{content:\"\\f030\"}.fa-font:before{content:\"\\f031\"}.fa-bold:before{content:\"\\f032\"}.fa-italic:before{content:\"\\f033\"}.fa-text-height:before{content:\"\\f034\"}.fa-text-width:before{content:\"\\f035\"}.fa-align-left:before{content:\"\\f036\"}.fa-align-center:before{content:\"\\f037\"}.fa-align-right:before{content:\"\\f038\"}.fa-align-justify:before{content:\"\\f039\"}.fa-list:before{content:\"\\f03a\"}.fa-dedent:before,.fa-outdent:before{content:\"\\f03b\"}.fa-indent:before{content:\"\\f03c\"}.fa-video-camera:before{content:\"\\f03d\"}.fa-photo:before,.fa-image:before,.fa-picture-o:before{content:\"\\f03e\"}.fa-pencil:before{content:\"\\f040\"}.fa-map-marker:before{content:\"\\f041\"}.fa-adjust:before{content:\"\\f042\"}.fa-tint:before{content:\"\\f043\"}.fa-edit:before,.fa-pencil-square-o:before{content:\"\\f044\"}.fa-share-square-o:before{content:\"\\f045\"}.fa-check-square-o:before{content:\"\\f046\"}.fa-arrows:before{content:\"\\f047\"}.fa-step-backward:before{content:\"\\f048\"}.fa-fast-backward:before{content:\"\\f049\"}.fa-backward:before{content:\"\\f04a\"}.fa-play:before{content:\"\\f04b\"}.fa-pause:before{content:\"\\f04c\"}.fa-stop:before{content:\"\\f04d\"}.fa-forward:before{content:\"\\f04e\"}.fa-fast-forward:before{content:\"\\f050\"}.fa-step-forward:before{content:\"\\f051\"}.fa-eject:before{content:\"\\f052\"}.fa-chevron-left:before{content:\"\\f053\"}.fa-chevron-right:before{content:\"\\f054\"}.fa-plus-circle:before{content:\"\\f055\"}.fa-minus-circle:before{content:\"\\f056\"}.fa-times-circle:before{content:\"\\f057\"}.fa-check-circle:before{content:\"\\f058\"}.fa-question-circle:before{content:\"\\f059\"}.fa-info-circle:before{content:\"\\f05a\"}.fa-crosshairs:before{content:\"\\f05b\"}.fa-times-circle-o:before{content:\"\\f05c\"}.fa-check-circle-o:before{content:\"\\f05d\"}.fa-ban:before{content:\"\\f05e\"}.fa-arrow-left:before{content:\"\\f060\"}.fa-arrow-right:before{content:\"\\f061\"}.fa-arrow-up:before{content:\"\\f062\"}.fa-arrow-down:before{content:\"\\f063\"}.fa-mail-forward:before,.fa-share:before{content:\"\\f064\"}.fa-expand:before{content:\"\\f065\"}.fa-compress:before{content:\"\\f066\"}.fa-plus:before{content:\"\\f067\"}.fa-minus:before{content:\"\\f068\"}.fa-asterisk:before{content:\"\\f069\"}.fa-exclamation-circle:before{content:\"\\f06a\"}.fa-gift:before{content:\"\\f06b\"}.fa-leaf:before{content:\"\\f06c\"}.fa-fire:before{content:\"\\f06d\"}.fa-eye:before{content:\"\\f06e\"}.fa-eye-slash:before{content:\"\\f070\"}.fa-warning:before,.fa-exclamation-triangle:before{content:\"\\f071\"}.fa-plane:before{content:\"\\f072\"}.fa-calendar:before{content:\"\\f073\"}.fa-random:before{content:\"\\f074\"}.fa-comment:before{content:\"\\f075\"}.fa-magnet:before{content:\"\\f076\"}.fa-chevron-up:before{content:\"\\f077\"}.fa-chevron-down:before{content:\"\\f078\"}.fa-retweet:before{content:\"\\f079\"}.fa-shopping-cart:before{content:\"\\f07a\"}.fa-folder:before{content:\"\\f07b\"}.fa-folder-open:before{content:\"\\f07c\"}.fa-arrows-v:before{content:\"\\f07d\"}.fa-arrows-h:before{content:\"\\f07e\"}.fa-bar-chart-o:before,.fa-bar-chart:before{content:\"\\f080\"}.fa-twitter-square:before{content:\"\\f081\"}.fa-facebook-square:before{content:\"\\f082\"}.fa-camera-retro:before{content:\"\\f083\"}.fa-key:before{content:\"\\f084\"}.fa-gears:before,.fa-cogs:before{content:\"\\f085\"}.fa-comments:before{content:\"\\f086\"}.fa-thumbs-o-up:before{content:\"\\f087\"}.fa-thumbs-o-down:before{content:\"\\f088\"}.fa-star-half:before{content:\"\\f089\"}.fa-heart-o:before{content:\"\\f08a\"}.fa-sign-out:before{content:\"\\f08b\"}.fa-linkedin-square:before{content:\"\\f08c\"}.fa-thumb-tack:before{content:\"\\f08d\"}.fa-external-link:before{content:\"\\f08e\"}.fa-sign-in:before{content:\"\\f090\"}.fa-trophy:before{content:\"\\f091\"}.fa-github-square:before{content:\"\\f092\"}.fa-upload:before{content:\"\\f093\"}.fa-lemon-o:before{content:\"\\f094\"}.fa-phone:before{content:\"\\f095\"}.fa-square-o:before{content:\"\\f096\"}.fa-bookmark-o:before{content:\"\\f097\"}.fa-phone-square:before{content:\"\\f098\"}.fa-twitter:before{content:\"\\f099\"}.fa-facebook-f:before,.fa-facebook:before{content:\"\\f09a\"}.fa-github:before{content:\"\\f09b\"}.fa-unlock:before{content:\"\\f09c\"}.fa-credit-card:before{content:\"\\f09d\"}.fa-feed:before,.fa-rss:before{content:\"\\f09e\"}.fa-hdd-o:before{content:\"\\f0a0\"}.fa-bullhorn:before{content:\"\\f0a1\"}.fa-bell:before{content:\"\\f0f3\"}.fa-certificate:before{content:\"\\f0a3\"}.fa-hand-o-right:before{content:\"\\f0a4\"}.fa-hand-o-left:before{content:\"\\f0a5\"}.fa-hand-o-up:before{content:\"\\f0a6\"}.fa-hand-o-down:before{content:\"\\f0a7\"}.fa-arrow-circle-left:before{content:\"\\f0a8\"}.fa-arrow-circle-right:before{content:\"\\f0a9\"}.fa-arrow-circle-up:before{content:\"\\f0aa\"}.fa-arrow-circle-down:before{content:\"\\f0ab\"}.fa-globe:before{content:\"\\f0ac\"}.fa-wrench:before{content:\"\\f0ad\"}.fa-tasks:before{content:\"\\f0ae\"}.fa-filter:before{content:\"\\f0b0\"}.fa-briefcase:before{content:\"\\f0b1\"}.fa-arrows-alt:before{content:\"\\f0b2\"}.fa-group:before,.fa-users:before{content:\"\\f0c0\"}.fa-chain:before,.fa-link:before{content:\"\\f0c1\"}.fa-cloud:before{content:\"\\f0c2\"}.fa-flask:before{content:\"\\f0c3\"}.fa-cut:before,.fa-scissors:before{content:\"\\f0c4\"}.fa-copy:before,.fa-files-o:before{content:\"\\f0c5\"}.fa-paperclip:before{content:\"\\f0c6\"}.fa-save:before,.fa-floppy-o:before{content:\"\\f0c7\"}.fa-square:before{content:\"\\f0c8\"}.fa-navicon:before,.fa-reorder:before,.fa-bars:before{content:\"\\f0c9\"}.fa-list-ul:before{content:\"\\f0ca\"}.fa-list-ol:before{content:\"\\f0cb\"}.fa-strikethrough:before{content:\"\\f0cc\"}.fa-underline:before{content:\"\\f0cd\"}.fa-table:before{content:\"\\f0ce\"}.fa-magic:before{content:\"\\f0d0\"}.fa-truck:before{content:\"\\f0d1\"}.fa-pinterest:before{content:\"\\f0d2\"}.fa-pinterest-square:before{content:\"\\f0d3\"}.fa-google-plus-square:before{content:\"\\f0d4\"}.fa-google-plus:before{content:\"\\f0d5\"}.fa-money:before{content:\"\\f0d6\"}.fa-caret-down:before{content:\"\\f0d7\"}.fa-caret-up:before{content:\"\\f0d8\"}.fa-caret-left:before{content:\"\\f0d9\"}.fa-caret-right:before{content:\"\\f0da\"}.fa-columns:before{content:\"\\f0db\"}.fa-unsorted:before,.fa-sort:before{content:\"\\f0dc\"}.fa-sort-down:before,.fa-sort-desc:before{content:\"\\f0dd\"}.fa-sort-up:before,.fa-sort-asc:before{content:\"\\f0de\"}.fa-envelope:before{content:\"\\f0e0\"}.fa-linkedin:before{content:\"\\f0e1\"}.fa-rotate-left:before,.fa-undo:before{content:\"\\f0e2\"}.fa-legal:before,.fa-gavel:before{content:\"\\f0e3\"}.fa-dashboard:before,.fa-tachometer:before{content:\"\\f0e4\"}.fa-comment-o:before{content:\"\\f0e5\"}.fa-comments-o:before{content:\"\\f0e6\"}.fa-flash:before,.fa-bolt:before{content:\"\\f0e7\"}.fa-sitemap:before{content:\"\\f0e8\"}.fa-umbrella:before{content:\"\\f0e9\"}.fa-paste:before,.fa-clipboard:before{content:\"\\f0ea\"}.fa-lightbulb-o:before{content:\"\\f0eb\"}.fa-exchange:before{content:\"\\f0ec\"}.fa-cloud-download:before{content:\"\\f0ed\"}.fa-cloud-upload:before{content:\"\\f0ee\"}.fa-user-md:before{content:\"\\f0f0\"}.fa-stethoscope:before{content:\"\\f0f1\"}.fa-suitcase:before{content:\"\\f0f2\"}.fa-bell-o:before{content:\"\\f0a2\"}.fa-coffee:before{content:\"\\f0f4\"}.fa-cutlery:before{content:\"\\f0f5\"}.fa-file-text-o:before{content:\"\\f0f6\"}.fa-building-o:before{content:\"\\f0f7\"}.fa-hospital-o:before{content:\"\\f0f8\"}.fa-ambulance:before{content:\"\\f0f9\"}.fa-medkit:before{content:\"\\f0fa\"}.fa-fighter-jet:before{content:\"\\f0fb\"}.fa-beer:before{content:\"\\f0fc\"}.fa-h-square:before{content:\"\\f0fd\"}.fa-plus-square:before{content:\"\\f0fe\"}.fa-angle-double-left:before{content:\"\\f100\"}.fa-angle-double-right:before{content:\"\\f101\"}.fa-angle-double-up:before{content:\"\\f102\"}.fa-angle-double-down:before{content:\"\\f103\"}.fa-angle-left:before{content:\"\\f104\"}.fa-angle-right:before{content:\"\\f105\"}.fa-angle-up:before{content:\"\\f106\"}.fa-angle-down:before{content:\"\\f107\"}.fa-desktop:before{content:\"\\f108\"}.fa-laptop:before{content:\"\\f109\"}.fa-tablet:before{content:\"\\f10a\"}.fa-mobile-phone:before,.fa-mobile:before{content:\"\\f10b\"}.fa-circle-o:before{content:\"\\f10c\"}.fa-quote-left:before{content:\"\\f10d\"}.fa-quote-right:before{content:\"\\f10e\"}.fa-spinner:before{content:\"\\f110\"}.fa-circle:before{content:\"\\f111\"}.fa-mail-reply:before,.fa-reply:before{content:\"\\f112\"}.fa-github-alt:before{content:\"\\f113\"}.fa-folder-o:before{content:\"\\f114\"}.fa-folder-open-o:before{content:\"\\f115\"}.fa-smile-o:before{content:\"\\f118\"}.fa-frown-o:before{content:\"\\f119\"}.fa-meh-o:before{content:\"\\f11a\"}.fa-gamepad:before{content:\"\\f11b\"}.fa-keyboard-o:before{content:\"\\f11c\"}.fa-flag-o:before{content:\"\\f11d\"}.fa-flag-checkered:before{content:\"\\f11e\"}.fa-terminal:before{content:\"\\f120\"}.fa-code:before{content:\"\\f121\"}.fa-mail-reply-all:before,.fa-reply-all:before{content:\"\\f122\"}.fa-star-half-empty:before,.fa-star-half-full:before,.fa-star-half-o:before{content:\"\\f123\"}.fa-location-arrow:before{content:\"\\f124\"}.fa-crop:before{content:\"\\f125\"}.fa-code-fork:before{content:\"\\f126\"}.fa-unlink:before,.fa-chain-broken:before{content:\"\\f127\"}.fa-question:before{content:\"\\f128\"}.fa-info:before{content:\"\\f129\"}.fa-exclamation:before{content:\"\\f12a\"}.fa-superscript:before{content:\"\\f12b\"}.fa-subscript:before{content:\"\\f12c\"}.fa-eraser:before{content:\"\\f12d\"}.fa-puzzle-piece:before{content:\"\\f12e\"}.fa-microphone:before{content:\"\\f130\"}.fa-microphone-slash:before{content:\"\\f131\"}.fa-shield:before{content:\"\\f132\"}.fa-calendar-o:before{content:\"\\f133\"}.fa-fire-extinguisher:before{content:\"\\f134\"}.fa-rocket:before{content:\"\\f135\"}.fa-maxcdn:before{content:\"\\f136\"}.fa-chevron-circle-left:before{content:\"\\f137\"}.fa-chevron-circle-right:before{content:\"\\f138\"}.fa-chevron-circle-up:before{content:\"\\f139\"}.fa-chevron-circle-down:before{content:\"\\f13a\"}.fa-html5:before{content:\"\\f13b\"}.fa-css3:before{content:\"\\f13c\"}.fa-anchor:before{content:\"\\f13d\"}.fa-unlock-alt:before{content:\"\\f13e\"}.fa-bullseye:before{content:\"\\f140\"}.fa-ellipsis-h:before{content:\"\\f141\"}.fa-ellipsis-v:before{content:\"\\f142\"}.fa-rss-square:before{content:\"\\f143\"}.fa-play-circle:before{content:\"\\f144\"}.fa-ticket:before{content:\"\\f145\"}.fa-minus-square:before{content:\"\\f146\"}.fa-minus-square-o:before{content:\"\\f147\"}.fa-level-up:before{content:\"\\f148\"}.fa-level-down:before{content:\"\\f149\"}.fa-check-square:before{content:\"\\f14a\"}.fa-pencil-square:before{content:\"\\f14b\"}.fa-external-link-square:before{content:\"\\f14c\"}.fa-share-square:before{content:\"\\f14d\"}.fa-compass:before{content:\"\\f14e\"}.fa-toggle-down:before,.fa-caret-square-o-down:before{content:\"\\f150\"}.fa-toggle-up:before,.fa-caret-square-o-up:before{content:\"\\f151\"}.fa-toggle-right:before,.fa-caret-square-o-right:before{content:\"\\f152\"}.fa-euro:before,.fa-eur:before{content:\"\\f153\"}.fa-gbp:before{content:\"\\f154\"}.fa-dollar:before,.fa-usd:before{content:\"\\f155\"}.fa-rupee:before,.fa-inr:before{content:\"\\f156\"}.fa-cny:before,.fa-rmb:before,.fa-yen:before,.fa-jpy:before{content:\"\\f157\"}.fa-ruble:before,.fa-rouble:before,.fa-rub:before{content:\"\\f158\"}.fa-won:before,.fa-krw:before{content:\"\\f159\"}.fa-bitcoin:before,.fa-btc:before{content:\"\\f15a\"}.fa-file:before{content:\"\\f15b\"}.fa-file-text:before{content:\"\\f15c\"}.fa-sort-alpha-asc:before{content:\"\\f15d\"}.fa-sort-alpha-desc:before{content:\"\\f15e\"}.fa-sort-amount-asc:before{content:\"\\f160\"}.fa-sort-amount-desc:before{content:\"\\f161\"}.fa-sort-numeric-asc:before{content:\"\\f162\"}.fa-sort-numeric-desc:before{content:\"\\f163\"}.fa-thumbs-up:before{content:\"\\f164\"}.fa-thumbs-down:before{content:\"\\f165\"}.fa-youtube-square:before{content:\"\\f166\"}.fa-youtube:before{content:\"\\f167\"}.fa-xing:before{content:\"\\f168\"}.fa-xing-square:before{content:\"\\f169\"}.fa-youtube-play:before{content:\"\\f16a\"}.fa-dropbox:before{content:\"\\f16b\"}.fa-stack-overflow:before{content:\"\\f16c\"}.fa-instagram:before{content:\"\\f16d\"}.fa-flickr:before{content:\"\\f16e\"}.fa-adn:before{content:\"\\f170\"}.fa-bitbucket:before{content:\"\\f171\"}.fa-bitbucket-square:before{content:\"\\f172\"}.fa-tumblr:before{content:\"\\f173\"}.fa-tumblr-square:before{content:\"\\f174\"}.fa-long-arrow-down:before{content:\"\\f175\"}.fa-long-arrow-up:before{content:\"\\f176\"}.fa-long-arrow-left:before{content:\"\\f177\"}.fa-long-arrow-right:before{content:\"\\f178\"}.fa-apple:before{content:\"\\f179\"}.fa-windows:before{content:\"\\f17a\"}.fa-android:before{content:\"\\f17b\"}.fa-linux:before{content:\"\\f17c\"}.fa-dribbble:before{content:\"\\f17d\"}.fa-skype:before{content:\"\\f17e\"}.fa-foursquare:before{content:\"\\f180\"}.fa-trello:before{content:\"\\f181\"}.fa-female:before{content:\"\\f182\"}.fa-male:before{content:\"\\f183\"}.fa-gittip:before,.fa-gratipay:before{content:\"\\f184\"}.fa-sun-o:before{content:\"\\f185\"}.fa-moon-o:before{content:\"\\f186\"}.fa-archive:before{content:\"\\f187\"}.fa-bug:before{content:\"\\f188\"}.fa-vk:before{content:\"\\f189\"}.fa-weibo:before{content:\"\\f18a\"}.fa-renren:before{content:\"\\f18b\"}.fa-pagelines:before{content:\"\\f18c\"}.fa-stack-exchange:before{content:\"\\f18d\"}.fa-arrow-circle-o-right:before{content:\"\\f18e\"}.fa-arrow-circle-o-left:before{content:\"\\f190\"}.fa-toggle-left:before,.fa-caret-square-o-left:before{content:\"\\f191\"}.fa-dot-circle-o:before{content:\"\\f192\"}.fa-wheelchair:before{content:\"\\f193\"}.fa-vimeo-square:before{content:\"\\f194\"}.fa-turkish-lira:before,.fa-try:before{content:\"\\f195\"}.fa-plus-square-o:before{content:\"\\f196\"}.fa-space-shuttle:before{content:\"\\f197\"}.fa-slack:before{content:\"\\f198\"}.fa-envelope-square:before{content:\"\\f199\"}.fa-wordpress:before{content:\"\\f19a\"}.fa-openid:before{content:\"\\f19b\"}.fa-institution:before,.fa-bank:before,.fa-university:before{content:\"\\f19c\"}.fa-mortar-board:before,.fa-graduation-cap:before{content:\"\\f19d\"}.fa-yahoo:before{content:\"\\f19e\"}.fa-google:before{content:\"\\f1a0\"}.fa-reddit:before{content:\"\\f1a1\"}.fa-reddit-square:before{content:\"\\f1a2\"}.fa-stumbleupon-circle:before{content:\"\\f1a3\"}.fa-stumbleupon:before{content:\"\\f1a4\"}.fa-delicious:before{content:\"\\f1a5\"}.fa-digg:before{content:\"\\f1a6\"}.fa-pied-piper:before{content:\"\\f1a7\"}.fa-pied-piper-alt:before{content:\"\\f1a8\"}.fa-drupal:before{content:\"\\f1a9\"}.fa-joomla:before{content:\"\\f1aa\"}.fa-language:before{content:\"\\f1ab\"}.fa-fax:before{content:\"\\f1ac\"}.fa-building:before{content:\"\\f1ad\"}.fa-child:before{content:\"\\f1ae\"}.fa-paw:before{content:\"\\f1b0\"}.fa-spoon:before{content:\"\\f1b1\"}.fa-cube:before{content:\"\\f1b2\"}.fa-cubes:before{content:\"\\f1b3\"}.fa-behance:before{content:\"\\f1b4\"}.fa-behance-square:before{content:\"\\f1b5\"}.fa-steam:before{content:\"\\f1b6\"}.fa-steam-square:before{content:\"\\f1b7\"}.fa-recycle:before{content:\"\\f1b8\"}.fa-automobile:before,.fa-car:before{content:\"\\f1b9\"}.fa-cab:before,.fa-taxi:before{content:\"\\f1ba\"}.fa-tree:before{content:\"\\f1bb\"}.fa-spotify:before{content:\"\\f1bc\"}.fa-deviantart:before{content:\"\\f1bd\"}.fa-soundcloud:before{content:\"\\f1be\"}.fa-database:before{content:\"\\f1c0\"}.fa-file-pdf-o:before{content:\"\\f1c1\"}.fa-file-word-o:before{content:\"\\f1c2\"}.fa-file-excel-o:before{content:\"\\f1c3\"}.fa-file-powerpoint-o:before{content:\"\\f1c4\"}.fa-file-photo-o:before,.fa-file-picture-o:before,.fa-file-image-o:before{content:\"\\f1c5\"}.fa-file-zip-o:before,.fa-file-archive-o:before{content:\"\\f1c6\"}.fa-file-sound-o:before,.fa-file-audio-o:before{content:\"\\f1c7\"}.fa-file-movie-o:before,.fa-file-video-o:before{content:\"\\f1c8\"}.fa-file-code-o:before{content:\"\\f1c9\"}.fa-vine:before{content:\"\\f1ca\"}.fa-codepen:before{content:\"\\f1cb\"}.fa-jsfiddle:before{content:\"\\f1cc\"}.fa-life-bouy:before,.fa-life-buoy:before,.fa-life-saver:before,.fa-support:before,.fa-life-ring:before{content:\"\\f1cd\"}.fa-circle-o-notch:before{content:\"\\f1ce\"}.fa-ra:before,.fa-rebel:before{content:\"\\f1d0\"}.fa-ge:before,.fa-empire:before{content:\"\\f1d1\"}.fa-git-square:before{content:\"\\f1d2\"}.fa-git:before{content:\"\\f1d3\"}.fa-y-combinator-square:before,.fa-yc-square:before,.fa-hacker-news:before{content:\"\\f1d4\"}.fa-tencent-weibo:before{content:\"\\f1d5\"}.fa-qq:before{content:\"\\f1d6\"}.fa-wechat:before,.fa-weixin:before{content:\"\\f1d7\"}.fa-send:before,.fa-paper-plane:before{content:\"\\f1d8\"}.fa-send-o:before,.fa-paper-plane-o:before{content:\"\\f1d9\"}.fa-history:before{content:\"\\f1da\"}.fa-circle-thin:before{content:\"\\f1db\"}.fa-header:before{content:\"\\f1dc\"}.fa-paragraph:before{content:\"\\f1dd\"}.fa-sliders:before{content:\"\\f1de\"}.fa-share-alt:before{content:\"\\f1e0\"}.fa-share-alt-square:before{content:\"\\f1e1\"}.fa-bomb:before{content:\"\\f1e2\"}.fa-soccer-ball-o:before,.fa-futbol-o:before{content:\"\\f1e3\"}.fa-tty:before{content:\"\\f1e4\"}.fa-binoculars:before{content:\"\\f1e5\"}.fa-plug:before{content:\"\\f1e6\"}.fa-slideshare:before{content:\"\\f1e7\"}.fa-twitch:before{content:\"\\f1e8\"}.fa-yelp:before{content:\"\\f1e9\"}.fa-newspaper-o:before{content:\"\\f1ea\"}.fa-wifi:before{content:\"\\f1eb\"}.fa-calculator:before{content:\"\\f1ec\"}.fa-paypal:before{content:\"\\f1ed\"}.fa-google-wallet:before{content:\"\\f1ee\"}.fa-cc-visa:before{content:\"\\f1f0\"}.fa-cc-mastercard:before{content:\"\\f1f1\"}.fa-cc-discover:before{content:\"\\f1f2\"}.fa-cc-amex:before{content:\"\\f1f3\"}.fa-cc-paypal:before{content:\"\\f1f4\"}.fa-cc-stripe:before{content:\"\\f1f5\"}.fa-bell-slash:before{content:\"\\f1f6\"}.fa-bell-slash-o:before{content:\"\\f1f7\"}.fa-trash:before{content:\"\\f1f8\"}.fa-copyright:before{content:\"\\f1f9\"}.fa-at:before{content:\"\\f1fa\"}.fa-eyedropper:before{content:\"\\f1fb\"}.fa-paint-brush:before{content:\"\\f1fc\"}.fa-birthday-cake:before{content:\"\\f1fd\"}.fa-area-chart:before{content:\"\\f1fe\"}.fa-pie-chart:before{content:\"\\f200\"}.fa-line-chart:before{content:\"\\f201\"}.fa-lastfm:before{content:\"\\f202\"}.fa-lastfm-square:before{content:\"\\f203\"}.fa-toggle-off:before{content:\"\\f204\"}.fa-toggle-on:before{content:\"\\f205\"}.fa-bicycle:before{content:\"\\f206\"}.fa-bus:before{content:\"\\f207\"}.fa-ioxhost:before{content:\"\\f208\"}.fa-angellist:before{content:\"\\f209\"}.fa-cc:before{content:\"\\f20a\"}.fa-shekel:before,.fa-sheqel:before,.fa-ils:before{content:\"\\f20b\"}.fa-meanpath:before{content:\"\\f20c\"}.fa-buysellads:before{content:\"\\f20d\"}.fa-connectdevelop:before{content:\"\\f20e\"}.fa-dashcube:before{content:\"\\f210\"}.fa-forumbee:before{content:\"\\f211\"}.fa-leanpub:before{content:\"\\f212\"}.fa-sellsy:before{content:\"\\f213\"}.fa-shirtsinbulk:before{content:\"\\f214\"}.fa-simplybuilt:before{content:\"\\f215\"}.fa-skyatlas:before{content:\"\\f216\"}.fa-cart-plus:before{content:\"\\f217\"}.fa-cart-arrow-down:before{content:\"\\f218\"}.fa-diamond:before{content:\"\\f219\"}.fa-ship:before{content:\"\\f21a\"}.fa-user-secret:before{content:\"\\f21b\"}.fa-motorcycle:before{content:\"\\f21c\"}.fa-street-view:before{content:\"\\f21d\"}.fa-heartbeat:before{content:\"\\f21e\"}.fa-venus:before{content:\"\\f221\"}.fa-mars:before{content:\"\\f222\"}.fa-mercury:before{content:\"\\f223\"}.fa-intersex:before,.fa-transgender:before{content:\"\\f224\"}.fa-transgender-alt:before{content:\"\\f225\"}.fa-venus-double:before{content:\"\\f226\"}.fa-mars-double:before{content:\"\\f227\"}.fa-venus-mars:before{content:\"\\f228\"}.fa-mars-stroke:before{content:\"\\f229\"}.fa-mars-stroke-v:before{content:\"\\f22a\"}.fa-mars-stroke-h:before{content:\"\\f22b\"}.fa-neuter:before{content:\"\\f22c\"}.fa-genderless:before{content:\"\\f22d\"}.fa-facebook-official:before{content:\"\\f230\"}.fa-pinterest-p:before{content:\"\\f231\"}.fa-whatsapp:before{content:\"\\f232\"}.fa-server:before{content:\"\\f233\"}.fa-user-plus:before{content:\"\\f234\"}.fa-user-times:before{content:\"\\f235\"}.fa-hotel:before,.fa-bed:before{content:\"\\f236\"}.fa-viacoin:before{content:\"\\f237\"}.fa-train:before{content:\"\\f238\"}.fa-subway:before{content:\"\\f239\"}.fa-medium:before{content:\"\\f23a\"}.fa-yc:before,.fa-y-combinator:before{content:\"\\f23b\"}.fa-optin-monster:before{content:\"\\f23c\"}.fa-opencart:before{content:\"\\f23d\"}.fa-expeditedssl:before{content:\"\\f23e\"}.fa-battery-4:before,.fa-battery-full:before{content:\"\\f240\"}.fa-battery-3:before,.fa-battery-three-quarters:before{content:\"\\f241\"}.fa-battery-2:before,.fa-battery-half:before{content:\"\\f242\"}.fa-battery-1:before,.fa-battery-quarter:before{content:\"\\f243\"}.fa-battery-0:before,.fa-battery-empty:before{content:\"\\f244\"}.fa-mouse-pointer:before{content:\"\\f245\"}.fa-i-cursor:before{content:\"\\f246\"}.fa-object-group:before{content:\"\\f247\"}.fa-object-ungroup:before{content:\"\\f248\"}.fa-sticky-note:before{content:\"\\f249\"}.fa-sticky-note-o:before{content:\"\\f24a\"}.fa-cc-jcb:before{content:\"\\f24b\"}.fa-cc-diners-club:before{content:\"\\f24c\"}.fa-clone:before{content:\"\\f24d\"}.fa-balance-scale:before{content:\"\\f24e\"}.fa-hourglass-o:before{content:\"\\f250\"}.fa-hourglass-1:before,.fa-hourglass-start:before{content:\"\\f251\"}.fa-hourglass-2:before,.fa-hourglass-half:before{content:\"\\f252\"}.fa-hourglass-3:before,.fa-hourglass-end:before{content:\"\\f253\"}.fa-hourglass:before{content:\"\\f254\"}.fa-hand-grab-o:before,.fa-hand-rock-o:before{content:\"\\f255\"}.fa-hand-stop-o:before,.fa-hand-paper-o:before{content:\"\\f256\"}.fa-hand-scissors-o:before{content:\"\\f257\"}.fa-hand-lizard-o:before{content:\"\\f258\"}.fa-hand-spock-o:before{content:\"\\f259\"}.fa-hand-pointer-o:before{content:\"\\f25a\"}.fa-hand-peace-o:before{content:\"\\f25b\"}.fa-trademark:before{content:\"\\f25c\"}.fa-registered:before{content:\"\\f25d\"}.fa-creative-commons:before{content:\"\\f25e\"}.fa-gg:before{content:\"\\f260\"}.fa-gg-circle:before{content:\"\\f261\"}.fa-tripadvisor:before{content:\"\\f262\"}.fa-odnoklassniki:before{content:\"\\f263\"}.fa-odnoklassniki-square:before{content:\"\\f264\"}.fa-get-pocket:before{content:\"\\f265\"}.fa-wikipedia-w:before{content:\"\\f266\"}.fa-safari:before{content:\"\\f267\"}.fa-chrome:before{content:\"\\f268\"}.fa-firefox:before{content:\"\\f269\"}.fa-opera:before{content:\"\\f26a\"}.fa-internet-explorer:before{content:\"\\f26b\"}.fa-tv:before,.fa-television:before{content:\"\\f26c\"}.fa-contao:before{content:\"\\f26d\"}.fa-500px:before{content:\"\\f26e\"}.fa-amazon:before{content:\"\\f270\"}.fa-calendar-plus-o:before{content:\"\\f271\"}.fa-calendar-minus-o:before{content:\"\\f272\"}.fa-calendar-times-o:before{content:\"\\f273\"}.fa-calendar-check-o:before{content:\"\\f274\"}.fa-industry:before{content:\"\\f275\"}.fa-map-pin:before{content:\"\\f276\"}.fa-map-signs:before{content:\"\\f277\"}.fa-map-o:before{content:\"\\f278\"}.fa-map:before{content:\"\\f279\"}.fa-commenting:before{content:\"\\f27a\"}.fa-commenting-o:before{content:\"\\f27b\"}.fa-houzz:before{content:\"\\f27c\"}.fa-vimeo:before{content:\"\\f27d\"}.fa-black-tie:before{content:\"\\f27e\"}.fa-fonticons:before{content:\"\\f280\"}.fa-reddit-alien:before{content:\"\\f281\"}.fa-edge:before{content:\"\\f282\"}.fa-credit-card-alt:before{content:\"\\f283\"}.fa-codiepie:before{content:\"\\f284\"}.fa-modx:before{content:\"\\f285\"}.fa-fort-awesome:before{content:\"\\f286\"}.fa-usb:before{content:\"\\f287\"}.fa-product-hunt:before{content:\"\\f288\"}.fa-mixcloud:before{content:\"\\f289\"}.fa-scribd:before{content:\"\\f28a\"}.fa-pause-circle:before{content:\"\\f28b\"}.fa-pause-circle-o:before{content:\"\\f28c\"}.fa-stop-circle:before{content:\"\\f28d\"}.fa-stop-circle-o:before{content:\"\\f28e\"}.fa-shopping-bag:before{content:\"\\f290\"}.fa-shopping-basket:before{content:\"\\f291\"}.fa-hashtag:before{content:\"\\f292\"}.fa-bluetooth:before{content:\"\\f293\"}.fa-bluetooth-b:before{content:\"\\f294\"}.fa-percent:before{content:\"\\f295\"}\n    5  \n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\store\\common\\InspectionCompanies.js:\n    1: Ext.define('CBH.store.common.InspectionCompanies', {\n    2      extend: 'Ext.data.Store',\n    3:     alias: 'store.inspectioncompanies',\n    4      autoLoad: false,\n    5      pageSize: 11,\n    6  \n    7      requires: [\n    8:     'CBH.model.common.InspectionCompanies'\n    9      ],\n   10  \n   ..\n   13          cfg = cfg || {};\n   14          me.callParent([Ext.apply({\n   15:             model: 'CBH.model.common.InspectionCompanies',\n   16              proxy: {\n   17                  type: 'rest',\n   18:                 url: CBH.GlobalSettings.webApiPath + '/api/InspectionCompanies',\n   19                  headers: {\n   20                      'Authorization-Token': Ext.util.Cookies.get('CBH.UserAuth')\n   ..\n   25                      totalProperty: 'total',\n   26                      successProperty: 'success',\n   27:                     idProperty: 'InspectorKey'\n   28                  },\n   29                  writer: {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\store\\jobs\\JobPurchaseOrderInstructions.js:\n    1: Ext.define('CBH.store.jobs.JobPurchaseOrderInstructions', {\n    2      extend: 'Ext.data.Store',\n    3:     alias: 'store.JobPurchaseOrderInstructions',\n    4      autoLoad: false,\n    5  \n    6      requires: [\n    7:     'CBH.model.jobs.JobPurchaseOrderInstructions'\n    8      ],\n    9  \n   ..\n   12          cfg = cfg || {};\n   13          me.callParent([Ext.apply({\n   14:             model: 'CBH.model.jobs.JobPurchaseOrderInstructions',\n   15              proxy: {\n   16                  type: 'rest',\n   17:                 url: CBH.GlobalSettings.webApiPath + '/api/JobPurchaseOrderInstructions',\n   18                  headers: {\n   19                      'Authorization-Token': Ext.util.Cookies.get('CBH.UserAuth')\n   ..\n   25                      successProperty: 'success',\n   26                      messageProperty: 'message',\n   27:                     idProperty: 'POInstructionsKey'\n   28                  },\n   29                  writer: {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\store\\jobs\\tlkpJobPurchaseOrderInstructions.js:\n    1: Ext.define('CBH.store.jobs.tlkpJobPurchaseOrderInstructions', {\n    2      extend: 'Ext.data.Store',\n    3:     alias: 'store.tlkpJobPurchaseOrderInstructions',\n    4      autoLoad: false,\n    5      pageSize: 11,\n    6  \n    7      requires: [\n    8:     'CBH.model.jobs.tlkpJobPurchaseOrderInstructions',\n    9      ],\n   10  \n   ..\n   13          cfg = cfg || {};\n   14          me.callParent([Ext.apply({\n   15:             model: 'CBH.model.jobs.tlkpJobPurchaseOrderInstructions',\n   16              remoteSort: true,\n   17              proxy: {\n   18                  type: 'rest',\n   19:                 url: CBH.GlobalSettings.webApiPath + '/api/tlkpJobPurchaseOrderInstructions',\n   20                  headers: {\n   21                      'Authorization-Token': Ext.util.Cookies.get('CBH.UserAuth')\n   ..\n   27                      successProperty: 'success',\n   28                      messageProperty: 'message',\n   29:                     idProperty: 'InstructionKey'\n   30                  },\n   31                  writer: {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\common\\FormReportCriteria.js:\n  917                  }\n  918  \n  919:                 if (!me.down(\"field[name=JobStatus]\").hidden && [\"rptFileSummary\", \"rptFileSummaryByContacts\", \"rptCustomerWebLogins\"].indexOf(me.reportName) === -1) {\n  920                      if (jobStatusExpression === \"=\") {\n  921                          strWhere += \"StatusKey = {0} AND \".format(jobStatus);\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\common\\PaymentTerms.js:\n  137                      xtype: 'numericfield',\n  138                      columnWidth: 1,\n  139:                     name: 'TermPercentAgainstShipDocs',\n  140:                     fieldLabel: '% Against Ship Docs',\n  141                      fieldStyle: 'text-align: right;',\n  142                      minValue: 0,\n  ...\n  255                              var parentkey = me.down('#FormToolbar').getCurrentRecord().data.TermKey;\n  256  \n  257:                             // Create a model instance\n  258                              var r = Ext.create('CBH.model.common.PaymentTermsDescriptions', {\n  259                                  PTTermKey: parentkey\n  ...\n  261  \n  262                              var count = grid.getStore().count();\n  263:                             grid.store.insert(count, r);\n  264                              rowEditing.startEdit(count, 1);\n  265                          },\n  ...\n  287                      }],\n  288                      selType: 'rowmodel',\n  289:                     plugins: [rowEditing],\n  290                      listeners: {\n  291                          selectionchange: function(view, records) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\common\\ScheduleB.js:\n   93                      //vtype:'arancel',\n   94                      //maskRe: /^\\d{4}?[\\.]?\\d{2}[\\.]?\\d{4}$/,\n   95:                     plugins: [new Ext.ux.InputTextMask('9999.99.9999')]\n   96                  }, {\n   97                      margin: '0 0 0 5',\n   ..\n  271                              var parentkey = me.down('#FormToolbar').getCurrentRecord().data.SchBNum;\n  272  \n  273:                             // Create a model instance\n  274                              var r = Ext.create('CBH.model.common.ScheduleBLanguage', {\n  275                                  SBLanguageSchBNum: me.SchBNum\n  ...\n  277  \n  278                              var count = grid.getStore().count();\n  279:                             grid.store.insert(count, r);\n  280                              rowEditing.startEdit(count, 1);\n  281                          },\n  ...\n  303                      }],\n  304                      selType: 'rowmodel',\n  305:                     plugins: [rowEditing],\n  306                      listeners: {\n  307                          selectionchange: function(view, records) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\InvoiceMaintenance.js:\n  769                                                      });\n  770  \n  771:                                                     grid.store.insert(count, r);\n  772                                                      rowEditingChargesST.startEdit(count, 1);\n  773                                                  },\n  ...\n  810                                              }],\n  811                                              selType: 'rowmodel',\n  812:                                             plugins: [rowEditingChargesST],\n  813                                              listeners: {\n  814                                                  selectionchange: function(view, records, eOpts) {\n  ...\n  958                                      }],\n  959                                      selType: 'rowmodel',\n  960:                                     /*plugins: [rowEditingCharges],*/\n  961                                      listeners: {\n  962                                          selectionchange: function(view, records, eOpts) {\n  ...\n 1134                                  }),\n 1135                                  selType: 'rowmodel',\n 1136:                                 plugins: [rowEditingItems],\n 1137                                  listeners: {\n 1138                                      selectionchange: function(view, records) {\n ....\n 1845      },\n 1846  \n 1847:     // plugins\n 1848      loadPluginItems: function() {\n 1849          var me = this;\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobFindJob.js:\n   91                              xtype: 'gridcolumn',\n   92                              width: 100,\n   93:                             dataIndex: 'InspectionNum',\n   94:                             text: 'Insp. Num'\n   95                          }, {\n   96                              xtype: 'gridcolumn',\n   ..\n  189          var me = this;\n  190          Ext.EventManager.on(view.getEl(), 'keyup', function(evt, t, o) {\n  191:                 if (evt.keyCode === Ext.EventObject.INSERT) {\n  192                      evt.stopEvent();\n  193                      var btn = me.down('#addline');\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobFindJobInvoice.js:\n  143          var me = this;\n  144          Ext.EventManager.on(view.getEl(), 'keyup', function(evt, t, o) {\n  145:                 if (evt.keyCode === Ext.EventObject.INSERT) {\n  146                      evt.stopEvent();\n  147                      var btn = me.down('#addline');\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobFindPO.js:\n  130          var me = this;\n  131          Ext.EventManager.on(view.getEl(), 'keyup', function(evt, t, o) {\n  132:                 if (evt.keyCode === Ext.EventObject.INSERT) {\n  133                      evt.stopEvent();\n  134                      var btn = me.down('#addline');\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobInformation.js:\n   93              }\n   94          });\n   95:         var storeInspectionCompanies = new CBH.store.common.InspectionCompanies().load({\n   96              params: {\n   97                  page: 0,\n   ..\n  471                              rowEditing.editor.down('#JobEmployeeEmployeeKey').getStore().reload();\n  472  \n  473:                             // Create a model instance\n  474                              var r = new CBH.model.jobs.JobEmployeeRoles({\n  475                                  JobEmployeeJobKey: me.down(\"field[name=JobKey]\").getValue()\n  ...\n  479  \n  480                              var count = grid.getStore().count();\n  481:                             grid.store.insert(count, r);\n  482                              rowEditing.startEdit(count, 1);\n  483                          },\n  ...\n  520                      }],\n  521                      selType: 'rowmodel',\n  522:                     plugins: [rowEditing],\n  523                      listeners: {\n  524                          'selectionchange': function(view, records) {\n  ...\n  606                      columnWidth: 0.5,\n  607                      xtype: 'combo',\n  608:                     name: 'JobInspectorKey',\n  609:                     fieldLabel: 'Inspection',\n  610                      labelWidth: 50,\n  611:                     valueField: 'InspectorKey',\n  612:                     displayField: 'InspectorName',\n  613:                     store: (storeInspectionCompanies) ? storeInspectionCompanies : null,\n  614                      queryMode: 'local',\n  615                      minChars: 2,\n  ...\n  630                      labelAlign: 'top',\n  631                      labelWidth: 50,\n  632:                     name: 'JobInspectionNum',\n  633                      //allowBlank: false\n  634                      listeners: {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobOverview.js:\n  537                          margin: '0 0 0 5',\n  538                          xtype: 'textfield',\n  539:                         name: 'JobInspectionCertificatedNum',\n  540                          fieldLabel: 'Certificated',\n  541                          columnWidth: 0.4\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobOverviewPopupUpdateCurrency.js:\n  132                      ],\n  133                      selType: 'rowmodel',\n  134:                     plugins: [rowEditingCurrency],\n  135                  }\n  136              ],\n  ...\n  215      },\n  216  \n  217:     // plugins\n  218      loadPluginCurrency: function() {\n  219          var me = this;\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobPOEditInstruction.js:\n    1: Ext.define('CBH.view.jobs.JobPOEditInstruction', {\n    2      extend: 'Ext.form.Panel',\n    3:     alias: 'widget.jobpoeditinstruction',\n    4      modal: true,\n    5      width: 400,\n    .\n    7          type: 'absolute'\n    8      },\n    9:     title: 'Instructions / Notes',\n   10      bodyPadding: 10,\n   11      closable: true,\n   ..\n   18  \n   19          Ext.Msg.wait('Wait', 'Loading...');\n   20:         var storeInstructions = new CBH.store.jobs.tlkpJobPurchaseOrderInstructions().load({\n   21              params: {\n   22                  lang:'en'\n   ..\n   43                      xtype: 'numericfield',\n   44                      columnWidth: 1,\n   45:                     name: 'POInstructionsStep',\n   46                      fieldLabel: 'Sort',\n   47                      fieldStyle: 'text-align: right;',\n   ..\n   58                      xtype: 'combo',\n   59                      columnWidth: 1,\n   60:                     fieldLabel: 'Instructions',\n   61:                     name: 'POInstructionsInstructionKey',\n   62                      displayField: 'x_ITextMemo',\n   63:                     valueField: 'InstructionKey',\n   64                      queryMode: 'local',\n   65                      typeAhead: true,\n   66                      minChars: 2,\n   67                      forceSelection: true,\n   68:                     store: storeInstructions,\n   69:                     emptyText: 'Choose Instructions',\n   70                      listeners: {\n   71                          beforequery: function(record) {\n   ..\n   80                      labelAlign: 'top',\n   81                      labelWidth: 50,\n   82:                     name: 'POInstructionsMemo',\n   83                      allowBlank: true,\n   84                      listeners: {\n   ..\n   94                      valueField: 'id',\n   95                      fieldLabel: 'Notes Font Color',\n   96:                     name: 'POInstructionsMemoFontColor',\n   97                      queryMode: 'local',\n   98                      typeAhead: true,\n   ..\n  153  \n  154      onShowWindow: function() {\n  155:         this.down('field[name=POInstructionsInstructionKey]').focus(true, 200);\n  156      },\n  157  \n  ...\n  175                  if (success) {\n  176                      var parentForm = me.callerForm;\n  177:                     parentForm.down(\"#gridInstructions\").store.reload();\n  178                      me.destroy();\n  179                      Ext.Msg.hide();\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\jobs\\JobPurchaseOrderMaintenance.js:\n   12  \n   13      requires: [\n   14:         'CBH.view.jobs.JobPOEditInstruction',\n   15          'CBH.view.jobs.JobPOEditCharges',\n   16          'CBH.view.jobs.JobPOEditItems',\n   ..\n   85              }\n   86          });\n   87:         var storeInspectionCompanies = new CBH.store.common.InspectionCompanies().load({\n   88              params: {\n   89                  page: 0,\n   ..\n  110          var storePOItems = null;\n  111          var storePOCharges = null;\n  112:         var storeInstructions = null;\n  113  \n  114          Ext.applyIf(me, {\n  ...\n  856                                  }),\n  857                                  selType: 'cellmodel',\n  858:                                 plugins: [rowEditingItems],\n  859                                  listeners: {\n  860                                      selectionchange: function(view, records) {\n  ...\n 1066                              }]\n 1067                          },\n 1068:                         // Panel Instructions\n 1069                          {\n 1070                              xtype: 'panel',\n 1071                              title: 'Notes',\n 1072:                             itemId: 'panelInstructions',\n 1073                              items: [{\n 1074                                  xtype: 'gridpanel',\n 1075:                                 itemId: 'gridInstructions',\n 1076                                  minHeight: 350,\n 1077:                                 store: storeInstructions,\n 1078                                  maxHeight: 400,\n 1079                                  columns: [{\n 1080                                      xtype: 'gridcolumn',\n 1081                                      text: 'Sort',\n 1082:                                     dataIndex: 'POInstructionsStep',\n 1083                                      format: '00,000'\n 1084                                  }, {\n 1085                                      xtype: 'gridcolumn',\n 1086:                                     text: 'Instructions',\n 1087                                      dataIndex: 'x_ITextMemo',\n 1088                                      flex: 1\n ....\n 1090                                      xtype: 'gridcolumn',\n 1091                                      text: 'Notes & Comments',\n 1092:                                     dataIndex: 'POInstructionsMemo',\n 1093                                      flex: 1\n 1094                                  }, {\n ....\n 1106                                      items: [{\n 1107                                          handler: function(view, rowIndex, colIndex, item, e, record, row) {\n 1108:                                             var form = Ext.widget('jobpoeditinstruction');\n 1109                                              form.modal = true;\n 1110                                              form.loadRecord(record);\n ....\n 1123                                  }, {\n 1124                                      text: 'Add',\n 1125:                                     itemId: 'addinstruction',\n 1126                                      handler: function() {\n 1127                                          currentRecord = this.up('form').down(\"#FormToolbar\").getCurrentRecord();\n 1128                                          var pokey = currentRecord.data.POKey;\n 1129:                                         var form = Ext.widget('jobpoeditinstruction');\n 1130:                                         record = Ext.create('CBH.model.jobs.JobPurchaseOrderInstructions', {\n 1131:                                             POInstructionsPOKey: pokey\n 1132                                          });\n 1133                                          form.loadRecord(record);\n ....\n 1138                                      disabled: true\n 1139                                  }, {\n 1140:                                     itemId: 'deleteinstruction',\n 1141                                      text: 'Delete',\n 1142                                      hidden: accLevel === 3,\n ....\n 1171                                  }],\n 1172                                  bbar: new Ext.PagingToolbar({\n 1173:                                     itemId: 'instructionspagingtoolbar',\n 1174:                                     store: storeInstructions,\n 1175                                      displayInfo: true,\n 1176                                      displayMsg: 'Displaying records {0} - {1} of {2}',\n ....\n 1180                                  listeners: {\n 1181                                      selectionchange: function(view, records) {\n 1182:                                         this.down('#deleteinstruction').setDisabled(!records.length);\n 1183                                      },\n 1184                                      celldblclick: function(view, td, cellIndex, record, tr, rowIndex, e, eOpts) {\n 1185:                                         var form = Ext.widget('jobpoeditinstruction');\n 1186                                          form.modal = true;\n 1187                                          form.loadRecord(record);\n ....\n 1437              me.down('#panelItems').tab.hide();\n 1438              me.down('#panelCharges').tab.hide();\n 1439:             me.down('#panelInstructions').tab.hide();\n 1440              me.down('#exportPeachtreebutton').setDisabled(true);\n 1441              me.down('#gotHistorybutton').setDisabled(true);\n ....\n 1457          me.down('#panelItems').tab.show();\n 1458          me.down('#panelCharges').tab.show();\n 1459:         me.down('#panelInstructions').tab.show();\n 1460  \n 1461:         me.down('#addinstruction').setDisabled(false);\n 1462          me.down('#additem').setDisabled(false);\n 1463          me.down('#addcharge').setDisabled(false);\n ....\n 1465          me.down('#panelItems').setDisabled(false);\n 1466          me.down('#panelCharges').setDisabled(false);\n 1467:         me.down('#panelInstructions').setDisabled(false);\n 1468  \n 1469          me.storeToLoad = 7;\n ....\n 1556          });\n 1557  \n 1558:         var storeInstructions = new CBH.store.jobs.JobPurchaseOrderInstructions().load({\n 1559              params: {\n 1560:                 POInstructionsPOKey: curRec.POKey\n 1561              },\n 1562              callback: function() {\n 1563:                 var grid = me.down(\"#gridInstructions\");\n 1564:                 grid.reconfigure(storeInstructions);\n 1565:                 me.down(\"#instructionspagingtoolbar\").bindStore(storeInstructions);\n 1566  \n 1567:                 me.storesLoaded.push(\"JobPurchaseOrderInstructions\");\n 1568                  me.checkLoaded();\n 1569              }\n ....\n 1613          me.down('#panelItems').setDisabled(true);\n 1614          me.down('#panelCharges').setDisabled(true);\n 1615:         me.down('#panelInstructions').setDisabled(true);\n 1616  \n 1617          me.down('field[name=x_VendorAddress]').setValue('');\n ....\n 1858      },\n 1859  \n 1860:     // plugins\n 1861      loadPluginItems: function() {\n 1862          var me = this;\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\manager\\JobRolesList.js:\n  149                      xtype: 'button',\n  150                      text: 'Add',\n  151:                     tooltip: 'Add (Ins)',\n  152                      handler: function() {\n  153                          rowEditing.cancelEdit();\n  ...\n  157                              sort =  parseFloat(grid.store.max(\"JobRoleSort\")) + 100;\n  158  \n  159:                         // Create a model instance\n  160                          var r = Ext.create('CBH.model.jobs.JobRoles', {\n  161                              JobRoleSort: sort\n  162                          });\n  163  \n  164:                         grid.store.insert(count, r);\n  165                          rowEditing.startEdit(r, 1);\n  166                          rowEditing.editor.down('field[name=JobRoleDescription]').focus(true, 200);\n  ...\n  195                  }],\n  196                  selType: 'rowmodel',\n  197:                 plugins: [rowEditing],\n  198                  /*bbar: new Ext.PagingToolbar({\n  199                      itemId: 'pagingtoolbar',\n  ...\n  246          /*var me = this;\n  247          Ext.EventManager.on(view.getEl(), 'keyup', function(evt, t, o) {\n  248:                 if (evt.keyCode === Ext.EventObject.INSERT) {\n  249                      evt.stopEvent();\n  250                      var btn = me.down('#addline');\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\manager\\ManagerMenu.js:\n  500                  },\n  501                  items: [Ext.widget(\"FormReportCriteria\", {\n  502:                     reportName: 'rptCustomerWebLogins'\n  503                  })]\n  504              }]\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FileFindFile.js:\n  179          var me = this;\n  180          Ext.EventManager.on(view.getEl(), 'keyup', function(evt, t, o) {\n  181:                 if (evt.keyCode === Ext.EventObject.INSERT) {\n  182                      evt.stopEvent();\n  183                      var btn = me.down('#addline');\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FileFindQuote.js:\n  103                          xtype: 'gridcolumn',\n  104                          width: 150,\n  105:                         dataIndex: 'QHdrInspectionNum',\n  106:                         text: 'Inspection Num'\n  107                      }, {\n  108                          xtype: 'gridcolumn',\n  ...\n  221          var me = this;\n  222          Ext.EventManager.on(view.getEl(), 'keyup', function(evt, t, o) {\n  223:                 if (evt.keyCode === Ext.EventObject.INSERT) {\n  224                      evt.stopEvent();\n  225                      var btn = me.down('#addline');\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FileForm.js:\n  504                              rowEditing.cancelEdit();\n  505  \n  506:                             // Create a model instance\n  507                              var r = Ext.create('CBH.model.sales.FileEmployeeRoles', {\n  508                                  FileEmployeeFileKey: form.down('field[name=FileKey]').getValue()\n  ...\n  513  \n  514                              var count = grid.getStore().count();\n  515:                             grid.store.insert(count, r);\n  516                              rowEditing.startEdit(count, 1);\n  517                          },\n  ...\n  554                      }],\n  555                      selType: 'rowmodel',\n  556:                     plugins: [rowEditing],\n  557                      listeners: {\n  558                          'selectionchange': function(view, records) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FileQuoteConfirmation.js:\n   33              storeCustContact = null;\n   34  \n   35:         var storeInspectionCompanies = new CBH.store.common.InspectionCompanies().load({\n   36              params: {\n   37                  page: 0,\n   ..\n  171                                  columnWidth: 0.5,\n  172                                  xtype: 'combo',\n  173:                                 name: 'QHdrInspectorKey',\n  174:                                 fieldLabel: 'Inspection',\n  175                                  labelWidth: 50,\n  176:                                 valueField: 'InspectorKey',\n  177:                                 displayField: 'InspectorName',\n  178:                                 store: storeInspectionCompanies,\n  179                                  queryMode: 'local',\n  180                                  minChars: 2,\n  ...\n  191                                  margin: '0 0 0 5',\n  192                                  xtype: 'textfield',\n  193:                                 name: 'QHdrInspectionNum',\n  194                                  fieldLabel: 'Num',\n  195                                  columnWidth: 0.5\n  ...\n  387                              name:'txt49910Cost',\n  388                              xtype:'textfield',\n  389:                             fieldLabel: 'Insurance',\n  390                              value:'$0.00',\n  391                              fieldStyle: 'text-align: right;'\n  ...\n  447                              name:'txt49910Price',\n  448                              xtype:'textfield',\n  449:                             //fieldLabel: 'Insurance',\n  450                              value:'$0.00',\n  451                              fieldStyle: 'text-align: right;'\n  ...\n  832              record = me.currentRecord;\n  833  \n  834:         //'*** Verify inspection information\n  835:         if (String.isNullOrEmpty(record.data.QHdrInspectionNum)) {\n  836:             //'*** Check to see whether inspection is required\n  837              me.isQuoteOverFOBLimit(record.data.QHdrKey);\n  838          } else {\n  839:             //'*** Check to see if inspector is selected\n  840:             if (record.data.QHdrInspectorKey === null) {\n  841                  Ext.Msg.show({\n  842                      title:'Conversion Aborted!',\n  843:                     msg: 'You must select an inspection company if there is an inspection number',\n  844                      buttons: Ext.Msg.OK,\n  845                      fn: function() {\n  846:                         me.down(\"field[name=QHdrInspectorKey]\").focus(true, 200);\n  847                      },\n  848                      icon: Ext.MessageBox.WARNING\n  ...\n  929                  if(data.success) {\n  930                      Ext.Msg.show({\n  931:                         title: 'Continue without Inspection?',\n  932:                         msg: 'The FOB Value for this quote requires an inspection for the country the product is being shipped to.  (Or no country has been specified)  Are you sure you want to continue with the conversion?',\n  933                          buttons: Ext.Msg.YESNO,\n  934                          icon: Ext.Msg.QUESTION,\n  ...\n  937                                  me.verifyDUINumber();\n  938                              } else {\n  939:                                 me.down(\"field[name=QHdrInspectorKey]\").focus(true, 200);\n  940                              }\n  941                          }\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FileQuoteConfirmationSubVendorInfo.js:\n  172      }, {\n  173          xtype: 'textareafield',\n  174:         fieldLabel: 'Instructions',\n  175          columnWidth: 1,\n  176          name: 'FVQuotePOQuoteNotes',\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FileQuoteMaintenance.js:\n  329                                      columnWidth: 1,\n  330                                      items: [\n  331:                                         // inside left panel\n  332                                          {\n  333                                              xtype: 'fieldcontainer',\n  ...\n  526                                              ]\n  527                                          },\n  528:                                         // inside right panel\n  529                                          {\n  530                                              xtype: 'fieldcontainer',\n  ...\n  803                                                      });\n  804  \n  805:                                                     grid.store.insert(count, r);\n  806                                                      rowEditingChargesST.startEdit(count, 1);\n  807                                                  },\n  ...\n  844                                              }],\n  845                                              selType: 'rowmodel',\n  846:                                             plugins: [rowEditingChargesST],\n  847                                              listeners: {\n  848                                                  selectionchange: function(view, records, eOpts) {\n  ...\n 1224                                              });\n 1225  \n 1226:                                             grid.store.insert(count, r);\n 1227                                              rowEditingCharges.startEdit(count, 1);\n 1228                                          },\n ....\n 1265                                      }],\n 1266                                      selType: 'rowmodel',\n 1267:                                     plugins: [rowEditingCharges],\n 1268                                      listeners: {\n 1269                                          selectionchange: function(view, records, eOpts) {\n ....\n 1415                                  }],\n 1416                                  selType: 'rowmodel',\n 1417:                                 /*plugins: [rowEditingItems],*/\n 1418                                  listeners: {\n 1419                                      selectionchange: function(view, records, eOpts) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\FilesGridx.js:\n   63                  }]\n   64              }],\n   65:             plugins: [{\n   66                  ptype: 'rowexpander',\n   67                  rowBodyTpl: [\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\sales\\SalesMenu.js:\n   84                          }\n   85                      }],\n   86:                     plugins: [{\n   87                          ptype: 'rowexpander',\n   88                          rowBodyTpl: [\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\vendors\\Items.js:\n  469                                          var itemkey = me.down('#FormToolbar').getCurrentRecord().data.ItemKey;\n  470  \n  471:                                         // Create a model instance\n  472                                          var r = Ext.create('CBH.model.vendors.ItemDescriptions', {\n  473                                              DescriptionItemKey: itemkey\n  ...\n  475  \n  476                                          var count = grid.getStore().count();\n  477:                                         grid.store.insert(count, r);\n  478                                          rowEditing.startEdit(count, 1);\n  479                                      },\n  ...\n  513                                  }],\n  514                                  selType: 'rowmodel',\n  515:                                 plugins: [rowEditing],\n  516                                  listeners: {\n  517                                      selectionchange: function(view, records) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\app\\view\\vendors\\VendorOriginAddress.js:\n   78                      columnWidth: 0.4,\n   79                      fieldLabel: 'State',\n   80:                     name: 'OriginState',\n   81                      displayField: 'StateName',\n   82                      queryMode: 'local',\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\overrides\\data\\Store.js:\n    2  	override: 'Ext.data.Store',\n    3      // overriden to provide striping of the indexes as sorting occurs.\n    4:     // this cannot be done inside of sort because datachanged has already\n    5      // fired and will trigger a repaint of the bound view.\n    6      doSort: function(sorterFn) {\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\overrides\\form\\ComboBox.js:\n  138              picker = me.getPicker();\n  139  \n  140:         // Handle BoundList navigation from the input field. Insert a tab listener specially to enable selectOnTab.\n  141          if (keyNav) {\n  142              keyNav.enable();\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\scripts\\behavior.js:\n  128   *\n  129   *     var s = Ext.String.leftPad('123', 5, '0');\n  130:  *     // s now contains the string: '00123'\n  131   *\n  132   * @param {String} string The original string.\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\scripts\\moment-with-locales.min.js:\n    7  // This is done to register the method called with moment()\n    8  // without creating circular dependencies.\n    9: function b(a){je=a}function c(a){return a instanceof Array||\"[object Array]\"===Object.prototype.toString.call(a)}function d(a){return\"[object Object]\"===Object.prototype.toString.call(a)}function e(a){var b;for(b in a)\n   10  // even if its not own property I'd still call it non-empty\n   11: return!1;return!0}function f(a){return a instanceof Date||\"[object Date]\"===Object.prototype.toString.call(a)}function g(a,b){var c,d=[];for(c=0;c<a.length;++c)d.push(b(a[c],c));return d}function h(a,b){return Object.prototype.hasOwnProperty.call(a,b)}function i(a,b){for(var c in b)h(b,c)&&(a[c]=b[c]);return h(b,\"toString\")&&(a.toString=b.toString),h(b,\"valueOf\")&&(a.valueOf=b.valueOf),a}function j(a,b,c,d){return qb(a,b,c,d,!0).utc()}function k(){\n   12  // We need to deep clone this object.\n   13  return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null}}function l(a){return null==a._pf&&(a._pf=k()),a._pf}function m(a){if(null==a._isValid){var b=l(a),c=ke.call(b.parsedDateParts,function(a){return null!=a});a._isValid=!isNaN(a._d.getTime())&&b.overflow<0&&!b.empty&&!b.invalidMonth&&!b.invalidWeekday&&!b.nullInput&&!b.invalidFormat&&!b.userInvalidated&&(!b.meridiem||b.meridiem&&c),a._strict&&(a._isValid=a._isValid&&0===b.charsLeftOver&&0===b.unusedTokens.length&&void 0===b.bigHour)}return a._isValid}function n(a){var b=j(NaN);return null!=a?i(l(b),a):l(b).userInvalidated=!0,b}function o(a){return void 0===a}function p(a,b){var c,d,e;if(o(b._isAMomentObject)||(a._isAMomentObject=b._isAMomentObject),o(b._i)||(a._i=b._i),o(b._f)||(a._f=b._f),o(b._l)||(a._l=b._l),o(b._strict)||(a._strict=b._strict),o(b._tzm)||(a._tzm=b._tzm),o(b._isUTC)||(a._isUTC=b._isUTC),o(b._offset)||(a._offset=b._offset),o(b._pf)||(a._pf=l(b)),o(b._locale)||(a._locale=b._locale),le.length>0)for(c in le)d=le[c],e=b[d],o(e)||(a[d]=e);return a}\n   14  // Moment prototype object\n   15: function q(b){p(this,b),this._d=new Date(null!=b._d?b._d.getTime():NaN),me===!1&&(me=!0,a.updateOffset(this),me=!1)}function r(a){return a instanceof q||null!=a&&null!=a._isAMomentObject}function s(a){return 0>a?Math.ceil(a)||0:Math.floor(a)}function t(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=s(b)),c}\n   16  // compare two arrays, return the number of differences\n   17: function u(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&t(a[d])!==t(b[d]))&&g++;return g+f}function v(b){a.suppressDeprecationWarnings===!1&&\"undefined\"!=typeof console&&console.warn&&console.warn(\"Deprecation warning: \"+b)}function w(b,c){var d=!0;return i(function(){return null!=a.deprecationHandler&&a.deprecationHandler(null,b),d&&(v(b+\"\\nArguments: \"+Array.prototype.slice.call(arguments).join(\", \")+\"\\n\"+(new Error).stack),d=!1),c.apply(this,arguments)},c)}function x(b,c){null!=a.deprecationHandler&&a.deprecationHandler(b,c),ne[b]||(v(c),ne[b]=!0)}function y(a){return a instanceof Function||\"[object Function]\"===Object.prototype.toString.call(a)}function z(a){var b,c;for(c in a)b=a[c],y(b)?this[c]=b:this[\"_\"+c]=b;this._config=a,\n   18  // Lenient ordinal parsing accepts just a number in addition to\n   19  // number + (possibly) stuff coming from _ordinalParseLenient.\n   ..\n   27  // ordinal:  'Mo'\n   28  // callback: function () { this.month() + 1 }\n   29: function T(a,b,c,d){var e=d;\"string\"==typeof d&&(e=function(){return this[d]()}),a&&(Be[a]=e),b&&(Be[b[0]]=function(){return S(e.apply(this,arguments),b[1],b[2])}),c&&(Be[c]=function(){return this.localeData().ordinal(e.apply(this,arguments),a)})}function U(a){return a.match(/\\[[\\s\\S]/)?a.replace(/^\\[|\\]$/g,\"\"):a.replace(/\\\\/g,\"\")}function V(a){var b,c,d=a.match(ye);for(b=0,c=d.length;c>b;b++)Be[d[b]]?d[b]=Be[d[b]]:d[b]=U(d[b]);return function(b){var e,f=\"\";for(e=0;c>e;e++)f+=d[e]instanceof Function?d[e].call(b,a):d[e];return f}}\n   30  // format date using native date object\n   31  function W(a,b){return a.isValid()?(b=X(b,a.localeData()),Ae[b]=Ae[b]||V(b),Ae[b](a)):a.localeData().invalidDate()}function X(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(ze.lastIndex=0;d>=0&&ze.test(a);)a=a.replace(ze,c),ze.lastIndex=0,d-=1;return a}function Y(a,b,c){Te[a]=y(b)?b:function(a,d){return a&&c?c:b}}function Z(a,b){return h(Te,a)?Te[a](b._strict,b._locale):new RegExp($(a))}\n   ..\n   52  function oa(a){return pa(a)?366:365}function pa(a){return a%4===0&&a%100!==0||a%400===0}function qa(){return pa(this.year())}function ra(a,b,c,d,e,f,g){\n   53  //can't just apply() to create a date:\n   54: //http://stackoverflow.com/questions/181348/instantiating-a-javascript-object-by-calling-prototype-constructor-apply\n   55  var h=new Date(a,b,c,d,e,f,g);\n   56  //the date constructor remaps years 0-99 to 1900-1999\n   ..\n   77  function Ja(a){if(!this.isValid())return null!=a?this:NaN;var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=Ca(a,this.localeData()),this.add(a-b,\"d\")):b}function Ka(a){if(!this.isValid())return null!=a?this:NaN;var b=(this.day()+7-this.localeData()._week.dow)%7;return null==a?b:this.add(a-b,\"d\")}function La(a){if(!this.isValid())return null!=a?this:NaN;\n   78  // behaves the same as moment#day except\n   79: // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n   80  // as a setter, sunday should belong to the previous week.\n   81: if(null!=a){var b=Da(a,this.localeData());return this.day(this.day()%7?b:b-7)}return this.day()||7}function Ma(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysStrictRegex:this._weekdaysRegex):(h(this,\"_weekdaysRegex\")||(this._weekdaysRegex=nf),this._weekdaysStrictRegex&&a?this._weekdaysStrictRegex:this._weekdaysRegex)}function Na(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(h(this,\"_weekdaysShortRegex\")||(this._weekdaysShortRegex=of),this._weekdaysShortStrictRegex&&a?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function Oa(a){return this._weekdaysParseExact?(h(this,\"_weekdaysRegex\")||Pa.call(this),a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(h(this,\"_weekdaysMinRegex\")||(this._weekdaysMinRegex=pf),this._weekdaysMinStrictRegex&&a?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function Pa(){function a(a,b){return b.length-a.length}var b,c,d,e,f,g=[],h=[],i=[],k=[];for(b=0;7>b;b++)c=j([2e3,1]).day(b),d=this.weekdaysMin(c,\"\"),e=this.weekdaysShort(c,\"\"),f=this.weekdays(c,\"\"),g.push(d),h.push(e),i.push(f),k.push(d),k.push(e),k.push(f);for(\n   82  // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n   83  // will match the longer piece.\n   84: g.sort(a),h.sort(a),i.sort(a),k.sort(a),b=0;7>b;b++)h[b]=_(h[b]),i[b]=_(i[b]),k[b]=_(k[b]);this._weekdaysRegex=new RegExp(\"^(\"+k.join(\"|\")+\")\",\"i\"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp(\"^(\"+i.join(\"|\")+\")\",\"i\"),this._weekdaysShortStrictRegex=new RegExp(\"^(\"+h.join(\"|\")+\")\",\"i\"),this._weekdaysMinStrictRegex=new RegExp(\"^(\"+g.join(\"|\")+\")\",\"i\")}\n   85  // FORMATTING\n   86  function Qa(){return this.hours()%12||12}function Ra(){return this.hours()||24}function Sa(a,b){T(a,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),b)})}\n   ..\n  179  // first element is an array of moment objects.\n  180  function sb(a,b){var d,e;if(1===b.length&&c(b[0])&&(b=b[0]),!b.length)return rb();for(d=b[0],e=1;e<b.length;++e)b[e].isValid()&&!b[e][a](d)||(d=b[e]);return d}\n  181: // TODO: Use [].sort instead?\n  182  function tb(){var a=[].slice.call(arguments,0);return sb(\"isBefore\",a)}function ub(){var a=[].slice.call(arguments,0);return sb(\"isAfter\",a)}function vb(a){var b=K(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;\n  183  // representation for dateAddRemove\n  184  this._milliseconds=+k+1e3*j+// 1000\n  185  6e4*i+// 1000 * 60\n  186: 1e3*h*60*60,//using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n  187  // Because of dateAddRemove treats 24 hours as different from a\n  188  // day when working around DST, we need to store them separately\n  ...\n  191  // which months you are are talking about, so we have to store\n  192  // it separately.\n  193: this._months=+e+3*d+12*c,this._data={},this._locale=ab(),this._bubble()}function wb(a){return a instanceof vb}\n  194  // FORMATTING\n  195  function xb(a,b){T(a,0,0,function(){var a=this.utcOffset(),c=\"+\";return 0>a&&(a=-a,c=\"-\"),c+S(~~(a/60),2)+b+S(~~a%60,2)})}function yb(a,b){var c=(b||\"\").match(a)||[],d=c[c.length-1]||[],e=(d+\"\").match(Ef)||[\"-\",0,0],f=+(60*e[1])+t(e[2]);return\"+\"===e[0]?f:-f}\n  ...\n  213  // there is no such time in the given timezone.\n  214  function Bb(b,c){var d,e=this._offset||0;return this.isValid()?null!=b?(\"string\"==typeof b?b=yb(Qe,b):Math.abs(b)<16&&(b=60*b),!this._isUTC&&c&&(d=Ab(this)),this._offset=b,this._isUTC=!0,null!=d&&this.add(d,\"m\"),e!==b&&(!c||this._changeInProgress?Sb(this,Mb(b-e,\"m\"),1,!1):this._changeInProgress||(this._changeInProgress=!0,a.updateOffset(this,!0),this._changeInProgress=null)),this):this._isUTC?e:Ab(this):null!=b?this:NaN}function Cb(a,b){return null!=a?(\"string\"!=typeof a&&(a=-a),this.utcOffset(a,b),this):-this.utcOffset()}function Db(a){return this.utcOffset(0,a)}function Eb(a){return this._isUTC&&(this.utcOffset(0,a),this._isUTC=!1,a&&this.subtract(Ab(this),\"m\")),this}function Fb(){return this._tzm?this.utcOffset(this._tzm):\"string\"==typeof this._i&&this.utcOffset(yb(Pe,this._i)),this}function Gb(a){return this.isValid()?(a=a?rb(a).utcOffset():0,(this.utcOffset()-a)%60===0):!1}function Hb(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ib(){if(!o(this._isDSTShifted))return this._isDSTShifted;var a={};if(p(a,this),a=ob(a),a._a){var b=a._isUTC?j(a._a):rb(a._a);this._isDSTShifted=this.isValid()&&u(a._a,b.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function Jb(){return this.isValid()?!this._isUTC:!1}function Kb(){return this.isValid()?this._isUTC:!1}function Lb(){return this.isValid()?this._isUTC&&0===this._offset:!1}function Mb(a,b){var c,d,e,f=a,\n  215: // matching against regexp is expensive, do it on demand\n  216  g=null;// checks for null or undefined\n  217  return wb(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:\"number\"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Ff.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:0,d:t(g[Xe])*c,h:t(g[Ye])*c,m:t(g[Ze])*c,s:t(g[$e])*c,ms:t(g[_e])*c}):(g=Gf.exec(a))?(c=\"-\"===g[1]?-1:1,f={y:Nb(g[2],c),M:Nb(g[3],c),w:Nb(g[4],c),d:Nb(g[5],c),h:Nb(g[6],c),m:Nb(g[7],c),s:Nb(g[8],c)}):null==f?f={}:\"object\"==typeof f&&(\"from\"in f||\"to\"in f)&&(e=Pb(rb(f.from),rb(f.to)),f={},f.ms=e.milliseconds,f.M=e.months),d=new vb(f),wb(a)&&h(a,\"_locale\")&&(d._locale=a._locale),d}function Nb(a,b){\n  ...\n  243  return 0>b-f?(c=a.clone().add(e-1,\"months\"),d=(b-f)/(f-c)):(c=a.clone().add(e+1,\"months\"),d=(b-f)/(c-f)),-(e+d)||0}function cc(){return this.clone().locale(\"en\").format(\"ddd MMM DD YYYY HH:mm:ss [GMT]ZZ\")}function dc(){var a=this.clone().utc();return 0<a.year()&&a.year()<=9999?y(Date.prototype.toISOString)?this.toDate().toISOString():W(a,\"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]\"):W(a,\"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]\")}function ec(b){b||(b=this.isUtc()?a.defaultFormatUtc:a.defaultFormat);var c=W(this,b);return this.localeData().postformat(c)}function fc(a,b){return this.isValid()&&(r(a)&&a.isValid()||rb(a).isValid())?Mb({to:this,from:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function gc(a){return this.from(rb(),a)}function hc(a,b){return this.isValid()&&(r(a)&&a.isValid()||rb(a).isValid())?Mb({from:this,to:a}).locale(this.locale()).humanize(!b):this.localeData().invalidDate()}function ic(a){return this.to(rb(),a)}\n  244  // If passed a locale key, it will set the locale for this\n  245: // instance.  Otherwise, it will return the locale configuration\n  246: // variables for this instance.\n  247  function jc(a){var b;return void 0===a?this._locale._abbr:(b=ab(a),null!=b&&(this._locale=b),this)}function kc(){return this._locale}function lc(a){\n  248  // the following switch intentionally omits break keywords\n  ...\n  313  // and also not between days and months (28-31 days per month)\n  314  var a,b,c,d=ig(this._milliseconds)/1e3,e=ig(this._days),f=ig(this._months);a=s(d/60),b=s(a/60),d%=60,a%=60,c=s(f/12),f%=12;\n  315: // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n  316  var g=c,h=f,i=e,j=b,k=a,l=d,m=this.asSeconds();return m?(0>m?\"-\":\"\")+\"P\"+(g?g+\"Y\":\"\")+(h?h+\"M\":\"\")+(i?i+\"D\":\"\")+(j||k||l?\"T\":\"\")+(j?j+\"H\":\"\")+(k?k+\"M\":\"\")+(l?l+\"S\":\"\"):\"P0D\"}function md(a,b){var c=a.split(\"_\");return b%10===1&&b%100!==11?c[0]:b%10>=2&&4>=b%10&&(10>b%100||b%100>=20)?c[1]:c[2]}function nd(a,b,c){var d={mm:b?\"хвіліна_хвіліны_хвілін\":\"хвіліну_хвіліны_хвілін\",hh:b?\"гадзіна_гадзіны_гадзін\":\"гадзіну_гадзіны_гадзін\",dd:\"дзень_дні_дзён\",MM:\"месяц_месяцы_месяцаў\",yy:\"год_гады_гадоў\"};return\"m\"===c?b?\"хвіліна\":\"хвіліну\":\"h\"===c?b?\"гадзіна\":\"гадзіну\":a+\" \"+md(d[c],+a)}function od(a,b,c){var d={mm:\"munutenn\",MM:\"miz\",dd:\"devezh\"};return a+\" \"+rd(d[c],a)}function pd(a){switch(qd(a)){case 1:case 3:case 4:case 5:case 9:return a+\" bloaz\";default:return a+\" vloaz\"}}function qd(a){return a>9?qd(a%10):a}function rd(a,b){return 2===b?sd(a):a}function sd(a){var b={m:\"v\",b:\"v\",d:\"z\"};return void 0===b[a.charAt(0)]?a:b[a.charAt(0)]+a.substring(1)}function td(a,b,c){var d=a+\" \";switch(c){case\"m\":return b?\"jedna minuta\":\"jedne minute\";case\"mm\":return d+=1===a?\"minuta\":2===a||3===a||4===a?\"minute\":\"minuta\";case\"h\":return b?\"jedan sat\":\"jednog sata\";case\"hh\":return d+=1===a?\"sat\":2===a||3===a||4===a?\"sata\":\"sati\";case\"dd\":return d+=1===a?\"dan\":\"dana\";case\"MM\":return d+=1===a?\"mjesec\":2===a||3===a||4===a?\"mjeseca\":\"mjeseci\";case\"yy\":return d+=1===a?\"godina\":2===a||3===a||4===a?\"godine\":\"godina\"}}function ud(a){return a>1&&5>a&&1!==~~(a/10)}function vd(a,b,c,d){var e=a+\" \";switch(c){case\"s\":// a few seconds / in a few seconds / a few seconds ago\n  317  return b||d?\"pár sekund\":\"pár sekundami\";case\"m\":// a minute / in a minute / a minute ago\n  ...\n  367  // 9 years / in 9 years / 9 years ago\n  368  return b||d?e+(Zd(a)?\"roky\":\"rokov\"):e+\"rokmi\"}}function _d(a,b,c,d){var e=a+\" \";switch(c){case\"s\":return b||d?\"nekaj sekund\":\"nekaj sekundami\";case\"m\":return b?\"ena minuta\":\"eno minuto\";case\"mm\":return e+=1===a?b?\"minuta\":\"minuto\":2===a?b||d?\"minuti\":\"minutama\":5>a?b||d?\"minute\":\"minutami\":b||d?\"minut\":\"minutami\";case\"h\":return b?\"ena ura\":\"eno uro\";case\"hh\":return e+=1===a?b?\"ura\":\"uro\":2===a?b||d?\"uri\":\"urama\":5>a?b||d?\"ure\":\"urami\":b||d?\"ur\":\"urami\";case\"d\":return b||d?\"en dan\":\"enim dnem\";case\"dd\":return e+=1===a?b||d?\"dan\":\"dnem\":2===a?b||d?\"dni\":\"dnevoma\":b||d?\"dni\":\"dnevi\";case\"M\":return b||d?\"en mesec\":\"enim mesecem\";case\"MM\":return e+=1===a?b||d?\"mesec\":\"mesecem\":2===a?b||d?\"meseca\":\"mesecema\":5>a?b||d?\"mesece\":\"meseci\":b||d?\"mesecev\":\"meseci\";case\"y\":return b||d?\"eno leto\":\"enim letom\";case\"yy\":return e+=1===a?b||d?\"leto\":\"letom\":2===a?b||d?\"leti\":\"letoma\":5>a?b||d?\"leta\":\"leti\":b||d?\"let\":\"leti\"}}function ae(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"leS\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"waQ\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"nem\":b+\" pIq\"}function be(a){var b=a;return b=-1!==a.indexOf(\"jaj\")?b.slice(0,-3)+\"Hu’\":-1!==a.indexOf(\"jar\")?b.slice(0,-3)+\"wen\":-1!==a.indexOf(\"DIS\")?b.slice(0,-3)+\"ben\":b+\" ret\"}function ce(a,b,c,d){var e=de(a);switch(c){case\"mm\":return e+\" tup\";case\"hh\":return e+\" rep\";case\"dd\":return e+\" jaj\";case\"MM\":return e+\" jar\";case\"yy\":return e+\" DIS\"}}function de(a){var b=Math.floor(a%1e3/100),c=Math.floor(a%100/10),d=a%10,e=\"\";return b>0&&(e+=qh[b]+\"vatlh\"),c>0&&(e+=(\"\"!==e?\" \":\"\")+qh[c]+\"maH\"),d>0&&(e+=(\"\"!==e?\" \":\"\")+qh[d]),\"\"===e?\"pagh\":e}function ee(a,b,c,d){var e={s:[\"viensas secunds\",\"'iensas secunds\"],m:[\"'n míut\",\"'iens míut\"],mm:[a+\" míuts\",\"\"+a+\" míuts\"],h:[\"'n þora\",\"'iensa þora\"],hh:[a+\" þoras\",\"\"+a+\" þoras\"],d:[\"'n ziua\",\"'iensa ziua\"],dd:[a+\" ziuas\",\"\"+a+\" ziuas\"],M:[\"'n mes\",\"'iens mes\"],MM:[a+\" mesen\",\"\"+a+\" mesen\"],y:[\"'n ar\",\"'iens ar\"],yy:[a+\" ars\",\"\"+a+\" ars\"]};return d?e[c][0]:b?e[c][0]:e[c][1]}function fe(a,b){var c=a.split(\"_\");return b%10===1&&b%100!==11?c[0]:b%10>=2&&4>=b%10&&(10>b%100||b%100>=20)?c[1]:c[2]}function ge(a,b,c){var d={mm:b?\"хвилина_хвилини_хвилин\":\"хвилину_хвилини_хвилин\",hh:b?\"година_години_годин\":\"годину_години_годин\",dd:\"день_дні_днів\",MM:\"місяць_місяці_місяців\",yy:\"рік_роки_років\"};return\"m\"===c?b?\"хвилина\":\"хвилину\":\"h\"===c?b?\"година\":\"годину\":a+\" \"+fe(d[c],+a)}function he(a,b){var c={nominative:\"неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота\".split(\"_\"),accusative:\"неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу\".split(\"_\"),genitive:\"неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи\".split(\"_\")},d=/(\\[[ВвУу]\\]) ?dddd/.test(b)?\"accusative\":/\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(b)?\"genitive\":\"nominative\";return c[d][a.day()]}function ie(a){return function(){return a+\"о\"+(11===this.hours()?\"б\":\"\")+\"] LT\"}}var je,ke;ke=Array.prototype.some?Array.prototype.some:function(a){for(var b=Object(this),c=b.length>>>0,d=0;c>d;d++)if(d in b&&a.call(this,b[d],d,b))return!0;return!1};\n  369: // Plugins that add properties should also add the key here (null value),\n  370  // so we can properly clone ourselves.\n  371  var le=a.momentProperties=[],me=!1,ne={};a.suppressDeprecationWarnings=!1,a.deprecationHandler=null;var oe;oe=Object.keys?Object.keys:function(a){var b,c=[];for(b in a)h(a,b)&&c.push(b);return c};var pe,qe={sameDay:\"[Today at] LT\",nextDay:\"[Tomorrow at] LT\",nextWeek:\"dddd [at] LT\",lastDay:\"[Yesterday at] LT\",lastWeek:\"[Last] dddd [at] LT\",sameElse:\"L\"},re={LTS:\"h:mm:ss A\",LT:\"h:mm A\",L:\"MM/DD/YYYY\",LL:\"MMMM D, YYYY\",LLL:\"MMMM D, YYYY h:mm A\",LLLL:\"dddd, MMMM D, YYYY h:mm A\"},se=\"Invalid date\",te=\"%d\",ue=/\\d{1,2}/,ve={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"},we={},xe={},ye=/(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,ze=/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Ae={},Be={},Ce=/\\d/,De=/\\d\\d/,Ee=/\\d{3}/,Fe=/\\d{4}/,Ge=/[+-]?\\d{6}/,He=/\\d\\d?/,Ie=/\\d\\d\\d\\d?/,Je=/\\d\\d\\d\\d\\d\\d?/,Ke=/\\d{1,3}/,Le=/\\d{1,4}/,Me=/[+-]?\\d{1,6}/,Ne=/\\d+/,Oe=/[+-]?\\d+/,Pe=/Z|[+-]\\d\\d:?\\d\\d/gi,Qe=/Z|[+-]\\d\\d(?::?\\d\\d)?/gi,Re=/[+-]?\\d+(\\.\\d{1,3})?/,Se=/[0-9]*['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+|[\\u0600-\\u06FF\\/]+(\\s*?[\\u0600-\\u06FF]+){1,2}/i,Te={},Ue={},Ve=0,We=1,Xe=2,Ye=3,Ze=4,$e=5,_e=6,af=7,bf=8;pe=Array.prototype.indexOf?Array.prototype.indexOf:function(a){\n  ...\n  414  [\"GGGG[W]WWE\",/\\d{4}W\\d{3}/],[\"GGGG[W]WW\",/\\d{4}W\\d{2}/,!1],[\"YYYYDDD\",/\\d{7}/]],zf=[[\"HH:mm:ss.SSSS\",/\\d\\d:\\d\\d:\\d\\d\\.\\d+/],[\"HH:mm:ss,SSSS\",/\\d\\d:\\d\\d:\\d\\d,\\d+/],[\"HH:mm:ss\",/\\d\\d:\\d\\d:\\d\\d/],[\"HH:mm\",/\\d\\d:\\d\\d/],[\"HHmmss.SSSS\",/\\d\\d\\d\\d\\d\\d\\.\\d+/],[\"HHmmss,SSSS\",/\\d\\d\\d\\d\\d\\d,\\d+/],[\"HHmmss\",/\\d\\d\\d\\d\\d\\d/],[\"HHmm\",/\\d\\d\\d\\d/],[\"HH\",/\\d\\d/]],Af=/^\\/?Date\\((\\-?\\d+)/i;a.createFromInputFallback=w(\"moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.\",function(a){a._d=new Date(a._i+(a._useUTC?\" UTC\":\"\"))}),\n  415  // constant that refers to the ISO standard\n  416: a.ISO_8601=function(){};var Bf=w(\"moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()&&a.isValid()?this>a?this:a:n()}),Cf=w(\"moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/\",function(){var a=rb.apply(null,arguments);return this.isValid()&&a.isValid()?a>this?this:a:n()}),Df=function(){return Date.now?Date.now():+new Date};xb(\"Z\",\":\"),xb(\"ZZ\",\"\"),\n  417  // PARSING\n  418  Y(\"Z\",Qe),Y(\"ZZ\",Qe),aa([\"Z\",\"ZZ\"],function(a,b,c){c._useUTC=!0,c._tzm=yb(Qe,a)});\n  ...\n  427  a.updateOffset=function(){};\n  428  // ASP.NET json date format regex\n  429: var Ff=/^(\\-)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d*)?$/,Gf=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;Mb.fn=vb.prototype;var Hf=Rb(1,\"add\"),If=Rb(-1,\"subtract\");a.defaultFormat=\"YYYY-MM-DDTHH:mm:ssZ\",a.defaultFormatUtc=\"YYYY-MM-DDTHH:mm:ss[Z]\";var Jf=w(\"moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.\",function(a){return void 0===a?this.localeData():this.locale(a)});\n  430  // FORMATTING\n  431  T(0,[\"gg\",2],0,function(){return this.weekYear()%100}),T(0,[\"GG\",2],0,function(){return this.isoWeekYear()%100}),xc(\"gggg\",\"weekYear\"),xc(\"ggggg\",\"weekYear\"),xc(\"GGGG\",\"isoWeekYear\"),xc(\"GGGGG\",\"isoWeekYear\"),\n  ...\n  519  Pf.zoneAbbr=Hc,Pf.zoneName=Ic,\n  520  // Deprecations\n  521: Pf.dates=w(\"dates accessor is deprecated. Use date instead.\",Kf),Pf.months=w(\"months accessor is deprecated. Use month instead\",ja),Pf.years=w(\"years accessor is deprecated. Use year instead\",hf),Pf.zone=w(\"moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/\",Cb),Pf.isDSTShifted=w(\"isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information\",Ib);var Qf=Pf,Rf=B.prototype;Rf.calendar=C,Rf.longDateFormat=D,Rf.invalidDate=E,Rf.ordinal=F,Rf.preparse=Lc,Rf.postformat=Lc,Rf.relativeTime=G,Rf.pastFuture=H,Rf.set=z,\n  522  // Month\n  523  Rf.months=ea,Rf.monthsShort=fa,Rf.monthsParse=ha,Rf.monthsRegex=ma,Rf.monthsShortRegex=la,\n  ...\n  529  Rf.isPM=Ua,Rf.meridiem=Va,Za(\"en\",{ordinalParse:/\\d{1,2}(th|st|nd|rd)/,ordinal:function(a){var b=a%10,c=1===t(a%100/10)?\"th\":1===b?\"st\":2===b?\"nd\":3===b?\"rd\":\"th\";return a+c}}),\n  530  // Side effect imports\n  531: a.lang=w(\"moment.lang is deprecated. Use moment.locale instead.\",Za),a.langData=w(\"moment.langData is deprecated. Use moment.localeData instead.\",ab);var Sf=Math.abs,Tf=cd(\"ms\"),Uf=cd(\"s\"),Vf=cd(\"m\"),Wf=cd(\"h\"),Xf=cd(\"d\"),Yf=cd(\"w\"),Zf=cd(\"M\"),$f=cd(\"y\"),_f=ed(\"milliseconds\"),ag=ed(\"seconds\"),bg=ed(\"minutes\"),cg=ed(\"hours\"),dg=ed(\"days\"),eg=ed(\"months\"),fg=ed(\"years\"),gg=Math.round,hg={s:45,// seconds to minute\n  532  m:45,// minutes to hour\n  533  h:22,// hours to day\n  ...\n  535  M:11},ig=Math.abs,jg=vb.prototype;jg.abs=Uc,jg.add=Wc,jg.subtract=Xc,jg.as=ad,jg.asMilliseconds=Tf,jg.asSeconds=Uf,jg.asMinutes=Vf,jg.asHours=Wf,jg.asDays=Xf,jg.asWeeks=Yf,jg.asMonths=Zf,jg.asYears=$f,jg.valueOf=bd,jg._bubble=Zc,jg.get=dd,jg.milliseconds=_f,jg.seconds=ag,jg.minutes=bg,jg.hours=cg,jg.days=dg,jg.weeks=fd,jg.months=eg,jg.years=fg,jg.humanize=kd,jg.toISOString=ld,jg.toString=ld,jg.toJSON=ld,jg.locale=jc,jg.localeData=kc,\n  536  // Deprecations\n  537: jg.toIsoString=w(\"toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)\",ld),jg.lang=Jf,\n  538  // Side effect imports\n  539  // FORMATTING\n  540  T(\"X\",0,0,\"unix\"),T(\"x\",0,0,\"valueOf\"),\n  541  // PARSING\n  542: Y(\"x\",Oe),Y(\"X\",Re),aa(\"X\",function(a,b,c){c._d=new Date(1e3*parseFloat(a,10))}),aa(\"x\",function(a,b,c){c._d=new Date(t(a))}),a.version=\"2.14.1\",b(rb),a.fn=Qf,a.min=tb,a.max=ub,a.now=Df,a.utc=j,a.unix=Jc,a.months=Pc,a.isDate=f,a.locale=Za,a.invalid=n,a.duration=Mb,a.isMoment=r,a.weekdays=Rc,a.parseZone=Kc,a.localeData=ab,a.isDuration=wb,a.monthsShort=Qc,a.weekdaysMin=Tc,a.defineLocale=$a,a.updateLocale=_a,a.locales=bb,a.weekdaysShort=Sc,a.normalizeUnits=J,a.relativeTimeRounding=id,a.relativeTimeThreshold=jd,a.calendarFormat=Tb,a.prototype=Qf;var kg=a,lg=(kg.defineLocale(\"af\",{months:\"Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember\".split(\"_\"),monthsShort:\"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des\".split(\"_\"),weekdays:\"Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag\".split(\"_\"),weekdaysShort:\"Son_Maa_Din_Woe_Don_Vry_Sat\".split(\"_\"),weekdaysMin:\"So_Ma_Di_Wo_Do_Vr_Sa\".split(\"_\"),meridiemParse:/vm|nm/i,isPM:function(a){return/^nm$/i.test(a)},meridiem:function(a,b,c){return 12>a?c?\"vm\":\"VM\":c?\"nm\":\"NM\"},longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd, D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[Vandag om] LT\",nextDay:\"[Môre om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[Gister om] LT\",lastWeek:\"[Laas] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"oor %s\",past:\"%s gelede\",s:\"'n paar sekondes\",m:\"'n minuut\",mm:\"%d minute\",h:\"'n uur\",hh:\"%d ure\",d:\"'n dag\",dd:\"%d dae\",M:\"'n maand\",MM:\"%d maande\",y:\"'n jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a>=20?\"ste\":\"de\")},week:{dow:1,// Maandag is die eerste dag van die week.\n  543  doy:4}}),kg.defineLocale(\"ar-ma\",{months:\"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر\".split(\"_\"),weekdays:\"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},week:{dow:6,// Saturday is the first day of the week.\n  544  doy:12}}),{1:\"١\",2:\"٢\",3:\"٣\",4:\"٤\",5:\"٥\",6:\"٦\",7:\"٧\",8:\"٨\",9:\"٩\",0:\"٠\"}),mg={\"١\":\"1\",\"٢\":\"2\",\"٣\":\"3\",\"٤\":\"4\",\"٥\":\"5\",\"٦\":\"6\",\"٧\":\"7\",\"٨\":\"8\",\"٩\":\"9\",\"٠\":\"0\"},ng=(kg.defineLocale(\"ar-sa\",{months:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),monthsShort:\"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر\".split(\"_\"),weekdays:\"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),weekdaysShort:\"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),weekdaysMin:\"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},meridiemParse:/ص|م/,isPM:function(a){return\"م\"===a},meridiem:function(a,b,c){return 12>a?\"ص\":\"م\"},calendar:{sameDay:\"[اليوم على الساعة] LT\",nextDay:\"[غدا على الساعة] LT\",nextWeek:\"dddd [على الساعة] LT\",lastDay:\"[أمس على الساعة] LT\",lastWeek:\"dddd [على الساعة] LT\",sameElse:\"L\"},relativeTime:{future:\"في %s\",past:\"منذ %s\",s:\"ثوان\",m:\"دقيقة\",mm:\"%d دقائق\",h:\"ساعة\",hh:\"%d ساعات\",d:\"يوم\",dd:\"%d أيام\",M:\"شهر\",MM:\"%d أشهر\",y:\"سنة\",yy:\"%d سنوات\"},preparse:function(a){return a.replace(/[١٢٣٤٥٦٧٨٩٠]/g,function(a){return mg[a]}).replace(/،/g,\",\")},postformat:function(a){return a.replace(/\\d/g,function(a){return lg[a]}).replace(/,/g,\"،\")},week:{dow:6,// Saturday is the first day of the week.\n  ...\n  615  doy:4}}),kg.defineLocale(\"nb\",{months:\"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.\".split(\"_\"),monthsParseExact:!0,weekdays:\"søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag\".split(\"_\"),weekdaysShort:\"sø._ma._ti._on._to._fr._lø.\".split(\"_\"),weekdaysMin:\"sø_ma_ti_on_to_fr_lø\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] HH:mm\",LLLL:\"dddd D. MMMM YYYY [kl.] HH:mm\"},calendar:{sameDay:\"[i dag kl.] LT\",nextDay:\"[i morgen kl.] LT\",nextWeek:\"dddd [kl.] LT\",lastDay:\"[i går kl.] LT\",lastWeek:\"[forrige] dddd [kl.] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s siden\",s:\"noen sekunder\",m:\"ett minutt\",mm:\"%d minutter\",h:\"en time\",hh:\"%d timer\",d:\"en dag\",dd:\"%d dager\",M:\"en måned\",MM:\"%d måneder\",y:\"ett år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.\n  616  doy:4}}),{1:\"१\",2:\"२\",3:\"३\",4:\"४\",5:\"५\",6:\"६\",7:\"७\",8:\"८\",9:\"९\",0:\"०\"}),ch={\"१\":\"1\",\"२\":\"2\",\"३\":\"3\",\"४\":\"4\",\"५\":\"5\",\"६\":\"6\",\"७\":\"7\",\"८\":\"8\",\"९\":\"9\",\"०\":\"0\"},dh=(kg.defineLocale(\"ne\",{months:\"जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर\".split(\"_\"),monthsShort:\"जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.\".split(\"_\"),monthsParseExact:!0,weekdays:\"आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार\".split(\"_\"),weekdaysShort:\"आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.\".split(\"_\"),weekdaysMin:\"आ._सो._मं._बु._बि._शु._श.\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"Aको h:mm बजे\",LTS:\"Aको h:mm:ss बजे\",L:\"DD/MM/YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY, Aको h:mm बजे\",LLLL:\"dddd, D MMMM YYYY, Aको h:mm बजे\"},preparse:function(a){return a.replace(/[१२३४५६७८९०]/g,function(a){return ch[a]})},postformat:function(a){return a.replace(/\\d/g,function(a){return bh[a]})},meridiemParse:/राति|बिहान|दिउँसो|साँझ/,meridiemHour:function(a,b){return 12===a&&(a=0),\"राति\"===b?4>a?a:a+12:\"बिहान\"===b?a:\"दिउँसो\"===b?a>=10?a:a+12:\"साँझ\"===b?a+12:void 0},meridiem:function(a,b,c){return 3>a?\"राति\":12>a?\"बिहान\":16>a?\"दिउँसो\":20>a?\"साँझ\":\"राति\"},calendar:{sameDay:\"[आज] LT\",nextDay:\"[भोलि] LT\",nextWeek:\"[आउँदो] dddd[,] LT\",lastDay:\"[हिजो] LT\",lastWeek:\"[गएको] dddd[,] LT\",sameElse:\"L\"},relativeTime:{future:\"%sमा\",past:\"%s अगाडि\",s:\"केही क्षण\",m:\"एक मिनेट\",mm:\"%d मिनेट\",h:\"एक घण्टा\",hh:\"%d घण्टा\",d:\"एक दिन\",dd:\"%d दिन\",M:\"एक महिना\",MM:\"%d महिना\",y:\"एक बर्ष\",yy:\"%d बर्ष\"},week:{dow:0,// Sunday is the first day of the week.\n  617: doy:6}}),\"jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.\".split(\"_\")),eh=\"jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec\".split(\"_\"),fh=(kg.defineLocale(\"nl\",{months:\"januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december\".split(\"_\"),monthsShort:function(a,b){return/-MMM-/.test(b)?eh[a.month()]:dh[a.month()]},monthsParseExact:!0,weekdays:\"zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag\".split(\"_\"),weekdaysShort:\"zo._ma._di._wo._do._vr._za.\".split(\"_\"),weekdaysMin:\"Zo_Ma_Di_Wo_Do_Vr_Za\".split(\"_\"),weekdaysParseExact:!0,longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD-MM-YYYY\",LL:\"D MMMM YYYY\",LLL:\"D MMMM YYYY HH:mm\",LLLL:\"dddd D MMMM YYYY HH:mm\"},calendar:{sameDay:\"[vandaag om] LT\",nextDay:\"[morgen om] LT\",nextWeek:\"dddd [om] LT\",lastDay:\"[gisteren om] LT\",lastWeek:\"[afgelopen] dddd [om] LT\",sameElse:\"L\"},relativeTime:{future:\"over %s\",past:\"%s geleden\",s:\"een paar seconden\",m:\"één minuut\",mm:\"%d minuten\",h:\"één uur\",hh:\"%d uur\",d:\"één dag\",dd:\"%d dagen\",M:\"één maand\",MM:\"%d maanden\",y:\"één jaar\",yy:\"%d jaar\"},ordinalParse:/\\d{1,2}(ste|de)/,ordinal:function(a){return a+(1===a||8===a||a>=20?\"ste\":\"de\")},week:{dow:1,// Monday is the first day of the week.\n  618  doy:4}}),kg.defineLocale(\"nn\",{months:\"januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember\".split(\"_\"),monthsShort:\"jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des\".split(\"_\"),weekdays:\"sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag\".split(\"_\"),weekdaysShort:\"sun_mån_tys_ons_tor_fre_lau\".split(\"_\"),weekdaysMin:\"su_må_ty_on_to_fr_lø\".split(\"_\"),longDateFormat:{LT:\"HH:mm\",LTS:\"HH:mm:ss\",L:\"DD.MM.YYYY\",LL:\"D. MMMM YYYY\",LLL:\"D. MMMM YYYY [kl.] H:mm\",LLLL:\"dddd D. MMMM YYYY [kl.] HH:mm\"},calendar:{sameDay:\"[I dag klokka] LT\",nextDay:\"[I morgon klokka] LT\",nextWeek:\"dddd [klokka] LT\",lastDay:\"[I går klokka] LT\",lastWeek:\"[Føregåande] dddd [klokka] LT\",sameElse:\"L\"},relativeTime:{future:\"om %s\",past:\"%s sidan\",s:\"nokre sekund\",m:\"eit minutt\",mm:\"%d minutt\",h:\"ein time\",hh:\"%d timar\",d:\"ein dag\",dd:\"%d dagar\",M:\"ein månad\",MM:\"%d månader\",y:\"eit år\",yy:\"%d år\"},ordinalParse:/\\d{1,2}\\./,ordinal:\"%d.\",week:{dow:1,// Monday is the first day of the week.\n  619  doy:4}}),{1:\"੧\",2:\"੨\",3:\"੩\",4:\"੪\",5:\"੫\",6:\"੬\",7:\"੭\",8:\"੮\",9:\"੯\",0:\"੦\"}),gh={\"੧\":\"1\",\"੨\":\"2\",\"੩\":\"3\",\"੪\":\"4\",\"੫\":\"5\",\"੬\":\"6\",\"੭\":\"7\",\"੮\":\"8\",\"੯\":\"9\",\"੦\":\"0\"},hh=(kg.defineLocale(\"pa-in\",{\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\Router.js:\n   52      singleton: true,\n   53      alternateClassName: 'Ext.Router',\n   54:     mixins: {\n   55          observable: 'Ext.util.Observable'\n   56      },\n   ..\n   65          me.ready = false;\n   66          me.routes = [];\n   67:         me.mixins.observable.constructor.call(me);\n   68      },\n   69  \n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\RowExpander.js:\n  130          // headerCt). Otherwise, shared column configs get corrupted, e.g., if put in the\n  131          // prototype.\n  132:         grid.headerCt.insert(0, this.getHeaderConfig());\n  133          grid.on('render', this.bindView, this, {single: true});\n  134      },\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\DataView\\Animated.js:\n    8       * @property defaults\n    9       * @type Object\n   10:      * Default configuration options for all DataViewTransition instances\n   11       */\n   12      defaults: {\n   ..\n   16      \n   17      /**\n   18:      * Creates the plugin instance, applies defaults\n   19       * @constructor\n   20       * @param {Object} config Optional config object\n   ..\n   32           * @property dataview\n   33           * @type Ext.view.View\n   34:          * Reference to the DataView this instance is bound to\n   35           */\n   36          this.dataview = dataview;\n   ..\n  305      /**\n  306       * Returns all records in the given store that were not already present\n  307:      * @param {Ext.data.Store} store The updated store instance\n  308       * @return {Object} Object of records not already present in the dataview in format {id: record}\n  309       */\n  ...\n  322      /**\n  323       * Returns all records that are present in the DataView but not the new store\n  324:      * @param {Ext.data.Store} store The updated store instance\n  325       * @return {Array} Array of records that used to be present\n  326       */\n  ...\n  340      /**\n  341       * Returns all records that are already present and are still present in the new store\n  342:      * @param {Ext.data.Store} store The updated store instance\n  343       * @return {Object} Object of records that are still present from last time in format {id: record}\n  344       */\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\DataView\\Draggable.js:\n    4  <pre><code>\n    5  Ext.create('Ext.view.View', {\n    6:     mixins: {\n    7          draggable: 'Ext.ux.DataView.Draggable'\n    8      },\n    9  \n   10      initComponent: function() {\n   11:         this.mixins.draggable.init(this, {\n   12              ddConfig: {\n   13                  ddGroup: 'someGroup'\n   ..\n   51           * @property dataview\n   52           * @type Ext.view.View\n   53:          * The Ext.view.View instance that this DragZone is attached to\n   54           */\n   55          this.dataview = dataview;\n   ..\n   86           * @property dragZone\n   87           * @type Ext.dd.DragZone\n   88:          * The attached DragZone instane\n   89           */\n   90          this.dragZone = Ext.create('Ext.dd.DragZone', this.dataview.getEl(), config);\n   ..\n  155                  repairXY = repairEl.getXY();\n  156  \n  157:             //take the item's margins and padding into account to make the repair animation line up perfectly\n  158              repairXY[0] += repairEl.getPadding('t') + repairEl.getMargin('t');\n  159              repairXY[1] += repairEl.getPadding('l') + repairEl.getMargin('l');\n  ...\n  164  \n  165      /**\n  166:      * Updates the internal ghost DataView by ensuring it is rendered and contains the correct records\n  167       * @param {Array} records The set of records that is currently selected in the parent DataView\n  168       * @return {Ext.view.View} The Ghost DataView\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\DataView\\DragSelector.js:\n   15           * @property dataview\n   16           * @type Ext.view.View\n   17:          * The DataView bound to this instance\n   18           */\n   19          this.dataview = dataview;\n   ..\n   31      /**\n   32       * @private\n   33:      * Called when the attached DataView is rendered. This sets up the DragTracker instance that will be used\n   34       * to created a dragged selection area\n   35       */\n   ..\n   38           * @property tracker\n   39           * @type Ext.dd.DragTracker\n   40:          * The DragTracker attached to this instance. Note that the 4 on* functions are called in the scope of the \n   41:          * DragTracker ('this' refers to the DragTracker inside those functions), so we pass a reference to the \n   42           * DragSelector so that we can call this class's functions.\n   43           */\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\form\\DateTime.js:\n    9      /**\n   10       * @cfg {String/Object} defaultAutoCreate DomHelper element spec\n   11:      * Let superclass to create hidden field instead of textbox. Hidden will be submittend to server\n   12       */\n   13      defaultAutoCreate: {\n   ..\n   64      /**\n   65       * @private\n   66:      * creates DateField and TimeField and installs the necessary event handlers\n   67       */\n   68      initComponent: function() {\n   ..\n  359       */\n  360      getValue: function() {\n  361:         // create new instance of date\n  362          return this.dateValue ? new Date(this.dateValue) : '';\n  363      }, // eo function getValue\n  ...\n  541          val = val ? val : new Date(1970, 0, 1, 0, 0, 0);\n  542          var da;\n  543:         if (val instanceof Date) {\n  544              this.setDate(val);\n  545              this.setTime(val);\n  ...\n  593          var d = this.df.getValue();\n  594          if (d) {\n  595:             if (!(this.dateValue instanceof Date)) {\n  596                  this.initDateValue();\n  597                  if (!this.tf.getValue()) {\n  ...\n  616      updateTime: function() {\n  617          var t = this.tf.getValue();\n  618:         if (t && !(t instanceof Date)) {\n  619              t = Date.parseDate(t, this.tf.format);\n  620          }\n  ...\n  623              this.setDate(this.dateValue);\n  624          }\n  625:         if (this.dateValue instanceof Date) {\n  626              if (t) {\n  627                  this.dateValue.setHours(t.getHours());\n  ...\n  642      updateHidden: function() {\n  643          if (this.isRendered) {\n  644:             var value = this.dateValue instanceof Date ? this.dateValue.format(this.hiddenFormat) : '';\n  645              this.el.dom.value = value;\n  646          }\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\form\\DateTimePicker.js:\n   25  \n   26          var table = Ext.get(Ext.DomQuery.selectNode('table', this.el.dom));\n   27:         var tfEl = Ext.core.DomHelper.insertAfter(table, {\n   28              tag: 'div',\n   29              style: 'border:0px;',\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\form\\Toolbar.js:\n    6      //alternateClassName: 'Ext.PagingToolbar',\n    7      requires: ['Ext.toolbar.TextItem', 'Ext.form.field.Number'],\n    8:     mixins: {\n    9          bindable: 'Ext.util.Bindable'\n   10      },\n   ..\n   22      /**\n   23       * @cfg {Boolean} prependButtons\n   24:      * true to insert any configured items _before_ the paging buttons.\n   25       */\n   26      prependButtons: false,\n   ..\n  304                  width: me.inputItemWidth,\n  305                  formBind: true,\n  306:                 margins: '-1 2 3 2',\n  307                  listeners: {\n  308                      scope: me,\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\form\\ToolbarOld.js:\n    6      //alternateClassName: 'Ext.PagingToolbar',\n    7      requires: ['Ext.toolbar.TextItem', 'Ext.form.field.Number'],\n    8:     mixins: {\n    9          bindable: 'Ext.util.Bindable'    \n   10      },\n   ..\n   22      /**\n   23       * @cfg {Boolean} prependButtons\n   24:      * true to insert any configured items _before_ the paging buttons.\n   25       */\n   26      prependButtons: false,\n   ..\n  157  \n  158                          if(me.fireEvent('addrecord', me, newModel) !== false) {\n  159:                             me.store.insert(0,newModel);\n  160                              me.gotoAt(1);\n  161                              var btn = me.down('#edit');\n  ...\n  314                  width: me.inputItemWidth,\n  315                  formBind: true,\n  316:                 margins: '-1 2 3 2',\n  317                  listeners: {\n  318                      scope: me,\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\FiltersFeature.js:\n  135       * @cfg {Boolean} local\n  136       * <tt>true</tt> to use Ext.data.Store filter functions (local filtering)\n  137:      * instead of the default (<tt>false</tt>) server side filtering.\n  138       */\n  139      local : false,\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\BooleanFilter.js:\n   40      /**\n   41       * @private\n   42:      * Template method that is to initialize the filter and install required menu items.\n   43       */\n   44      init : function (config) {\n   ..\n   88      /**\n   89       * Template method that is to validate the provided Ext.data.Record\n   90:      * against the filters configuration.\n   91       * @param {Ext.data.Record} record The record to validate\n   92       * @return {Boolean} true if the record is valid within the bounds\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\DateFilter.js:\n   97      /**\n   98       * @private\n   99:      * Template method that is to initialize the filter and install required menu items.\n  100       */\n  101      init : function (config) {\n  ...\n  293      /**\n  294       * Template method that is to validate the provided Ext.data.Record\n  295:      * against the filters configuration.\n  296       * @param {Ext.data.Record} record The record to validate\n  297       * @return {Boolean} true if the record is valid within the bounds\n  ...\n  328      onPickerSelect: function(picker, date) {\n  329          // keep track of the picker value separately because the menu gets destroyed\n  330:         // when columns order changes.  We return this value from getValue() instead\n  331          // of picker.getValue()\n  332          this.values[picker.itemId] = date;\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\DateTimeFilter.js:\n  188      /**\n  189       * @private\n  190:      * Template method that is to initialize the filter and install required menu items.\n  191       */\n  192      init: function (config) {\n  ...\n  386                  datepicker = me.menu.down('datepicker[itemId=\"' + key + '\"]');\n  387                  // Note that calling the Ext.picker.Date:setValue() calls Ext.Date.clearTime(),\n  388:                 // which we don't want, so just call update() instead and set the value on the component.\n  389                  datepicker.update(val);\n  390                  datepicker.value = val;\n  ...\n  400      /**\n  401       * Template method that is to validate the provided Ext.data.Record\n  402:      * against the filters configuration.\n  403       * @param {Ext.data.Record} record The record to validate\n  404       * @return {Boolean} true if the record is valid within the bounds\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\Filter.js:\n   22      dataIndex : null,\n   23      /**\n   24:      * The filter configuration menu that will be installed into the filter submenu of a column menu.\n   25       * @type Ext.menu.Menu\n   26       * @property\n   ..\n   88      /**\n   89       * Template method to be implemented by all subclasses that is to\n   90:      * initialize the filter and install required menu items.\n   91       * Defaults to Ext.emptyFn.\n   92       */\n   ..\n  141      /**\n  142       * Template method to be implemented by all subclasses that is to\n  143:      * validates the provided Ext.data.Record against the filters configuration.\n  144       * Defaults to <tt>return true</tt>.\n  145       * @param {Ext.data.Record} record The record to validate\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\ListFilter.js:\n   33       * to back this list when the data source is **local**. If the\n   34       * data for the list is remote, use the {@link #store}\n   35:      * config instead.\n   36       *\n   37       * If neither store nor {@link #options} is specified, then the choices list is automatically\n   ..\n   99       * The {@link Ext.data.Store} this list should use as its data source\n  100       * when the data source is **remote**. If the data for the list\n  101:      * is local, use the {@link #options} config instead.\n  102       *\n  103       * If neither store nor {@link #options} is specified, then the choices list is automatically\n  ...\n  173      /**\n  174       * Template method that is to validate the provided Ext.data.Record\n  175:      * against the filters configuration.\n  176       * @param {Ext.data.Record} record The record to validate\n  177       * @return {Boolean} true if the record is valid within the bounds\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\NumericFilter.js:\n   12   * </code></pre>\n   13   * <p>Any of the configuration options for {@link Ext.ux.grid.menu.RangeMenu} can also be specified as\n   14:  * configurations to NumericFilter, and will be copied over to the internal menu instance automatically.</p>\n   15   */\n   16  Ext.define('Ext.ux.grid.filter.NumericFilter', {\n   ..\n   90      /**\n   91       * Template method that is to validate the provided Ext.data.Record\n   92:      * against the filters configuration.\n   93       * @param {Ext.data.Record} record The record to validate\n   94       * @return {Boolean} true if the record is valid within the bounds\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\filter\\StringFilter.js:\n   36      /**\n   37       * @private\n   38:      * Template method that is to initialize the filter and install required menu items.\n   39       */\n   40      init : function (config) {\n   ..\n  103      /**\n  104       * Template method that is to validate the provided Ext.data.Record\n  105:      * against the filters configuration.\n  106       * @param {Ext.data.Record} record The record to validate\n  107       * @return {Boolean} true if the record is valid within the bounds\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\grid\\menu\\ListMenu.js:\n  145                  text: records[i].get(me.labelField),\n  146                  group: gid,\n  147:                 checked: Ext.Array.contains(me.selected, itemValue),\n  148                  hideOnClick: false,\n  149                  value: itemValue,\n\nC:\\Users\\Rony\\Google Drive\\DEV\\WEB\\CBH\\ux\\window\\NumberPrompt.js:\n    6          this.promptContainer.remove(this.textField);\n    7          this.textField = this._createNumberField();\n    8:         this.promptContainer.insert(index, this.textField);\n    9      },\n   10  \n\n480 matches across 69 files\n",
			"settings":
			{
				"buffer_size": 179046,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "app/view/sales/FileFindFile.js",
			"settings":
			{
				"buffer_size": 9467,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ux/RowExpander.js",
			"settings":
			{
				"buffer_size": 10024,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/view/jobs/JobPurchaseOrderMaintenance.js",
			"settings":
			{
				"buffer_size": 95516,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/JSHint Inline/JSHint-Inline.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"fe",
				"Fetch: File"
			],
			[
				"",
				"Fetch: Package"
			],
			[
				"fet",
				"Fetch: Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"Package Control: install ",
				"Package Control: Install Package"
			],
			[
				"snipp",
				"Snippet: Bootstrap pagination"
			],
			[
				"snip",
				"Snippet: Bootstrap toolbar"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FilesGridx.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobPurchaseOrders.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPurchaseOrderMaintenance.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/Employees.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/controller/Home.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/form/DateTimeMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteOrderEntryQuickAdd.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteMaintenance.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteConfirmation.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileOverview.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileOrderEntry.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/InvoiceMaintenance.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobNewInvoice.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/SalesMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/PrintQueue.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/PrintQueue.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/AppEvents.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/FormReportCriteria.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/GlobalSettings.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorContacts.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/exclude.txt",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileForm.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/CurrencyList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobStatusHistoryList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/Customers.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/ItemsList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorsList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/InvoiceEditCharges.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/overrides/form/ComboBox.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/form/Toolbar.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/tlkpChargeCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/tlkpChargeCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/qfrmJobExemptFromPronacaReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/PaymentTerms.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/PaymentTerms.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/qfrmJobExemptFromPronacaReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/qfrmJobExemptFromPronacaReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/ManagerMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/resources/css/app.css",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/Items.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/index.html",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/ScheduleB.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/DataView/Draggable.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/CheckColumn.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/scripts/sessionsvars.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/ScheduleB.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/qfrmJobExemptFromProfitReportList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/qfrmJobExemptFromProfitReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/qfrmJobExemptFromProfitReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/TreeViewMain.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobOverview.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/controller/Logon.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteVendorSelection.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/scripts/behavior.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/CustomersList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobCurrencyMaster.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/qfrmJobOverviewPopupUpdateCurrency.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobStatusHistorySubDetails.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteConfirmationSubVendorInfo.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteEntry.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/ReportCriteria.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/tlkpInvoiceSubTotalCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/sales/tlkpInvoiceSubTotalCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/sales/ChargeCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/ChargeCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/ToolBar.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobFindJob.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobFindJobInvoice.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobFindPO.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPOEditItems.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/JobRolesList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileFindFile.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileFindQuote.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileLineEntry.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/ReportCriteria.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobStatus.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobStatus.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/CountriesForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/EmployeesForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/customers/CustomersForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/vendors/VendorsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/vendors/VendorsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/customers/CustomerContactsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/customers/CustomerContactsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/customers/CustomersForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/CheckColumnPatch.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobRoles.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobRoles.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/PaymentTermsList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/Employees.js",
		"/C/Users/Rony/AppData/Roaming/Sublime Text 2/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/CountriesForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobInformation.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileHeader.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/qfrmFileQuoteDetailsSub.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileQuoteDetail.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/vendors/Items.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/PageFrame.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/MainMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/ScheduleBList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/EmployeeList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteEditItemSummary.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/InputConvert.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/InputProfitMargin.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobPurchaseOrderItems.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/publish.bat",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/CurrencyRates.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/PaymentTerms.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/Vendors.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPurchaseOrderStatusHistoryList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/NavTree.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/CustomerContacts.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/CustomerShipAddress.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/InvoiceEditItems.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobOverviewPopupUpdateCurrency.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPOEditCharges.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPOEditInstruction.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPurchaseOrderStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorOriginAddress.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorWarehouse.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/sales/FileQuoteHeader.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileList.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"-*.sublime-workspace",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"INS",
			"bindings",
			"rowExpand",
			"onSplitBackorderClick",
			"storeCustomerShipAddress",
			"POCustShipKey",
			"currentPO",
			"POItemsPOKey",
			"DateTimeMenu",
			"CurrentUser: ",
			"CreateNew",
			"getCurrentUser",
			"CreateNew",
			"startDate",
			"Pronaca",
			"ClosedA",
			"widget",
			"tpl:",
			"Queue",
			"Tpl",
			"tpl",
			"displayTpl",
			"tpl:",
			"ItemKey",
			"CurrencyCode",
			"Currency",
			"format: ",
			"\"d/m/Y\"",
			"'d/m/Y'",
			"actioncolumn",
			"moment",
			"YESNO",
			"PrintQueueAdd",
			"'checkbox'",
			"setReadOnlyFormFields",
			"setChildDisabled",
			"PaymentTerms",
			"var view = grid.view;",
			"grid.tip.on",
			"rowEditingCharges",
			"delete",
			"File",
			"storeChargesKeys",
			"storeCustomerContacts",
			"rptPronacaReportClosedShipped",
			"JobExemptFromProfitReport",
			"onClickPronacaReport",
			"qfrmJobExemptFromProfitReport",
			"qfrmJobExemptFromProfitReportList",
			"getSelection",
			"blur",
			"onItemBlur",
			"ItemBlur",
			"PaymentTerms",
			"publish.bat",
			"storePaymentTerms",
			"onClickPronacaReport",
			"searchfield",
			"LoaderX",
			"onClickInternalQuoteReport",
			"rptPronacaReportQuotes",
			"StatusKey",
			"CustomerWebLogins",
			"onClickCustomerExtranetLog",
			"onClickqfrmJobExemptFromProfitReportList",
			"VendorOriginAddress",
			"VendorOrigin",
			"onVendorBlur",
			"onClickAddEditPO",
			"onFieldChange",
			"numbercolumn",
			"tabs",
			"accordion",
			"then(",
			"console.log",
			"doRefresh",
			"refresh",
			"\"refresh\"",
			"ScheduleB.js",
			"ScheduleB.",
			"ScheduleB",
			"ScheduleBLanguage",
			"idProperty",
			"doRefresh",
			"doRefresh:",
			"doRefre",
			"id",
			"id:",
			"lastOp",
			"doRefresh(",
			"lastOpt",
			"record.save({",
			"loadRecord",
			"OriginAddress ",
			"VendorOriginAddress",
			"onVendorBlur",
			"displayTpl",
			"tpl",
			"POVendorOriginAddress",
			"onViewDetailPriceHistory",
			"onClickEditPurchaseOrder",
			"onViewDetails",
			"Vendor",
			"setSilentMode",
			"width: 120,",
			"storeStatus",
			"gridstatus",
			"jobstatushistory",
			"JobStatusHistory",
			"executeReport",
			"loadPluginItems",
			"onSelectCustomerChange",
			"=<",
			"setReportEnvironment",
			"onClickPrintStatusReport",
			"printEnabled",
			"onClickEditPurchaseOrder",
			"Internal",
			"JobKey",
			"onClickEditCustomerQuote",
			"Status",
			"Print Status",
			"onBeginEdit",
			"PrintCustomerQ",
			"onClickPrintCustomerQuoteBtn",
			"storeChargesKeys",
			"rowEditingCharges",
			"storetlkpCategories"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"PrintQueue",
			"Employee",
			"JobExemptFromPronacaReport",
			"qfrmJobExemptFromPronacaReport",
			"onViewDetailPriceHistory",
			"flex: 1,",
			"storeExempt",
			"gridexempt",
			"qfrmJobExemptFromProfitReport",
			"<=",
			"jobRoleKey",
			"\"\\r\\n\"",
			"strWhere += ",
			"strWhere = strWhere + ",
			"JobStatusExpression",
			"vendors",
			"Criteria",
			"ReportCriteria",
			"CriteriaKey",
			"ReportCriteria",
			"//allowBlank: false,",
			"jobs.Job",
			"doNotSync: true,",
			"gridContacts",
			"deleteline",
			"JobRoleDescription",
			"JobRoles",
			"CBH",
			"me.reportName",
			"storeCust",
			"currentJob.data.",
			"= currentJob.data.",
			"Ext.Msg.wait(",
			"...', 'Wait');",
			"Ext.Msg.wait(",
			"field[name=QuoteVendorKey]",
			"POItems",
			"ItemWeight",
			"ItemVolume",
			"getUserRemember",
			"CBH.GlobalSettings.CipherPass",
			"#f58d37",
			"onPrintRecord",
			"panelQuote",
			"panelFile",
			"panelPrevious",
			"that",
			"onItemSchBImportKeyDoubleClick",
			"ScheduleB",
			"margin: '25 0 0 10',",
			"margin: '25 0 0",
			"margin: '0 0 25",
			"SchB",
			"SBLanguageKey",
			"ScheduleBLanguage",
			"SBLanguageKey",
			"ScheduleBLanguage",
			"SchBNum",
			"ScheduleB",
			"SchBNum",
			"ScheduleB",
			"ScheduleBList",
			"ScheduleB",
			"tsysEmployeeCodes",
			"EmployeeKey",
			"Employees",
			"Employee Maintenance",
			"Employees",
			"MainMenu",
			"qfrmJobOverviewPopupUpdateCurrency",
			"JobCurrencyMaster",
			"loadPluginCurrency",
			"JobOverviewPopupUpdateCurrency",
			"checkUnconfirmedVendor",
			"0.15,",
			"0.15",
			"qsumFileQuoteChargesByGLAccount",
			"0.1",
			"purchaseOrder",
			"invoice",
			"jobOverview",
			"invoice",
			"curInvoice",
			"gridInvoices",
			"qryJobInvoiceSearch",
			"JobFindJobInvoice",
			"qryJobInvoiceSearch",
			"qryPOSearch",
			"PO",
			"qryPOSearch",
			"storePO",
			"JobFindPO",
			"FileQuoteItemsSummary",
			"QSummary",
			"FileQuoteEditItemSummary",
			"onClickExportInvToPeach",
			"ICharge",
			"InvoiceEditCharges",
			"field[name=ISummary",
			"ISummary",
			"InvoiceEditItems",
			"+ me.JobNum +",
			"custEmail",
			"!custEmail",
			"custEmail",
			"}",
			"} else {",
			" { ",
			"if (",
			"\"\\n\"",
			" + ",
			"strEmailBody",
			"subject",
			"fwdEmail",
			"custEmail",
			"employeeEmail",
			"ForwarderEmail",
			"CustEmail",
			"EmployeeEmail",
			"curPO",
			"EmployeeEmail",
			"ForwarderEmail",
			"CustEmail",
			"Vendor",
			"JobPurchaseOrderStatusHistory",
			"qfrmJobPurchaseOrderStatusHistory",
			"newValue ? newValue : 0;",
			"down"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"settings":
					{
						"buffer_size": 179046,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										396,
										399
									],
									[
										476,
										479
									],
									[
										758,
										761
									],
									[
										1002,
										1005
									],
									[
										1190,
										1193
									],
									[
										1538,
										1541
									],
									[
										1766,
										1769
									],
									[
										1990,
										1993
									],
									[
										2186,
										2189
									],
									[
										2274,
										2277
									],
									[
										2341,
										2344
									],
									[
										2532,
										2535
									],
									[
										2597,
										2600
									],
									[
										2801,
										2804
									],
									[
										2838,
										2841
									],
									[
										2948,
										2951
									],
									[
										2964,
										2967
									],
									[
										3024,
										3027
									],
									[
										3227,
										3230
									],
									[
										3367,
										3370
									],
									[
										3435,
										3438
									],
									[
										3470,
										3473
									],
									[
										3560,
										3563
									],
									[
										3599,
										3602
									],
									[
										3840,
										3843
									],
									[
										3903,
										3906
									],
									[
										4020,
										4023
									],
									[
										4218,
										4221
									],
									[
										4384,
										4387
									],
									[
										4426,
										4429
									],
									[
										4658,
										4661
									],
									[
										4692,
										4695
									],
									[
										5189,
										5192
									],
									[
										5247,
										5250
									],
									[
										5577,
										5580
									],
									[
										5845,
										5848
									],
									[
										6141,
										6144
									],
									[
										6435,
										6438
									],
									[
										6696,
										6699
									],
									[
										6775,
										6778
									],
									[
										6808,
										6811
									],
									[
										7156,
										7159
									],
									[
										7242,
										7245
									],
									[
										7439,
										7442
									],
									[
										7526,
										7529
									],
									[
										7820,
										7823
									],
									[
										8003,
										8006
									],
									[
										8150,
										8153
									],
									[
										8235,
										8238
									],
									[
										8388,
										8391
									],
									[
										8404,
										8407
									],
									[
										8589,
										8592
									],
									[
										8605,
										8608
									],
									[
										8794,
										8797
									],
									[
										8869,
										8872
									],
									[
										8885,
										8888
									],
									[
										8921,
										8924
									],
									[
										9084,
										9087
									],
									[
										9136,
										9139
									],
									[
										9227,
										9230
									],
									[
										9268,
										9271
									],
									[
										9579,
										9582
									],
									[
										9595,
										9598
									],
									[
										9667,
										9670
									],
									[
										10040,
										10043
									],
									[
										10176,
										10179
									],
									[
										10380,
										10383
									],
									[
										10420,
										10423
									],
									[
										10533,
										10536
									],
									[
										10542,
										10545
									],
									[
										10615,
										10618
									],
									[
										10698,
										10701
									],
									[
										10772,
										10775
									],
									[
										10814,
										10817
									],
									[
										11057,
										11060
									],
									[
										11203,
										11206
									],
									[
										11375,
										11378
									],
									[
										11660,
										11663
									],
									[
										11993,
										11996
									],
									[
										12386,
										12389
									],
									[
										12582,
										12585
									],
									[
										12975,
										12978
									],
									[
										13211,
										13214
									],
									[
										13562,
										13565
									],
									[
										13948,
										13951
									],
									[
										14157,
										14160
									],
									[
										14334,
										14337
									],
									[
										14573,
										14576
									],
									[
										14834,
										14837
									],
									[
										15058,
										15061
									],
									[
										15254,
										15257
									],
									[
										15342,
										15345
									],
									[
										15409,
										15412
									],
									[
										15600,
										15603
									],
									[
										15665,
										15668
									],
									[
										15869,
										15872
									],
									[
										15906,
										15909
									],
									[
										16016,
										16019
									],
									[
										16032,
										16035
									],
									[
										16092,
										16095
									],
									[
										16295,
										16298
									],
									[
										16435,
										16438
									],
									[
										16503,
										16506
									],
									[
										16538,
										16541
									],
									[
										16628,
										16631
									],
									[
										16667,
										16670
									],
									[
										16908,
										16911
									],
									[
										16971,
										16974
									],
									[
										17088,
										17091
									],
									[
										17286,
										17289
									],
									[
										17452,
										17455
									],
									[
										17494,
										17497
									],
									[
										17726,
										17729
									],
									[
										17760,
										17763
									],
									[
										18257,
										18260
									],
									[
										18315,
										18318
									],
									[
										18645,
										18648
									],
									[
										18913,
										18916
									],
									[
										19209,
										19212
									],
									[
										19503,
										19506
									],
									[
										19764,
										19767
									],
									[
										19843,
										19846
									],
									[
										19876,
										19879
									],
									[
										20224,
										20227
									],
									[
										20310,
										20313
									],
									[
										20507,
										20510
									],
									[
										20594,
										20597
									],
									[
										20888,
										20891
									],
									[
										21071,
										21074
									],
									[
										21218,
										21221
									],
									[
										21303,
										21306
									],
									[
										21456,
										21459
									],
									[
										21472,
										21475
									],
									[
										21657,
										21660
									],
									[
										21673,
										21676
									],
									[
										21862,
										21865
									],
									[
										21937,
										21940
									],
									[
										21953,
										21956
									],
									[
										21989,
										21992
									],
									[
										22152,
										22155
									],
									[
										22204,
										22207
									],
									[
										22295,
										22298
									],
									[
										22336,
										22339
									],
									[
										22647,
										22650
									],
									[
										22663,
										22666
									],
									[
										22735,
										22738
									],
									[
										23108,
										23111
									],
									[
										23244,
										23247
									],
									[
										23448,
										23451
									],
									[
										23488,
										23491
									],
									[
										23601,
										23604
									],
									[
										23610,
										23613
									],
									[
										23683,
										23686
									],
									[
										23766,
										23769
									],
									[
										23840,
										23843
									],
									[
										23882,
										23885
									],
									[
										24125,
										24128
									],
									[
										24271,
										24274
									],
									[
										24443,
										24446
									],
									[
										24728,
										24731
									],
									[
										25061,
										25064
									],
									[
										25454,
										25457
									],
									[
										25650,
										25653
									],
									[
										26043,
										26046
									],
									[
										26279,
										26282
									],
									[
										26630,
										26633
									],
									[
										27016,
										27019
									],
									[
										27225,
										27228
									],
									[
										27402,
										27405
									],
									[
										27641,
										27644
									],
									[
										30795,
										30798
									],
									[
										30913,
										30916
									],
									[
										32400,
										32403
									],
									[
										33093,
										33096
									],
									[
										34641,
										34644
									],
									[
										34753,
										34756
									],
									[
										38418,
										38421
									],
									[
										38670,
										38673
									],
									[
										39008,
										39011
									],
									[
										39260,
										39263
									],
									[
										45380,
										45383
									],
									[
										46477,
										46480
									],
									[
										48194,
										48197
									],
									[
										60596,
										60599
									],
									[
										60759,
										60762
									],
									[
										61012,
										61015
									],
									[
										61223,
										61226
									],
									[
										61460,
										61463
									],
									[
										61777,
										61780
									],
									[
										61843,
										61846
									],
									[
										62163,
										62166
									],
									[
										62249,
										62252
									],
									[
										62295,
										62298
									],
									[
										62358,
										62361
									],
									[
										62426,
										62429
									],
									[
										62478,
										62481
									],
									[
										62653,
										62656
									],
									[
										62911,
										62914
									],
									[
										63227,
										63230
									],
									[
										63644,
										63647
									],
									[
										63734,
										63737
									],
									[
										63828,
										63831
									],
									[
										64217,
										64220
									],
									[
										64312,
										64315
									],
									[
										64353,
										64356
									],
									[
										64421,
										64424
									],
									[
										64494,
										64497
									],
									[
										64569,
										64572
									],
									[
										64643,
										64646
									],
									[
										64655,
										64658
									],
									[
										64742,
										64745
									],
									[
										64834,
										64837
									],
									[
										65162,
										65165
									],
									[
										65417,
										65420
									],
									[
										65751,
										65754
									],
									[
										66229,
										66232
									],
									[
										66602,
										66605
									],
									[
										66701,
										66704
									],
									[
										66740,
										66743
									],
									[
										66805,
										66808
									],
									[
										66875,
										66878
									],
									[
										66946,
										66949
									],
									[
										67222,
										67225
									],
									[
										67475,
										67478
									],
									[
										67800,
										67803
									],
									[
										67872,
										67875
									],
									[
										67943,
										67946
									],
									[
										68469,
										68472
									],
									[
										68561,
										68564
									],
									[
										68652,
										68655
									],
									[
										69187,
										69190
									],
									[
										69279,
										69282
									],
									[
										69803,
										69806
									],
									[
										86424,
										86427
									],
									[
										88126,
										88129
									],
									[
										97688,
										97691
									],
									[
										97774,
										97777
									],
									[
										97909,
										97912
									],
									[
										98076,
										98079
									],
									[
										98229,
										98232
									],
									[
										98524,
										98527
									],
									[
										98735,
										98738
									],
									[
										98830,
										98833
									],
									[
										98947,
										98950
									],
									[
										99121,
										99124
									],
									[
										99283,
										99286
									],
									[
										99577,
										99580
									],
									[
										99799,
										99802
									],
									[
										99898,
										99901
									],
									[
										100044,
										100047
									],
									[
										100223,
										100226
									],
									[
										100426,
										100429
									],
									[
										100718,
										100721
									],
									[
										101041,
										101044
									],
									[
										101441,
										101444
									],
									[
										101501,
										101504
									],
									[
										101794,
										101797
									],
									[
										102096,
										102099
									],
									[
										102331,
										102334
									],
									[
										102680,
										102683
									],
									[
										102977,
										102980
									],
									[
										103281,
										103284
									],
									[
										103516,
										103519
									],
									[
										103867,
										103870
									],
									[
										104231,
										104234
									],
									[
										104594,
										104597
									],
									[
										104927,
										104930
									],
									[
										105135,
										105138
									],
									[
										105429,
										105432
									],
									[
										105487,
										105490
									],
									[
										105765,
										105768
									],
									[
										106122,
										106125
									],
									[
										106471,
										106474
									],
									[
										106720,
										106723
									],
									[
										106763,
										106766
									],
									[
										107026,
										107029
									],
									[
										107347,
										107350
									],
									[
										107582,
										107585
									],
									[
										107848,
										107851
									],
									[
										107903,
										107906
									],
									[
										107999,
										108002
									],
									[
										108056,
										108059
									],
									[
										108112,
										108115
									],
									[
										108140,
										108143
									],
									[
										108387,
										108390
									],
									[
										108702,
										108705
									],
									[
										109035,
										109038
									],
									[
										109155,
										109158
									],
									[
										109354,
										109357
									],
									[
										109442,
										109445
									],
									[
										109574,
										109577
									],
									[
										109741,
										109744
									],
									[
										109795,
										109798
									],
									[
										110014,
										110017
									],
									[
										110273,
										110276
									],
									[
										110324,
										110327
									],
									[
										110336,
										110339
									],
									[
										110449,
										110452
									],
									[
										110685,
										110688
									],
									[
										110745,
										110748
									],
									[
										110994,
										110997
									],
									[
										111244,
										111247
									],
									[
										111454,
										111457
									],
									[
										111466,
										111469
									],
									[
										111676,
										111679
									],
									[
										111947,
										111950
									],
									[
										112127,
										112130
									],
									[
										112170,
										112173
									],
									[
										112372,
										112375
									],
									[
										112587,
										112590
									],
									[
										112867,
										112870
									],
									[
										113064,
										113067
									],
									[
										113235,
										113238
									],
									[
										113356,
										113359
									],
									[
										113654,
										113657
									],
									[
										113891,
										113894
									],
									[
										114222,
										114225
									],
									[
										114593,
										114596
									],
									[
										114915,
										114918
									],
									[
										115278,
										115281
									],
									[
										115392,
										115395
									],
									[
										115462,
										115465
									],
									[
										115776,
										115779
									],
									[
										116086,
										116089
									],
									[
										116169,
										116172
									],
									[
										116548,
										116551
									],
									[
										116838,
										116841
									],
									[
										117141,
										117144
									],
									[
										117445,
										117448
									],
									[
										117508,
										117511
									],
									[
										117808,
										117811
									],
									[
										117943,
										117946
									],
									[
										117993,
										117996
									],
									[
										118069,
										118072
									],
									[
										118213,
										118216
									],
									[
										118274,
										118277
									],
									[
										118322,
										118325
									],
									[
										118365,
										118368
									],
									[
										118449,
										118452
									],
									[
										118679,
										118682
									],
									[
										118835,
										118838
									],
									[
										119110,
										119113
									],
									[
										119377,
										119380
									],
									[
										119603,
										119606
									],
									[
										119890,
										119893
									],
									[
										120193,
										120196
									],
									[
										120527,
										120530
									],
									[
										120822,
										120825
									],
									[
										121149,
										121152
									],
									[
										121203,
										121206
									],
									[
										121478,
										121481
									],
									[
										121779,
										121782
									],
									[
										122117,
										122120
									],
									[
										122352,
										122355
									],
									[
										122644,
										122647
									],
									[
										122687,
										122690
									],
									[
										122945,
										122948
									],
									[
										123012,
										123015
									],
									[
										123132,
										123135
									],
									[
										123201,
										123204
									],
									[
										123268,
										123271
									],
									[
										123573,
										123576
									],
									[
										123867,
										123870
									],
									[
										124164,
										124167
									],
									[
										124383,
										124386
									],
									[
										124462,
										124465
									],
									[
										124527,
										124530
									],
									[
										124680,
										124683
									],
									[
										124741,
										124744
									],
									[
										124912,
										124915
									],
									[
										124946,
										124949
									],
									[
										125113,
										125116
									],
									[
										125379,
										125382
									],
									[
										125471,
										125474
									],
									[
										125909,
										125912
									],
									[
										126190,
										126193
									],
									[
										126521,
										126524
									],
									[
										126823,
										126826
									],
									[
										127114,
										127117
									],
									[
										127478,
										127481
									],
									[
										127806,
										127809
									],
									[
										128128,
										128131
									],
									[
										128461,
										128464
									],
									[
										128774,
										128777
									],
									[
										129028,
										129031
									],
									[
										129392,
										129395
									],
									[
										129742,
										129745
									],
									[
										130037,
										130040
									],
									[
										130406,
										130409
									],
									[
										130730,
										130733
									],
									[
										131071,
										131074
									],
									[
										131347,
										131350
									],
									[
										131677,
										131680
									],
									[
										131969,
										131972
									],
									[
										133768,
										133771
									],
									[
										134656,
										134659
									],
									[
										135535,
										135538
									],
									[
										136308,
										136311
									],
									[
										136953,
										136956
									],
									[
										136977,
										136980
									],
									[
										137835,
										137838
									],
									[
										137946,
										137949
									],
									[
										137978,
										137981
									],
									[
										138788,
										138791
									],
									[
										139307,
										139310
									],
									[
										139767,
										139770
									],
									[
										140215,
										140218
									],
									[
										142071,
										142074
									],
									[
										143748,
										143751
									],
									[
										143839,
										143842
									],
									[
										144288,
										144291
									],
									[
										149166,
										149169
									],
									[
										151527,
										151530
									],
									[
										151730,
										151733
									],
									[
										152556,
										152559
									],
									[
										153099,
										153102
									],
									[
										153167,
										153170
									],
									[
										153231,
										153234
									],
									[
										153307,
										153310
									],
									[
										154055,
										154058
									],
									[
										154136,
										154139
									],
									[
										155027,
										155030
									],
									[
										155991,
										155994
									],
									[
										162296,
										162299
									],
									[
										164455,
										164458
									],
									[
										164616,
										164619
									],
									[
										164889,
										164892
									],
									[
										165205,
										165208
									],
									[
										165319,
										165322
									],
									[
										165563,
										165566
									],
									[
										165810,
										165813
									],
									[
										166114,
										166117
									],
									[
										166390,
										166393
									],
									[
										166660,
										166663
									],
									[
										166805,
										166808
									],
									[
										167024,
										167027
									],
									[
										167250,
										167253
									],
									[
										167477,
										167480
									],
									[
										167840,
										167843
									],
									[
										168216,
										168219
									],
									[
										168419,
										168422
									],
									[
										168647,
										168650
									],
									[
										168783,
										168786
									],
									[
										169137,
										169140
									],
									[
										169334,
										169337
									],
									[
										169510,
										169513
									],
									[
										169751,
										169754
									],
									[
										169959,
										169962
									],
									[
										170187,
										170190
									],
									[
										170388,
										170391
									],
									[
										170625,
										170628
									],
									[
										170956,
										170959
									],
									[
										171249,
										171252
									],
									[
										171402,
										171405
									],
									[
										171629,
										171632
									],
									[
										171923,
										171926
									],
									[
										172080,
										172083
									],
									[
										172331,
										172334
									],
									[
										172584,
										172587
									],
									[
										172876,
										172879
									],
									[
										173158,
										173161
									],
									[
										173357,
										173360
									],
									[
										173711,
										173714
									],
									[
										173910,
										173913
									],
									[
										174323,
										174326
									],
									[
										174599,
										174602
									],
									[
										174944,
										174947
									],
									[
										175199,
										175202
									],
									[
										175545,
										175548
									],
									[
										175793,
										175796
									],
									[
										176030,
										176033
									],
									[
										176410,
										176413
									],
									[
										176756,
										176759
									],
									[
										177001,
										177004
									],
									[
										177475,
										177478
									],
									[
										177687,
										177690
									],
									[
										178043,
										178046
									],
									[
										178242,
										178245
									],
									[
										178629,
										178632
									],
									[
										178964,
										178967
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								120824,
								120824
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 22496.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/view/sales/FileFindFile.js",
					"settings":
					{
						"buffer_size": 9467,
						"regions":
						{
						},
						"selection":
						[
							[
								6878,
								6573
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2236.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "ux/RowExpander.js",
					"settings":
					{
						"buffer_size": 10024,
						"regions":
						{
						},
						"selection":
						[
							[
								1344,
								1344
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 3510.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/view/jobs/JobPurchaseOrderMaintenance.js",
					"settings":
					{
						"buffer_size": 95516,
						"regions":
						{
						},
						"selection":
						[
							[
								87620,
								87620
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 26553.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 144.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 314.0,
	"status_bar_visible": true
}
