{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"x",
				"x_DescriptionText"
			],
			[
				"store",
				"storeCategories"
			],
			[
				"onClickC",
				"onClickPronacaReportClosedShipped"
			],
			[
				"fun",
				"function"
			],
			[
				"onClic",
				"onClickInternalQuoteReport"
			],
			[
				"onCl",
				"onClickCustomerExtranetLog"
			],
			[
				"do",
				"down"
			],
			[
				"tr",
				"true"
			],
			[
				"rea",
				"readOnly"
			],
			[
				"tool",
				"toolbar"
			],
			[
				"save",
				"savedRecord"
			],
			[
				"tb",
				"tbLastOpt"
			],
			[
				"las",
				"lastOptions"
			],
			[
				"lastO",
				"lastOpt"
			],
			[
				"Sch",
				"SchBNum"
			],
			[
				"record",
				"records"
			],
			[
				"Origin",
				"OriginName"
			],
			[
				"job",
				"jobOverview"
			],
			[
				"PO",
				"POKey"
			],
			[
				"load",
				"loadPurchaseOrder"
			],
			[
				"cus",
				"custContainer"
			],
			[
				"Ex",
				"Exempt"
			],
			[
				"form",
				"formData"
			],
			[
				"stor",
				"storeContacts"
			],
			[
				"view",
				"viewConfig"
			],
			[
				"re",
				"reportName"
			],
			[
				"font",
				"font-weight"
			],
			[
				"padd",
				"padding-bottom"
			],
			[
				"str",
				"strWhere"
			],
			[
				"new",
				"newValue"
			],
			[
				"set",
				"setValue"
			],
			[
				"Jo",
				"JobStatus"
			],
			[
				"Opn",
				"OpenQuotes"
			],
			[
				"colu",
				"columnWidth"
			],
			[
				"Gr",
				"GroupByContact"
			],
			[
				"onClickP",
				"onClickPrintStatusReport"
			],
			[
				"pri",
				"printEnabled"
			],
			[
				"text",
				"textfield"
			],
			[
				"on",
				"onClickViewDetails"
			],
			[
				"lis",
				"listeners"
			],
			[
				"list",
				"List"
			],
			[
				"led",
				"leftPad"
			],
			[
				"Qh",
				"QHdrModifiedBy"
			],
			[
				"QHdrM",
				"QHdrModifiedBy"
			],
			[
				"QH",
				"QHdrMemo"
			],
			[
				"QHd",
				"QHdrRevision"
			],
			[
				"string",
				"stringLen"
			],
			[
				"quote",
				"quotekey"
			],
			[
				"date",
				"Date"
			],
			[
				"exe",
				"executeReport"
			],
			[
				"ex",
				"executeReport"
			],
			[
				"em",
				"employeeKey"
			],
			[
				"report",
				"reportName"
			],
			[
				"JobRo",
				"JobRoleKey"
			],
			[
				"com",
				"comboDateRange"
			],
			[
				"l",
				"length"
			],
			[
				"jo",
				"jobStatusExpression"
			],
			[
				"Job",
				"JobStatusExpression"
			],
			[
				"JobS",
				"JobStatus"
			],
			[
				"clos",
				"closedQuotes"
			],
			[
				"open",
				"openQuotes"
			],
			[
				"Repo",
				"reportName"
			],
			[
				"emp",
				"employees"
			],
			[
				"us",
				"userKey"
			],
			[
				"index",
				"indexOf"
			],
			[
				"co",
				"comboDateRange"
			],
			[
				"Ran",
				"DateRange"
			],
			[
				"st",
				"storeCriteria"
			],
			[
				"V",
				"VendorName"
			],
			[
				"Coun",
				"CountryKey"
			],
			[
				"Repor",
				"ReportCriteria"
			],
			[
				"grid",
				"gridcustomers"
			],
			[
				"item",
				"itemId"
			],
			[
				"Close",
				"ClosedQuotes"
			],
			[
				"Ope",
				"OpenQuotes"
			],
			[
				"Creat",
				"CreatedDate"
			],
			[
				"colum",
				"column"
			],
			[
				"col",
				"columnWidth"
			],
			[
				"Cu",
				"CustKey"
			],
			[
				"Cue",
				"CustKey"
			],
			[
				"gridconta",
				"gridcontacts"
			],
			[
				"fiel",
				"fieldValue"
			],
			[
				"fi",
				"fieldValue"
			],
			[
				"JobRole",
				"JobRoleSort"
			],
			[
				"onClickE",
				"onClickEditJobRolesList"
			],
			[
				"val",
				"value"
			],
			[
				"ran",
				"DateRange"
			],
			[
				"start",
				"startDate"
			],
			[
				"field",
				"fieldEnd"
			],
			[
				"star",
				"startDate"
			],
			[
				"End",
				"EndDate"
			],
			[
				"Star",
				"StartDate"
			],
			[
				"m",
				"month"
			],
			[
				"to",
				"today"
			],
			[
				"storeCu",
				"storeCustomers"
			],
			[
				"gridco",
				"gridcountries"
			],
			[
				"sel",
				"selModel"
			],
			[
				"da",
				"date"
			],
			[
				"t",
				"title"
			],
			[
				"remove",
				"removeAll"
			],
			[
				"Cust",
				"CustKey"
			],
			[
				"JobEM",
				"JobEmployeeEmployeeKey"
			],
			[
				"JobE",
				"JobEmployeeEmployeeKey"
			],
			[
				"dis",
				"disabled"
			],
			[
				"edi",
				"editable"
			],
			[
				"Fi",
				"FileDefaultCurrencySymbol"
			],
			[
				"par",
				"parentRecord"
			],
			[
				"sum",
				"summaryData"
			],
			[
				"return",
				"returnValue"
			],
			[
				"Form",
				"FormToolbar"
			],
			[
				"retu",
				"returnValue"
			],
			[
				"def",
				"defaultValue"
			],
			[
				"Cur",
				"CurrencySymbol"
			],
			[
				"QuoteItem",
				"QuoteItemCurrencyCode"
			],
			[
				"Curren",
				"CurrencyCode"
			],
			[
				"QuoteItemC",
				"QuoteItemCurrencyCode"
			],
			[
				"get",
				"getValue"
			],
			[
				"QuoteItemL",
				"QuoteItemLineCost"
			],
			[
				"ItemCurr",
				"ItemCurrencyRate"
			],
			[
				"curr",
				"currencySymbol"
			],
			[
				"de",
				"defaultValue"
			],
			[
				"Quote",
				"QuoteItemCost"
			],
			[
				"Btn",
				"PrintInternalQuoteBtn"
			],
			[
				"onGr",
				"onGridQuotesSelectChange"
			],
			[
				"Ite",
				"ItemVolume"
			],
			[
				"selec",
				"selectedItem"
			],
			[
				"Item",
				"ItemWeight"
			],
			[
				"se",
				"selectedItem"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/view/common/FormReportCriteria.js",
			"settings":
			{
				"buffer_size": 44666,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/view/vendors/ItemsList.js",
			"settings":
			{
				"buffer_size": 9373,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/view/vendors/VendorsList.js",
			"settings":
			{
				"buffer_size": 7236,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/view/sales/FileForm.js",
			"settings":
			{
				"buffer_size": 45107,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/view/jobs/InvoiceEditCharges.js",
			"settings":
			{
				"buffer_size": 13242,
				"line_ending": "Windows"
			}
		},
		{
			"file": "overrides/form/ComboBox.js",
			"settings":
			{
				"buffer_size": 6314,
				"line_ending": "Windows"
			}
		},
		{
			"file": "ux/form/Toolbar.js",
			"settings":
			{
				"buffer_size": 29585,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "// Ext.Loader.setConfig({enabled:true,paths:{\"Ext.ux\":\"ux\",Overrides:\"overrides\"}});\n// Ext.grid.RowEditor.prototype.cancelBtnText=\"Cancel\";\n// Ext.grid.RowEditor.prototype.saveBtnText=\"Save\";\n\n// Ext.JSON.encodeDate = function(b) {\n//     return'\"' + Ext.Date.format(b,\"c\") + '\"'\n// };\n\n// Ext.popupMsg = function() {\n//     var c;function d(b,a){if(b==\"Warning\"){return'<div class=\"msgError\"><p align=\"center\"><h3>'+a+\"</h3></p></div>\"}else{return'<div class=\"msgSuccess\"><p align=\"center\"><h3>'+a+\"</h3></p></div>\"}}return{msg:function(a,b){if(!c){if(a==\"Warning\"){c=Ext.DomHelper.insertFirst(document.body,{id:\"app-popup-error-div\"},true)}else{c=Ext.DomHelper.insertFirst(document.body,{id:\"app-popup-success-div\"},true)}}var g=Ext.String.format.apply(String,Array.prototype.slice.call(arguments,1));var h=Ext.DomHelper.append(c,d(a,g),true);h.hide();h.slideIn(\"t\").ghost(\"t\",{delay:1200,remove:true})},init:function(){if(!c){c=Ext.DomHelper.insertFirst(document.body,{id:\"app-popup-success-div\"},true)}}}}();\n\n//     Ext.onReady(function() {\n//         Ext.popupMsg.init;function d(){idleTime=idleTime+1;if(idleTime>=30){function a(b){if(b!==\"yes\"){Ext.util.Cookies.clear(\"CBHUserAuth\");\n//         Ext.util.Cookies.clear(\"CurrentUser\");window.location.reload()}}Ext.Msg.show({title:\"Inactivity Detected\",msg:\"Do you want keep this session?\",buttons:Ext.Msg.YESNO,icon:Ext.Msg.QUESTION,closable:false,fn:a,icon:Ext.Msg.Info})}}var c=setInterval(d,60*1000);document.onmousemove=function(a){idleTime=0};document.onkeypress=function(a){idleTime=0}});Ext.application({requires:[\"Ext.ux.Router\",\"Ext.ux.form.Toolbar\",\"Ext.ux.form.NumericField\",\"Ext.ux.window.NumberPrompt\",\"Overrides.form.field.Base\",\"Overrides.form.ComboBox\",\"Overrides.view.Table\",\"Overrides.data.Store\",\"Overrides.toolbar.Paging\"],routes:{\"/\":\"home#init\",logon:\"logon#passport\",\"users/:id/edit\":\"users#edit\"},controllers:[\"Home\",\"Logon\",\"Sales\"],name:\"CBH\",launch:function(){Ext.ux.Router.on({routemissed:function(b){Ext.Msg.show({title:\"Error 404\",msg:\"Route not found: \"+b,buttons:Ext.Msg.OK,icon:Ext.Msg.ERROR})},beforedispatch:function(d,e,f){},dispatch:function(h,e,g,f){if(f.id==\"Home\"){Ext.create(\"CBH.view.Viewport\")}}})}});\n\nExt.Loader.setConfig({\n    enabled: true,\n    disableCaching: false,\n    paths: {\n        'Ext.ux': 'ux',\n        'Ext.ux.DataView': 'ux/DataView/',\n        'Overrides': 'overrides'\n    }\n});\n\nExt.grid.RowEditor.prototype.cancelBtnText = \"Cancel\";\nExt.grid.RowEditor.prototype.saveBtnText = \"Save\";\n\n\n// Format date to UTC\nExt.JSON.encodeDate = function(o) {\n    return '\"' + Ext.Date.format(o, 'c') + '\"';\n};\n\nExt.popupMsg = function() {\n    var msgCt;\n\n    function createBox(t, s) {\n        if (t == \"Warning\") {\n            return '<div class=\"msgError\"><p align=\"center\"><h3>' + s + '</h3></p></div>';\n        } else {\n            //return '<div class=\"msgSuccess\"><div class=\"app-check\"/><h3>' + s + '</h3></div>';\n            return '<div class=\"msgSuccess\"><p align=\"center\"><h3>' + s + '</h3></p></div>';\n        }\n    }\n    return {\n        msg: function(title, format) {\n            //if(!msgCt){\n            if (title == \"Warning\") {\n                msgCt = Ext.DomHelper.insertFirst(document.body, {\n                    id: 'app-popup-error-div'\n                }, true);\n            } else {\n                msgCt = Ext.DomHelper.insertFirst(document.body, {\n                    id: 'app-popup-success-div'\n                }, true);\n            }\n            //};\n            var s = Ext.String.format.apply(String, Array.prototype.slice.call(arguments, 1));\n            var m = Ext.DomHelper.append(msgCt, createBox(title, s), true);\n            m.hide();\n            m.slideIn('t').ghost(\"t\", {\n                delay: 1200,\n                remove: true\n            });\n        },\n\n        init: function() {\n            //if(!msgCt){\n            // It's better to create the msg-div here in order to avoid re-layouts \n            // later that could interfere with the HtmlEditor and reset its iFrame.\n            //msgCt = Ext.DomHelper.insertFirst(document.body, {id:'app-popup-success-div'}, true);\n            //}\n        }\n    };\n}();\n\n\n// custom Vtype for vtype:'arancel'\nvar arancelTest = /^\\d{4}?[\\.]?\\d{2}[\\.]?\\d{4}$/i;\nExt.apply(Ext.form.field.VTypes, {\n    //  vtype validation function\n    arancel: function(val, field) {\n        return arancelTest.test(val);\n    },\n    // vtype Text property: The error text to display when the validation function returns false\n    arancelText: 'Not a valid.  Must be in the format \"9999.99.9999\".',\n    // vtype Mask property: The keystroke filter mask\n    arancelMask: /^\\d{4}?[\\.]?\\d{2}[\\.]?\\d{4}$/i\n});\n\nExt.ux.LoaderX = Ext.apply({}, {\n    load: function(fileList, callback, scope, preserveOrder) {\n        var scope = scope || this,\n            head = document.getElementsByTagName(\"head\")[0],\n            fragment = document.createDocumentFragment(),\n            numFiles = fileList.length,\n            loadedFiles = 0,\n            me = this;\n\n        // Loads a particular file from the fileList by index. This is used when preserving order\n        var loadFileIndex = function(index) {\n            head.appendChild(\n                me.buildScriptTag(fileList[index], onFileLoaded)\n            );\n        };\n\n        /**\n         * Callback function which is called after each file has been loaded. This calls the callback\n         * passed to load once the final file in the fileList has been loaded\n         */\n        var onFileLoaded = function() {\n            loadedFiles++;\n\n            //if this was the last file, call the callback, otherwise load the next file\n            if (numFiles == loadedFiles && typeof callback == 'function') {\n                callback.call(scope);\n            } else {\n                if (preserveOrder === true) {\n                    loadFileIndex(loadedFiles);\n                }\n            }\n        };\n\n        if (preserveOrder === true) {\n            loadFileIndex.call(this, 0);\n        } else {\n            //load each file (most browsers will do this in parallel)\n            Ext.each(fileList, function(file, index) {\n                fragment.appendChild(\n                    this.buildScriptTag(file, onFileLoaded)\n                );\n            }, this);\n\n            head.appendChild(fragment);\n        }\n    },\n\n    buildScriptTag: function(filename, callback) {\n        var exten = filename.substr(filename.lastIndexOf('.') + 1);\n        var today = new Date(),\n            href = '?_DC=' + today.getTime();\n\n        if (exten == 'js') {\n            var script = document.createElement('script');\n            script.type = \"text/javascript\";\n            script.src = filename + href;\n\n            //IE has a different way of handling <script> loads, so we need to check for it here\n            if (script.readyState) {\n                script.onreadystatechange = function() {\n                    if (script.readyState == \"loaded\" || script.readyState == \"complete\") {\n                        script.onreadystatechange = null;\n                        callback();\n                    }\n                };\n            } else {\n                script.onload = callback;\n            }\n            return script;\n        }\n        if (exten == 'css') {\n            var style = document.createElement('link');\n            style.rel = 'stylesheet';\n            style.type = 'text/css';\n            style.href = filename + href;\n            callback();\n            return style;\n        }\n    }\n});\n\nExt.onReady(function() {\n    Ext.tip.QuickTipManager.init();\n\n\n    function timerIncrement() {\n        idleTime = idleTime + 1;\n\n        if (idleTime >= 60) { // 60 minutes\n            var out = function(btn) {\n                if (btn !== \"yes\") {\n                    Ext.util.Cookies.clear(\"CBHUserAuth\");\n                    Ext.util.Cookies.clear(\"CurrentUser\");\n                    window.location.reload();\n                }\n            };\n\n            Ext.Msg.show({\n                title: 'Inactivity Detected',\n                msg: \"Do you want keep this session?\",\n                buttons: Ext.Msg.YESNO,\n                icon: Ext.Msg.QUESTION,\n                closable: false,\n                fn: out\n            });\n\n        }\n    }\n\n    // Load some style resources\n    Ext.ux.LoaderX.load(\n        ['app/resources/css/app.css', 'app/resources/css/data-view.css', 'app/resources/css/fonts.css'],\n        function() {\n            document.getElementById(\"loading\").style.display = 'none';\n        }\n    );\n\n    //Increment the idle time counter every minute.\n    var idleInterval = setInterval(timerIncrement, 60 * 1000); // 1 minute\n\n    //Zero the idle timer on mouse movement.\n    document.onmousemove = function(e) {\n        idleTime = 0;\n    };\n    document.onkeypress = function(e) {\n        idleTime = 0;\n    };\n    document.onmousedown = function(e) {\n        idleTime = 0;\n    };\n    document.onmouseup = function(e) {\n        idleTime = 0;\n    };\n});\n\nExt.setGlyphFontFamily('FontAwesome');\n\nExt.application({\n\n    requires: [\n        'CBH.GlobalSettings',\n        'CBH.AppEvents',\n        'CBH.view.Viewport',\n        'Ext.ux.Router',\n        'Ext.ux.form.Toolbar',\n        'Ext.ux.form.NumericField',\n        'Ext.ux.CheckColumn',\n        'Ext.ux.CheckColumnPatch',\n        'Ext.ux.form.SearchField',\n        'Ext.ux.form.field.TimePickerField',\n        'Ext.ux.form.DateTimePicker',\n        'Ext.ux.form.field.DateTimeField',\n        'Ext.ux.form.DateTimeMenu',\n        'Ext.ux.InputTextMask',\n        'Overrides.form.field.Date',\n        'Overrides.form.field.Base',\n        'Overrides.form.ComboBox',\n        'Overrides.view.Table',\n        'Overrides.data.Store',\n        'Overrides.data.proxy.Proxy',\n        'Overrides.toolbar.Paging',\n        'Overrides.util.Format',\n        'Overrides.grid.column.Action'\n    ],\n\n    routes: {\n        '/': 'home#init',\n        'logon': 'logon#passport',\n        'users/:id/edit': 'users#edit'\n    },\n\n    controllers: [\n        'Home',\n        'Logon'\n    ],\n\n    //autoCreateViewport: true,\n\n    name: 'CBH',\n\n    launch: function() {\n        /* \n         * Ext.ux.Router provides some events for better controlling\n         * dispatch flow\n         */\n        Ext.ux.Router.on({\n\n            routemissed: function(token) {\n                Ext.Msg.show({\n                    title: 'Error 404',\n                    msg: 'Route not found: ' + token,\n                    buttons: Ext.Msg.OK,\n                    icon: Ext.Msg.ERROR\n                });\n            },\n\n            beforedispatch: function(token, match, params) {\n                //consolex.log('beforedispatch ' + token);\n            },\n\n            /**\n             * For this example I'm using the dispatch event to render the view\n             * based on the token. Each route points to a controller and action. \n             * Here I'm using these 2 information to get the view and render.\n             */\n            dispatch: function(token, match, params, controller) {\n\n                //document.getElementById(\"loading\").style.display = 'none';\n\n                if (controller.id == \"Home\") {\n                    Ext.create(\"CBH.view.Viewport\");\n                }\n            }\n        });\n    }\n});\n",
			"file": "app.js",
			"file_size": 11605,
			"file_write_time": 131258163392569585,
			"settings":
			{
				"buffer_size": 11259,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "Packages/JSHint Inline/JSHint-Inline.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"fe",
				"Fetch: File"
			],
			[
				"",
				"Fetch: Package"
			],
			[
				"fet",
				"Fetch: Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"Package Control: install ",
				"Package Control: Install Package"
			],
			[
				"snipp",
				"Snippet: Bootstrap pagination"
			],
			[
				"snip",
				"Snippet: Bootstrap toolbar"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 125.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/qfrmJobExemptFromPronacaReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteMaintenance.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/CurrencyList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/PaymentTerms.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/PaymentTerms.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/qfrmJobExemptFromPronacaReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/qfrmJobExemptFromPronacaReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/controller/Home.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/ManagerMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/FormReportCriteria.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/GlobalSettings.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/AppEvents.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPurchaseOrderMaintenance.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorsList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/SalesMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/resources/css/app.css",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/InvoiceMaintenance.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/Items.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/index.html",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/ScheduleB.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/DataView/Draggable.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/CheckColumn.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/scripts/sessionsvars.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/form/Toolbar.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/ScheduleB.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/qfrmJobExemptFromProfitReportList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/qfrmJobExemptFromProfitReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/qfrmJobExemptFromProfitReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/TreeViewMain.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobStatusHistoryList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobOverview.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/controller/Logon.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteVendorSelection.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/scripts/behavior.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileOverview.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/CustomersList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobCurrencyMaster.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/qfrmJobOverviewPopupUpdateCurrency.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobStatusHistorySubDetails.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteConfirmationSubVendorInfo.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteEntry.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileOrderEntry.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/ReportCriteria.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/tlkpInvoiceSubTotalCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/sales/tlkpInvoiceSubTotalCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/sales/ChargeCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/ChargeCategories.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/ToolBar.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobFindJob.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobFindJobInvoice.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobFindPO.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPOEditItems.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/JobRolesList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileFindFile.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileFindQuote.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileForm.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileLineEntry.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/ReportCriteria.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobStatus.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobStatus.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/CountriesForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/EmployeesForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/customers/CustomersForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/vendors/VendorsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/vendors/VendorsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/customers/CustomerContactsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/customers/CustomerContactsForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/customers/CustomersForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/ux/CheckColumnPatch.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobRoles.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/jobs/JobRoles.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/PaymentTermsList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/Employees.js",
		"/C/Users/Rony/AppData/Roaming/Sublime Text 2/Packages/HTML-CSS-JS Prettify/HTMLPrettify.sublime-settings",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/CountriesForReport.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobInformation.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileHeader.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/qfrmFileQuoteDetailsSub.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileQuoteDetail.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/vendors/Items.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/ItemsList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/PageFrame.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/MainMenu.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/ScheduleBList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/EmployeeList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteConfirmation.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteEditItemSummary.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/InputConvert.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/InputProfitMargin.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/jobs/JobPurchaseOrderItems.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/exclude.txt",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/publish.bat",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/CurrencyRates.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/PaymentTerms.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/Customers.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/manager/Employees.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/Vendors.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPurchaseOrderStatusHistoryList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/NavTree.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/CustomerContacts.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/customers/CustomerShipAddress.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/InvoiceEditCharges.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/InvoiceEditItems.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobOverviewPopupUpdateCurrency.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPOEditCharges.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPOEditInstruction.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/jobs/JobPurchaseOrderStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileStatusHistory.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorContacts.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorOriginAddress.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/vendors/VendorWarehouse.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/sales/FileQuoteHeader.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileList.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/QuotesById.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/Logon.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/common/Users.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/overrides/tree/Column.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/common/MainHeader.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/appViewPort.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/overrides/grid/column/Action.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/model/sales/FileQuoteHeader.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/view/sales/FileQuoteOrderEntryQuickAdd.js",
		"/C/Users/Rony/Google Drive/DEV/WEB/CBH/app/store/common/ScheduleB.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"storeCustomerContacts",
			"rptPronacaReportClosedShipped",
			"JobExemptFromProfitReport",
			"onClickPronacaReport",
			"qfrmJobExemptFromProfitReport",
			"qfrmJobExemptFromProfitReportList",
			"getSelection",
			"blur",
			"onItemBlur",
			"ItemBlur",
			"PaymentTerms",
			"publish.bat",
			"storePaymentTerms",
			"onClickPronacaReport",
			"searchfield",
			"LoaderX",
			"onClickInternalQuoteReport",
			"rptPronacaReportQuotes",
			"StatusKey",
			"CustomerWebLogins",
			"onClickCustomerExtranetLog",
			"onClickqfrmJobExemptFromProfitReportList",
			"VendorOriginAddress",
			"VendorOrigin",
			"onVendorBlur",
			"onClickAddEditPO",
			"onFieldChange",
			"numbercolumn",
			"tabs",
			"accordion",
			"then(",
			"console.log",
			"doRefresh",
			"refresh",
			"\"refresh\"",
			"ScheduleB.js",
			"ScheduleB.",
			"ScheduleB",
			"ScheduleBLanguage",
			"idProperty",
			"doRefresh",
			"doRefresh:",
			"doRefre",
			"id",
			"id:",
			"lastOp",
			"doRefresh(",
			"lastOpt",
			"record.save({",
			"loadRecord",
			"OriginAddress ",
			"VendorOriginAddress",
			"onVendorBlur",
			"displayTpl",
			"tpl",
			"POVendorOriginAddress",
			"onViewDetailPriceHistory",
			"onClickEditPurchaseOrder",
			"onViewDetails",
			"Vendor",
			"setSilentMode",
			"width: 120,",
			"storeStatus",
			"gridstatus",
			"jobstatushistory",
			"JobStatusHistory",
			"executeReport",
			"loadPluginItems",
			"onSelectCustomerChange",
			"=<",
			"setReportEnvironment",
			"onClickPrintStatusReport",
			"printEnabled",
			"onClickEditPurchaseOrder",
			"Internal",
			"JobKey",
			"onClickEditCustomerQuote",
			"Status",
			"Print Status",
			"onBeginEdit",
			"PrintCustomerQ",
			"onClickPrintCustomerQuoteBtn",
			"storeChargesKeys",
			"rowEditingCharges",
			"storetlkpCategories",
			"storetlkpCa",
			"storetlkpCD",
			"console",
			"storeCriteria",
			"Me.cboEmployeeRole",
			"vbCrLf _",
			"strWhere +=  ",
			"strWhere = strWhere +",
			"strWhere = strWhere & ",
			"JobStatusOper",
			"employees",
			"Term",
			"PaymentTerms",
			"TermKey",
			"PaymentTerms",
			"allowBlank: false,",
			"common.",
			"doNotSync; true,",
			"gridStatus",
			"deleteitem",
			"CBH.model",
			"BrokerName",
			"Brokers",
			"IAMTrading",
			"\"rptJobSummary\"",
			"storeFileList",
			"POCurrencyRate",
			"x_VendorAddress",
			"selection.data.",
			": selection.data.",
			"gotoAt",
			"doRefr",
			"onBeginEdit",
			"getCurrentRecord",
			"currentRecord",
			"gotoAt",
			"onClickEditStatusHistory",
			"History",
			"CreatePO",
			"Roles",
			"New Job",
			"Roles",
			"onViewItemClick"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"JobExemptFromPronacaReport",
			"qfrmJobExemptFromPronacaReport",
			"onViewDetailPriceHistory",
			"flex: 1,",
			"storeExempt",
			"gridexempt",
			"qfrmJobExemptFromProfitReport",
			"<=",
			"jobRoleKey",
			"\"\\r\\n\"",
			"strWhere += ",
			"strWhere = strWhere + ",
			"JobStatusExpression",
			"vendors",
			"Criteria",
			"ReportCriteria",
			"CriteriaKey",
			"ReportCriteria",
			"//allowBlank: false,",
			"jobs.Job",
			"doNotSync: true,",
			"gridContacts",
			"deleteline",
			"JobRoleDescription",
			"JobRoles",
			"CBH",
			"me.reportName",
			"storeCust",
			"currentJob.data.",
			"= currentJob.data.",
			"Ext.Msg.wait(",
			"...', 'Wait');",
			"Ext.Msg.wait(",
			"field[name=QuoteVendorKey]",
			"POItems",
			"ItemWeight",
			"ItemVolume",
			"getUserRemember",
			"CBH.GlobalSettings.CipherPass",
			"#f58d37",
			"onPrintRecord",
			"panelQuote",
			"panelFile",
			"panelPrevious",
			"that",
			"onItemSchBImportKeyDoubleClick",
			"ScheduleB",
			"margin: '25 0 0 10',",
			"margin: '25 0 0",
			"margin: '0 0 25",
			"SchB",
			"SBLanguageKey",
			"ScheduleBLanguage",
			"SBLanguageKey",
			"ScheduleBLanguage",
			"SchBNum",
			"ScheduleB",
			"SchBNum",
			"ScheduleB",
			"ScheduleBList",
			"ScheduleB",
			"tsysEmployeeCodes",
			"EmployeeKey",
			"Employees",
			"Employee Maintenance",
			"Employees",
			"MainMenu",
			"qfrmJobOverviewPopupUpdateCurrency",
			"JobCurrencyMaster",
			"loadPluginCurrency",
			"JobOverviewPopupUpdateCurrency",
			"checkUnconfirmedVendor",
			"0.15,",
			"0.15",
			"qsumFileQuoteChargesByGLAccount",
			"0.1",
			"purchaseOrder",
			"invoice",
			"jobOverview",
			"invoice",
			"curInvoice",
			"gridInvoices",
			"qryJobInvoiceSearch",
			"JobFindJobInvoice",
			"qryJobInvoiceSearch",
			"qryPOSearch",
			"PO",
			"qryPOSearch",
			"storePO",
			"JobFindPO",
			"FileQuoteItemsSummary",
			"QSummary",
			"FileQuoteEditItemSummary",
			"onClickExportInvToPeach",
			"ICharge",
			"InvoiceEditCharges",
			"field[name=ISummary",
			"ISummary",
			"InvoiceEditItems",
			"+ me.JobNum +",
			"custEmail",
			"!custEmail",
			"custEmail",
			"}",
			"} else {",
			" { ",
			"if (",
			"\"\\n\"",
			" + ",
			"strEmailBody",
			"subject",
			"fwdEmail",
			"custEmail",
			"employeeEmail",
			"ForwarderEmail",
			"CustEmail",
			"EmployeeEmail",
			"curPO",
			"EmployeeEmail",
			"ForwarderEmail",
			"CustEmail",
			"Vendor",
			"JobPurchaseOrderStatusHistory",
			"qfrmJobPurchaseOrderStatusHistory",
			"newValue ? newValue : 0;",
			"down",
			"x_Line",
			"POItems"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/view/common/FormReportCriteria.js",
					"settings":
					{
						"buffer_size": 44666,
						"regions":
						{
						},
						"selection":
						[
							[
								43811,
								43811
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 12905.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/view/vendors/ItemsList.js",
					"settings":
					{
						"buffer_size": 9373,
						"regions":
						{
						},
						"selection":
						[
							[
								407,
								407
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "app/view/vendors/VendorsList.js",
					"settings":
					{
						"buffer_size": 7236,
						"regions":
						{
						},
						"selection":
						[
							[
								349,
								477
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "app/view/sales/FileForm.js",
					"settings":
					{
						"buffer_size": 45107,
						"regions":
						{
						},
						"selection":
						[
							[
								35421,
								35438
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 11803.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "app/view/jobs/InvoiceEditCharges.js",
					"settings":
					{
						"buffer_size": 13242,
						"regions":
						{
						},
						"selection":
						[
							[
								546,
								546
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 168.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "overrides/form/ComboBox.js",
					"settings":
					{
						"buffer_size": 6314,
						"regions":
						{
						},
						"selection":
						[
							[
								2917,
								2917
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 796.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "ux/form/Toolbar.js",
					"settings":
					{
						"buffer_size": 29585,
						"regions":
						{
						},
						"selection":
						[
							[
								3554,
								3554
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1302.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "app.js",
					"settings":
					{
						"buffer_size": 11259,
						"regions":
						{
						},
						"selection":
						[
							[
								2502,
								2502
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 144.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": false,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 314.0,
	"status_bar_visible": true
}
